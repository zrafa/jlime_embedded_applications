   1              		.section .mdebug.abi32
   2              		.previous
   3              		.gnu_attribute 4, 3
   4              		.abicalls
  12              	$Ltext0:
  13              		.globl	codetree
  14              		.data
  15              		.align	2
  18              	codetree:
  19 0000 35483453 		.ascii	"5H4S V3IU F   2E L R+  A P W J1 6B=D/X N C K Y T7Z G Q M"
  19      20563349 
  19      55204620 
  19      20203245 
  19      204C2052 
  20 0038 3820204F 		.ascii	"8  O9 0\000"
  20      39203000 
  21              		.text
  22              		.align	2
  23              		.globl	InMorseCodeTree
  24              	$LFB0 = .
  25              		.file 1 "uCmorse/inmorse.c"
   0:uCmorse/inmorse.c **** #include <assert.h>
   1:uCmorse/inmorse.c **** #include <stdlib.h> // for assert()
   2:uCmorse/inmorse.c **** 
   3:uCmorse/inmorse.c **** #if defined(AVR)
   4:uCmorse/inmorse.c **** #  include <avr/pgmspace.h>
   5:uCmorse/inmorse.c **** #else
   6:uCmorse/inmorse.c **** #  define PROGMEM
   7:uCmorse/inmorse.c **** #  define pgm_read_byte(x) *(x)
   8:uCmorse/inmorse.c **** #endif
   9:uCmorse/inmorse.c **** 
  10:uCmorse/inmorse.c **** char codetree[] PROGMEM = "5H4S V3IU F   2E L R+  A P W J1 6B=D/X N C K Y T7Z G Q M8  O9 0";
  11:uCmorse/inmorse.c **** 
  12:uCmorse/inmorse.c **** char InMorseCodeTree(int idx) {
  26              		.loc 1 13 0
  27              		.set	nomips16
  28              		.ent	InMorseCodeTree
  30              	InMorseCodeTree:
  31              		.frame	$fp,8,$31		# vars= 0, regs= 1/0, args= 0, gp= 0
  32              		.mask	0x40000000,-4
  33              		.fmask	0x00000000,0
  34              		.set	noreorder
  35              		.set	nomacro
  36              		
  37 0000 F8FFBD27 		addiu	$sp,$sp,-8
  38              	$LCFI0:
  39 0004 0400BEAF 		sw	$fp,4($sp)
  40              	$LCFI1:
  41 0008 21F0A003 		move	$fp,$sp
  42              	$LCFI2:
  43 000c 0800C4AF 		sw	$4,8($fp)
  13:uCmorse/inmorse.c **** #ifdef AVR
  14:uCmorse/inmorse.c ****   return pgm_read_byte(codetree + idx);
  15:uCmorse/inmorse.c **** #else
  16:uCmorse/inmorse.c ****   return codetree[idx];
  44              		.loc 1 17 0
  45 0010 0800C38F 		lw	$3,8($fp)
  46 0014 0000023C 		lui	$2,%hi(codetree)
  47 0018 00004224 		addiu	$2,$2,%lo(codetree)
  48 001c 21106200 		addu	$2,$3,$2
  49 0020 00004280 		lb	$2,0($2)
  17:uCmorse/inmorse.c **** #endif
  18:uCmorse/inmorse.c **** }
  50              		.loc 1 19 0
  51 0024 21E8C003 		move	$sp,$fp
  52 0028 0400BE8F 		lw	$fp,4($sp)
  53 002c 0800BD27 		addiu	$sp,$sp,8
  54 0030 0800E003 		j	$31
  55 0034 00000000 		nop
  56              	
  57              		.set	macro
  58              		.set	reorder
  59              		.end	InMorseCodeTree
  60              	$LFE0:
  62              		.rdata
  63              		.align	2
  64              	$LC0:
  65 0000 7000     		.ascii	"p\000"
  66 0002 0000     		.align	2
  67              	$LC1:
  68 0004 75436D6F 		.ascii	"uCmorse/inmorse.c\000"
  68      7273652F 
  68      696E6D6F 
  68      7273652E 
  68      6300
  69              		.text
  70              		.align	2
  71              		.globl	InMorseNext
  72              	$LFB1 = .
  19:uCmorse/inmorse.c **** 
  20:uCmorse/inmorse.c **** char InMorseNext(char dotOrDash, char **p, int *pLen) {
  73              		.loc 1 21 0
  74              		.set	nomips16
  75              		.ent	InMorseNext
  77              	InMorseNext:
  78              		.frame	$fp,32,$31		# vars= 0, regs= 2/0, args= 16, gp= 8
  79              		.mask	0xc0000000,-4
  80              		.fmask	0x00000000,0
  81              		.set	noreorder
  82              		.set	nomacro
  83              		
  84 0038 E0FFBD27 		addiu	$sp,$sp,-32
  85              	$LCFI3:
  86 003c 1C00BFAF 		sw	$31,28($sp)
  87              	$LCFI4:
  88 0040 1800BEAF 		sw	$fp,24($sp)
  89              	$LCFI5:
  90 0044 21F0A003 		move	$fp,$sp
  91              	$LCFI6:
  92 0048 00001C3C 		lui	$28,%hi(__gnu_local_gp)
  93 004c 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
  94 0050 1000BCAF 		.cprestore	16
  95 0054 21108000 		move	$2,$4
  96 0058 2400C5AF 		sw	$5,36($fp)
  97 005c 2800C6AF 		sw	$6,40($fp)
  98 0060 2000C2A3 		sb	$2,32($fp)
  21:uCmorse/inmorse.c ****   assert(p);
  99              		.loc 1 22 0
 100 0064 2400C28F 		lw	$2,36($fp)
 101 0068 00000000 		nop
 102 006c 0D004014 		bne	$2,$0,$L4
 103 0070 00000000 		nop
 104              	
 105 0074 0000023C 		lui	$2,%hi($LC0)
 106 0078 00004424 		addiu	$4,$2,%lo($LC0)
 107 007c 0000023C 		lui	$2,%hi($LC1)
 108 0080 04004524 		addiu	$5,$2,%lo($LC1)
 109 0084 16000624 		li	$6,22			# 0x16
 110 0088 0000023C 		lui	$2,%hi(__PRETTY_FUNCTION__.1771)
 111 008c 18004724 		addiu	$7,$2,%lo(__PRETTY_FUNCTION__.1771)
 112 0090 0000828F 		lw	$2,%call16(__assert_fail)($28)
 113 0094 00000000 		nop
 114 0098 21C84000 		move	$25,$2
 115 009c 09F82003 		jalr	$25
 116 00a0 00000000 		nop
 117              	
 118              	$L4:
  22:uCmorse/inmorse.c ****   if (!*p) { // New character
 119              		.loc 1 23 0
 120 00a4 2400C28F 		lw	$2,36($fp)
 121 00a8 00000000 		nop
 122 00ac 0000428C 		lw	$2,0($2)
 123 00b0 00000000 		nop
 124 00b4 08004014 		bne	$2,$0,$L5
 125 00b8 00000000 		nop
 126              	
  23:uCmorse/inmorse.c ****     *p = codetree;
 127              		.loc 1 24 0
 128 00bc 2400C28F 		lw	$2,36($fp)
 129 00c0 0000033C 		lui	$3,%hi(codetree)
 130 00c4 00006324 		addiu	$3,$3,%lo(codetree)
 131 00c8 000043AC 		sw	$3,0($2)
  24:uCmorse/inmorse.c ****     *pLen = 63;
 132              		.loc 1 25 0
 133 00cc 2800C28F 		lw	$2,40($fp)
 134 00d0 3F000324 		li	$3,63			# 0x3f
 135 00d4 000043AC 		sw	$3,0($2)
 136              	$L5:
  25:uCmorse/inmorse.c ****   }
  26:uCmorse/inmorse.c ****   *pLen = (*pLen - 1)/2;
 137              		.loc 1 27 0
 138 00d8 2800C28F 		lw	$2,40($fp)
 139 00dc 00000000 		nop
 140 00e0 0000428C 		lw	$2,0($2)
 141 00e4 00000000 		nop
 142 00e8 FFFF4224 		addiu	$2,$2,-1
 143 00ec C21F0200 		srl	$3,$2,31
 144 00f0 21106200 		addu	$2,$3,$2
 145 00f4 43100200 		sra	$2,$2,1
 146 00f8 21184000 		move	$3,$2
 147 00fc 2800C28F 		lw	$2,40($fp)
 148 0100 00000000 		nop
 149 0104 000043AC 		sw	$3,0($2)
  27:uCmorse/inmorse.c **** 
  28:uCmorse/inmorse.c ****   if (dotOrDash == '-') {
 150              		.loc 1 29 0
 151 0108 2000C383 		lb	$3,32($fp)
 152 010c 2D000224 		li	$2,45			# 0x2d
 153 0110 0F006214 		bne	$3,$2,$L6
 154 0114 00000000 		nop
 155              	
  29:uCmorse/inmorse.c ****     *p += *pLen + 1;
 156              		.loc 1 30 0
 157 0118 2400C28F 		lw	$2,36($fp)
 158 011c 00000000 		nop
 159 0120 0000438C 		lw	$3,0($2)
 160 0124 2800C28F 		lw	$2,40($fp)
 161 0128 00000000 		nop
 162 012c 0000428C 		lw	$2,0($2)
 163 0130 00000000 		nop
 164 0134 01004224 		addiu	$2,$2,1
 165 0138 21186200 		addu	$3,$3,$2
 166 013c 2400C28F 		lw	$2,36($fp)
 167 0140 00000000 		nop
 168 0144 000043AC 		sw	$3,0($2)
 169 0148 08000010 		b	$L7
 170 014c 00000000 		nop
 171              	
 172              	$L6:
  30:uCmorse/inmorse.c ****   } else if (dotOrDash == '.') {
 173              		.loc 1 31 0
 174 0150 2000C383 		lb	$3,32($fp)
 175 0154 2E000224 		li	$2,46			# 0x2e
 176 0158 04006210 		beq	$3,$2,$L7
 177 015c 00000000 		nop
 178              	
 179              	$L8:
  31:uCmorse/inmorse.c ****     // no change, we take the first half
  32:uCmorse/inmorse.c ****   } else {
  33:uCmorse/inmorse.c ****     return -1;
 180              		.loc 1 34 0
 181 0160 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 182 0164 17000010 		b	$L9
 183 0168 00000000 		nop
 184              	
 185              	$L7:
  34:uCmorse/inmorse.c ****   }
  35:uCmorse/inmorse.c ****   if (*pLen == 0) 
 186              		.loc 1 36 0
 187 016c 2800C28F 		lw	$2,40($fp)
 188 0170 00000000 		nop
 189 0174 0000428C 		lw	$2,0($2)
 190 0178 00000000 		nop
 191 017c 04004014 		bne	$2,$0,$L10
 192 0180 00000000 		nop
 193              	
  36:uCmorse/inmorse.c ****     return -2;
 194              		.loc 1 37 0
 195 0184 FEFF0224 		li	$2,-2			# 0xfffffffffffffffe
 196 0188 0E000010 		b	$L9
 197 018c 00000000 		nop
 198              	
 199              	$L10:
  37:uCmorse/inmorse.c ****   return pgm_read_byte(*p + (*pLen-1)/2);
 200              		.loc 1 38 0
 201 0190 2400C28F 		lw	$2,36($fp)
 202 0194 00000000 		nop
 203 0198 0000438C 		lw	$3,0($2)
 204 019c 2800C28F 		lw	$2,40($fp)
 205 01a0 00000000 		nop
 206 01a4 0000428C 		lw	$2,0($2)
 207 01a8 00000000 		nop
 208 01ac FFFF4224 		addiu	$2,$2,-1
 209 01b0 C2270200 		srl	$4,$2,31
 210 01b4 21108200 		addu	$2,$4,$2
 211 01b8 43100200 		sra	$2,$2,1
 212 01bc 21106200 		addu	$2,$3,$2
 213 01c0 00004280 		lb	$2,0($2)
 214              	$L9:
  38:uCmorse/inmorse.c **** }
 215              		.loc 1 39 0
 216 01c4 21E8C003 		move	$sp,$fp
 217 01c8 1C00BF8F 		lw	$31,28($sp)
 218 01cc 1800BE8F 		lw	$fp,24($sp)
 219 01d0 2000BD27 		addiu	$sp,$sp,32
 220 01d4 0800E003 		j	$31
 221 01d8 00000000 		nop
 222              	
 223              		.set	macro
 224              		.set	reorder
 225              		.end	InMorseNext
 226              	$LFE1:
 228              		.rdata
 229 0016 0000     		.align	2
 232              	__PRETTY_FUNCTION__.1771:
 233 0018 496E4D6F 		.ascii	"InMorseNext\000"
 233      7273654E 
 233      65787400 
 295              	$Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 uCmorse/inmorse.c
     /tmp/ccw1Xnpe.s:18     .data:0000000000000000 codetree
     /tmp/ccw1Xnpe.s:30     .text:0000000000000000 InMorseCodeTree
     /tmp/ccw1Xnpe.s:77     .text:0000000000000038 InMorseNext
     /tmp/ccw1Xnpe.s:232    .rodata:0000000000000018 __PRETTY_FUNCTION__.1771

UNDEFINED SYMBOLS
__gnu_local_gp
__assert_fail
