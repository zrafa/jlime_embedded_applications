   1              		.section .mdebug.abi32
   2              		.previous
   3              		.gnu_attribute 4, 3
   4              		.abicalls
  12              	$Ltext0:
  13              	
  14              		.comm	bgUserData,4,4
  15              		.align	2
  16              		.globl	SetUserData
  17              	$LFB0 = .
  18              		.file 1 "bgtree/bgCore.c"
   0:bgtree/bgCore.c **** #include "bgCore.h"
   1:bgtree/bgCore.c **** #include "Platform.h"
   2:bgtree/bgCore.c **** #include <assert.h>
   3:bgtree/bgCore.c **** #include <stdlib.h>
   4:bgtree/bgCore.c **** #include <stdio.h>
   5:bgtree/bgCore.c **** 
   6:bgtree/bgCore.c **** void *bgUserData;
   7:bgtree/bgCore.c **** 
   8:bgtree/bgCore.c **** void SetUserData(void *userData) {
  19              		.loc 1 9 0
  20              		.set	nomips16
  21              		.ent	SetUserData
  23              	SetUserData:
  24              		.frame	$fp,8,$31		# vars= 0, regs= 1/0, args= 0, gp= 0
  25              		.mask	0x40000000,-4
  26              		.fmask	0x00000000,0
  27              		.set	noreorder
  28              		.set	nomacro
  29              		
  30 0000 F8FFBD27 		addiu	$sp,$sp,-8
  31              	$LCFI0:
  32 0004 0400BEAF 		sw	$fp,4($sp)
  33              	$LCFI1:
  34 0008 21F0A003 		move	$fp,$sp
  35              	$LCFI2:
  36 000c 00001C3C 		lui	$28,%hi(__gnu_local_gp)
  37 0010 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
  38 0014 0800C4AF 		sw	$4,8($fp)
   9:bgtree/bgCore.c ****   bgUserData = userData;
  39              		.loc 1 10 0
  40 0018 0000828F 		lw	$2,%got(bgUserData)($28)
  41 001c 0800C38F 		lw	$3,8($fp)
  42 0020 00000000 		nop
  43 0024 000043AC 		sw	$3,0($2)
  10:bgtree/bgCore.c **** }
  44              		.loc 1 11 0
  45 0028 21E8C003 		move	$sp,$fp
  46 002c 0400BE8F 		lw	$fp,4($sp)
  47 0030 0800BD27 		addiu	$sp,$sp,8
  48 0034 0800E003 		j	$31
  49 0038 00000000 		nop
  50              	
  51              		.set	macro
  52              		.set	reorder
  53              		.end	SetUserData
  54              	$LFE0:
  56              		.align	2
  57              		.globl	GetUserData
  58              	$LFB1 = .
  11:bgtree/bgCore.c **** void *GetUserData() {
  59              		.loc 1 12 0
  60              		.set	nomips16
  61              		.ent	GetUserData
  63              	GetUserData:
  64              		.frame	$fp,8,$31		# vars= 0, regs= 1/0, args= 0, gp= 0
  65              		.mask	0x40000000,-4
  66              		.fmask	0x00000000,0
  67              		.set	noreorder
  68              		.set	nomacro
  69              		
  70 003c F8FFBD27 		addiu	$sp,$sp,-8
  71              	$LCFI3:
  72 0040 0400BEAF 		sw	$fp,4($sp)
  73              	$LCFI4:
  74 0044 21F0A003 		move	$fp,$sp
  75              	$LCFI5:
  76 0048 00001C3C 		lui	$28,%hi(__gnu_local_gp)
  77 004c 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
  12:bgtree/bgCore.c ****   return bgUserData;
  78              		.loc 1 13 0
  79 0050 0000828F 		lw	$2,%got(bgUserData)($28)
  80 0054 00000000 		nop
  81 0058 0000428C 		lw	$2,0($2)
  13:bgtree/bgCore.c **** }
  82              		.loc 1 14 0
  83 005c 21E8C003 		move	$sp,$fp
  84 0060 0400BE8F 		lw	$fp,4($sp)
  85 0064 0800BD27 		addiu	$sp,$sp,8
  86 0068 0800E003 		j	$31
  87 006c 00000000 		nop
  88              	
  89              		.set	macro
  90              		.set	reorder
  91              		.end	GetUserData
  92              	$LFE1:
  94              		.align	2
  95              		.globl	FindIndexOfChild
  96              	$LFB2 = .
  14:bgtree/bgCore.c **** 
  15:bgtree/bgCore.c **** /* Inefficient, should probably stash parent index in Node
  16:bgtree/bgCore.c ****  * structure. */
  17:bgtree/bgCore.c **** // accesses on parent: NodeLen, items[]
  18:bgtree/bgCore.c **** uint16_t FindIndexOfChild(BAT parent, BAT child) {
  97              		.loc 1 19 0
  98              		.set	nomips16
  99              		.ent	FindIndexOfChild
 101              	FindIndexOfChild:
 102              		.frame	$fp,168,$31		# vars= 136, regs= 2/0, args= 16, gp= 8
 103              		.mask	0xc0000000,-4
 104              		.fmask	0x00000000,0
 105              		.set	noreorder
 106              		.set	nomacro
 107              		
 108 0070 58FFBD27 		addiu	$sp,$sp,-168
 109              	$LCFI6:
 110 0074 A400BFAF 		sw	$31,164($sp)
 111              	$LCFI7:
 112 0078 A000BEAF 		sw	$fp,160($sp)
 113              	$LCFI8:
 114 007c 21F0A003 		move	$fp,$sp
 115              	$LCFI9:
 116 0080 A800C4AF 		sw	$4,168($fp)
 117 0084 AC00C5AF 		sw	$5,172($fp)
  19:bgtree/bgCore.c ****   Node n;
  20:bgtree/bgCore.c ****   NodeLoad(&n, parent);
 118              		.loc 1 21 0
 119 0088 1C00C227 		addiu	$2,$fp,28
 120 008c 21204000 		move	$4,$2
 121 0090 A800C58F 		lw	$5,168($fp)
 122              		.option	pic0
 123 0094 0000000C 		jal	NodeLoad
 124 0098 00000000 		nop
 125              	
 126              		.option	pic2
 127              	$LBB2 = .
  21:bgtree/bgCore.c ****   for (int i=0; i<n.length; ++i)
 128              		.loc 1 22 0
 129 009c 1800C0AF 		sw	$0,24($fp)
 130 00a0 15000010 		b	$L6
 131 00a4 00000000 		nop
 132              	
 133              	$L9:
  22:bgtree/bgCore.c ****     if (n.items[i] == child)
 134              		.loc 1 23 0
 135 00a8 1800C28F 		lw	$2,24($fp)
 136 00ac 00000000 		nop
 137 00b0 10004224 		addiu	$2,$2,16
 138 00b4 80100200 		sll	$2,$2,2
 139 00b8 1800C327 		addiu	$3,$fp,24
 140 00bc 21106200 		addu	$2,$3,$2
 141 00c0 0800438C 		lw	$3,8($2)
 142 00c4 AC00C28F 		lw	$2,172($fp)
 143 00c8 00000000 		nop
 144 00cc 06006214 		bne	$3,$2,$L7
 145 00d0 00000000 		nop
 146              	
  23:bgtree/bgCore.c ****       return i;
 147              		.loc 1 24 0
 148 00d4 1800C28F 		lw	$2,24($fp)
 149 00d8 00000000 		nop
 150 00dc FFFF4230 		andi	$2,$2,0xffff
 151 00e0 0E000010 		b	$L8
 152 00e4 00000000 		nop
 153              	
 154              	$L7:
  22:bgtree/bgCore.c ****     if (n.items[i] == child)
 155              		.loc 1 22 0
 156 00e8 1800C28F 		lw	$2,24($fp)
 157 00ec 00000000 		nop
 158 00f0 01004224 		addiu	$2,$2,1
 159 00f4 1800C2AF 		sw	$2,24($fp)
 160              	$L6:
 161 00f8 2100C293 		lbu	$2,33($fp)
 162 00fc 00000000 		nop
 163 0100 21184000 		move	$3,$2
 164 0104 1800C28F 		lw	$2,24($fp)
 165 0108 00000000 		nop
 166 010c 2A104300 		slt	$2,$2,$3
 167 0110 E5FF4014 		bne	$2,$0,$L9
 168 0114 00000000 		nop
 169              	
 170              	$LBE2 = .
  24:bgtree/bgCore.c ****   return (uint16_t) -1;
 171              		.loc 1 25 0
 172 0118 FFFF0234 		li	$2,65535			# 0xffff
 173              	$L8:
  25:bgtree/bgCore.c **** }
 174              		.loc 1 26 0
 175 011c 21E8C003 		move	$sp,$fp
 176 0120 A400BF8F 		lw	$31,164($sp)
 177 0124 A000BE8F 		lw	$fp,160($sp)
 178 0128 A800BD27 		addiu	$sp,$sp,168
 179 012c 0800E003 		j	$31
 180 0130 00000000 		nop
 181              	
 182              		.set	macro
 183              		.set	reorder
 184              		.end	FindIndexOfChild
 185              	$LFE2:
 187              		.align	2
 188              		.globl	FindInternalNode
 189              	$LFB3 = .
  26:bgtree/bgCore.c **** 
  27:bgtree/bgCore.c **** int FindInternalNode(BAT *ret, BAT nodeAddr, KeyT key, BAT *outParent, int *outIndex, BAT *child) {
 190              		.loc 1 28 0
 191              		.set	nomips16
 192              		.ent	FindInternalNode
 194              	FindInternalNode:
 195              		.frame	$fp,168,$31		# vars= 136, regs= 2/0, args= 16, gp= 8
 196              		.mask	0xc0000000,-4
 197              		.fmask	0x00000000,0
 198              		.set	noreorder
 199              		.set	nomacro
 200              		
 201 0134 58FFBD27 		addiu	$sp,$sp,-168
 202              	$LCFI10:
 203 0138 A400BFAF 		sw	$31,164($sp)
 204              	$LCFI11:
 205 013c A000BEAF 		sw	$fp,160($sp)
 206              	$LCFI12:
 207 0140 21F0A003 		move	$fp,$sp
 208              	$LCFI13:
 209 0144 A800C4AF 		sw	$4,168($fp)
 210 0148 AC00C5AF 		sw	$5,172($fp)
 211 014c B000C6AF 		sw	$6,176($fp)
 212 0150 B400C7AF 		sw	$7,180($fp)
  28:bgtree/bgCore.c ****   Node node; 
  29:bgtree/bgCore.c ****   NodeLoad(&node, nodeAddr);
 213              		.loc 1 30 0
 214 0154 2000C227 		addiu	$2,$fp,32
 215 0158 21204000 		move	$4,$2
 216 015c AC00C58F 		lw	$5,172($fp)
 217              		.option	pic0
 218 0160 0000000C 		jal	NodeLoad
 219 0164 00000000 		nop
 220              	
 221              		.option	pic2
  30:bgtree/bgCore.c ****   if (node.depth == 0) { // leaf nodes special case
 222              		.loc 1 31 0
 223 0168 2400C293 		lbu	$2,36($fp)
 224 016c 00000000 		nop
 225 0170 42004014 		bne	$2,$0,$L12
 226 0174 00000000 		nop
 227              	
 228              	$LBB3 = .
  31:bgtree/bgCore.c ****     for (int i=0; (i<node.length) && (key >= node.keys[i]); i++) {
 229              		.loc 1 32 0
 230 0178 1800C0AF 		sw	$0,24($fp)
 231 017c 25000010 		b	$L13
 232 0180 00000000 		nop
 233              	
 234              	$L17:
  32:bgtree/bgCore.c ****       if (key == node.keys[i]) { // found it!
 235              		.loc 1 33 0
 236 0184 1800C28F 		lw	$2,24($fp)
 237 0188 00000000 		nop
 238 018c 02004224 		addiu	$2,$2,2
 239 0190 80100200 		sll	$2,$2,2
 240 0194 1800C327 		addiu	$3,$fp,24
 241 0198 21106200 		addu	$2,$3,$2
 242 019c 0800438C 		lw	$3,8($2)
 243 01a0 B000C28F 		lw	$2,176($fp)
 244 01a4 00000000 		nop
 245 01a8 16006214 		bne	$3,$2,$L14
 246 01ac 00000000 		nop
 247              	
  33:bgtree/bgCore.c ****         *outParent = nodeAddr;
 248              		.loc 1 34 0
 249 01b0 B400C28F 		lw	$2,180($fp)
 250 01b4 AC00C38F 		lw	$3,172($fp)
 251 01b8 00000000 		nop
 252 01bc 000043AC 		sw	$3,0($2)
  34:bgtree/bgCore.c ****         *outIndex = i;
 253              		.loc 1 35 0
 254 01c0 B800C28F 		lw	$2,184($fp)
 255 01c4 1800C38F 		lw	$3,24($fp)
 256 01c8 00000000 		nop
 257 01cc 000043AC 		sw	$3,0($2)
  35:bgtree/bgCore.c ****         *ret = node.items[i];
 258              		.loc 1 36 0
 259 01d0 1800C28F 		lw	$2,24($fp)
 260 01d4 00000000 		nop
 261 01d8 10004224 		addiu	$2,$2,16
 262 01dc 80100200 		sll	$2,$2,2
 263 01e0 1800C327 		addiu	$3,$fp,24
 264 01e4 21106200 		addu	$2,$3,$2
 265 01e8 0C00438C 		lw	$3,12($2)
 266 01ec A800C28F 		lw	$2,168($fp)
 267 01f0 00000000 		nop
 268 01f4 000043AC 		sw	$3,0($2)
  36:bgtree/bgCore.c ****         return 1;
 269              		.loc 1 37 0
 270 01f8 01000224 		li	$2,1			# 0x1
 271 01fc 53000010 		b	$L15
 272 0200 00000000 		nop
 273              	
 274              	$L14:
  32:bgtree/bgCore.c ****     for (int i=0; (i<node.length) && (key >= node.keys[i]); i++) {
 275              		.loc 1 32 0
 276 0204 1800C28F 		lw	$2,24($fp)
 277 0208 00000000 		nop
 278 020c 01004224 		addiu	$2,$2,1
 279 0210 1800C2AF 		sw	$2,24($fp)
 280              	$L13:
 281 0214 2500C293 		lbu	$2,37($fp)
 282 0218 00000000 		nop
 283 021c 21184000 		move	$3,$2
 284 0220 1800C28F 		lw	$2,24($fp)
 285 0224 00000000 		nop
 286 0228 2A104300 		slt	$2,$2,$3
 287 022c 0D004010 		beq	$2,$0,$L16
 288 0230 00000000 		nop
 289              	
 290 0234 1800C28F 		lw	$2,24($fp)
 291 0238 00000000 		nop
 292 023c 02004224 		addiu	$2,$2,2
 293 0240 80100200 		sll	$2,$2,2
 294 0244 1800C327 		addiu	$3,$fp,24
 295 0248 21106200 		addu	$2,$3,$2
 296 024c 0800438C 		lw	$3,8($2)
 297 0250 B000C28F 		lw	$2,176($fp)
 298 0254 00000000 		nop
 299 0258 2B104300 		sltu	$2,$2,$3
 300 025c C9FF4010 		beq	$2,$0,$L17
 301 0260 00000000 		nop
 302              	
 303              	$L16:
 304              	$LBE3 = .
  37:bgtree/bgCore.c ****       }
  38:bgtree/bgCore.c ****     }
  39:bgtree/bgCore.c ****     // didn't find it. fail.
  40:bgtree/bgCore.c ****     *ret = BAInvalid;
 305              		.loc 1 41 0
 306 0264 A800C28F 		lw	$2,168($fp)
 307 0268 FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 308 026c 000043AC 		sw	$3,0($2)
  41:bgtree/bgCore.c ****     return 1;
 309              		.loc 1 42 0
 310 0270 01000224 		li	$2,1			# 0x1
 311 0274 35000010 		b	$L15
 312 0278 00000000 		nop
 313              	
 314              	$L12:
  42:bgtree/bgCore.c ****   }
  43:bgtree/bgCore.c **** 
  44:bgtree/bgCore.c ****   int i; // position us so that i is the child we want
  45:bgtree/bgCore.c ****   for (i = 0; (i < node.length) && (key > node.keys[i]); i++)
 315              		.loc 1 46 0
 316 027c 1C00C0AF 		sw	$0,28($fp)
 317 0280 05000010 		b	$L18
 318 0284 00000000 		nop
 319              	
 320              	$L20:
 321 0288 1C00C28F 		lw	$2,28($fp)
 322 028c 00000000 		nop
 323 0290 01004224 		addiu	$2,$2,1
 324 0294 1C00C2AF 		sw	$2,28($fp)
 325              	$L18:
 326 0298 2500C293 		lbu	$2,37($fp)
 327 029c 00000000 		nop
 328 02a0 21184000 		move	$3,$2
 329 02a4 1C00C28F 		lw	$2,28($fp)
 330 02a8 00000000 		nop
 331 02ac 2A104300 		slt	$2,$2,$3
 332 02b0 0D004010 		beq	$2,$0,$L19
 333 02b4 00000000 		nop
 334              	
 335 02b8 1C00C28F 		lw	$2,28($fp)
 336 02bc 00000000 		nop
 337 02c0 02004224 		addiu	$2,$2,2
 338 02c4 80100200 		sll	$2,$2,2
 339 02c8 1800C327 		addiu	$3,$fp,24
 340 02cc 21106200 		addu	$2,$3,$2
 341 02d0 0800438C 		lw	$3,8($2)
 342 02d4 B000C28F 		lw	$2,176($fp)
 343 02d8 00000000 		nop
 344 02dc 2B106200 		sltu	$2,$3,$2
 345 02e0 E9FF4014 		bne	$2,$0,$L20
 346 02e4 00000000 		nop
 347              	
 348              	$L19:
  46:bgtree/bgCore.c ****     ;
  47:bgtree/bgCore.c ****   if (i >= node.length) {
 349              		.loc 1 48 0
 350 02e8 2500C293 		lbu	$2,37($fp)
 351 02ec 00000000 		nop
 352 02f0 21184000 		move	$3,$2
 353 02f4 1C00C28F 		lw	$2,28($fp)
 354 02f8 00000000 		nop
 355 02fc 2A104300 		slt	$2,$2,$3
 356 0300 07004014 		bne	$2,$0,$L21
 357 0304 00000000 		nop
 358              	
  48:bgtree/bgCore.c ****     *ret = BAInvalid;
 359              		.loc 1 49 0
 360 0308 A800C28F 		lw	$2,168($fp)
 361 030c FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 362 0310 000043AC 		sw	$3,0($2)
  49:bgtree/bgCore.c ****     return 1;
 363              		.loc 1 50 0
 364 0314 01000224 		li	$2,1			# 0x1
 365 0318 0C000010 		b	$L15
 366 031c 00000000 		nop
 367              	
 368              	$L21:
  50:bgtree/bgCore.c ****   }
  51:bgtree/bgCore.c ****   *child = node.items[i]; 
 369              		.loc 1 52 0
 370 0320 1C00C28F 		lw	$2,28($fp)
 371 0324 00000000 		nop
 372 0328 10004224 		addiu	$2,$2,16
 373 032c 80100200 		sll	$2,$2,2
 374 0330 1800C327 		addiu	$3,$fp,24
 375 0334 21106200 		addu	$2,$3,$2
 376 0338 0C00438C 		lw	$3,12($2)
 377 033c BC00C28F 		lw	$2,188($fp)
 378 0340 00000000 		nop
 379 0344 000043AC 		sw	$3,0($2)
  52:bgtree/bgCore.c ****   return 0;
 380              		.loc 1 53 0
 381 0348 21100000 		move	$2,$0
 382              	$L15:
  53:bgtree/bgCore.c **** }
 383              		.loc 1 54 0
 384 034c 21E8C003 		move	$sp,$fp
 385 0350 A400BF8F 		lw	$31,164($sp)
 386 0354 A000BE8F 		lw	$fp,160($sp)
 387 0358 A800BD27 		addiu	$sp,$sp,168
 388 035c 0800E003 		j	$31
 389 0360 00000000 		nop
 390              	
 391              		.set	macro
 392              		.set	reorder
 393              		.end	FindInternalNode
 394              	$LFE3:
 396              		.align	2
 397              		.globl	FindInternal
 398              	$LFB4 = .
  54:bgtree/bgCore.c **** 
  55:bgtree/bgCore.c **** // accesses on nodeAddr: len, depth, keys, item[i] (if match)
  56:bgtree/bgCore.c **** BAT FindInternal(BAT nodeAddr, KeyT key, BAT *outParent, int *outIndex) {
 399              		.loc 1 57 0
 400              		.set	nomips16
 401              		.ent	FindInternal
 403              	FindInternal:
 404              		.frame	$fp,48,$31		# vars= 8, regs= 2/0, args= 24, gp= 8
 405              		.mask	0xc0000000,-4
 406              		.fmask	0x00000000,0
 407              		.set	noreorder
 408              		.set	nomacro
 409              		
 410 0364 D0FFBD27 		addiu	$sp,$sp,-48
 411              	$LCFI14:
 412 0368 2C00BFAF 		sw	$31,44($sp)
 413              	$LCFI15:
 414 036c 2800BEAF 		sw	$fp,40($sp)
 415              	$LCFI16:
 416 0370 21F0A003 		move	$fp,$sp
 417              	$LCFI17:
 418 0374 3000C4AF 		sw	$4,48($fp)
 419 0378 3400C5AF 		sw	$5,52($fp)
 420 037c 3800C6AF 		sw	$6,56($fp)
 421 0380 3C00C7AF 		sw	$7,60($fp)
  57:bgtree/bgCore.c ****   BAT child=nodeAddr;
 422              		.loc 1 58 0
 423 0384 3000C28F 		lw	$2,48($fp)
 424 0388 00000000 		nop
 425 038c 2000C2AF 		sw	$2,32($fp)
 426 0390 02000010 		b	$L25
 427 0394 00000000 		nop
 428              	
 429              	$L27:
  58:bgtree/bgCore.c ****   BAT ret;
  59:bgtree/bgCore.c ****   while (1) { // this is a tail recursion
  60:bgtree/bgCore.c ****     if (FindInternalNode(&ret, child, key, outParent, outIndex, &child)) {
  61:bgtree/bgCore.c ****       return ret;
  62:bgtree/bgCore.c ****     }
  63:bgtree/bgCore.c ****   }
 430              		.loc 1 64 0
 431 0398 00000000 		nop
 432              	$L25:
  61:bgtree/bgCore.c ****     if (FindInternalNode(&ret, child, key, outParent, outIndex, &child)) {
 433              		.loc 1 61 0
 434 039c 2000C28F 		lw	$2,32($fp)
 435 03a0 2400C327 		addiu	$3,$fp,36
 436 03a4 3C00C48F 		lw	$4,60($fp)
 437 03a8 00000000 		nop
 438 03ac 1000A4AF 		sw	$4,16($sp)
 439 03b0 2000C427 		addiu	$4,$fp,32
 440 03b4 1400A4AF 		sw	$4,20($sp)
 441 03b8 21206000 		move	$4,$3
 442 03bc 21284000 		move	$5,$2
 443 03c0 3400C68F 		lw	$6,52($fp)
 444 03c4 3800C78F 		lw	$7,56($fp)
 445              		.option	pic0
 446 03c8 0000000C 		jal	FindInternalNode
 447 03cc 00000000 		nop
 448              	
 449              		.option	pic2
 450 03d0 F1FF4010 		beq	$2,$0,$L27
 451 03d4 00000000 		nop
 452              	
  62:bgtree/bgCore.c ****       return ret;
 453              		.loc 1 62 0
 454 03d8 2400C28F 		lw	$2,36($fp)
  64:bgtree/bgCore.c **** }
 455              		.loc 1 65 0
 456 03dc 21E8C003 		move	$sp,$fp
 457 03e0 2C00BF8F 		lw	$31,44($sp)
 458 03e4 2800BE8F 		lw	$fp,40($sp)
 459 03e8 3000BD27 		addiu	$sp,$sp,48
 460 03ec 0800E003 		j	$31
 461 03f0 00000000 		nop
 462              	
 463              		.set	macro
 464              		.set	reorder
 465              		.end	FindInternal
 466              	$LFE4:
 468              		.align	2
 469              		.globl	NodeInit
 470              	$LFB5 = .
  65:bgtree/bgCore.c **** 
  66:bgtree/bgCore.c **** void NodeInit(Node *n) {
 471              		.loc 1 67 0
 472              		.set	nomips16
 473              		.ent	NodeInit
 475              	NodeInit:
 476              		.frame	$fp,24,$31		# vars= 8, regs= 1/0, args= 0, gp= 8
 477              		.mask	0x40000000,-4
 478              		.fmask	0x00000000,0
 479              		.set	noreorder
 480              		.set	nomacro
 481              		
 482 03f4 E8FFBD27 		addiu	$sp,$sp,-24
 483              	$LCFI18:
 484 03f8 1400BEAF 		sw	$fp,20($sp)
 485              	$LCFI19:
 486 03fc 21F0A003 		move	$fp,$sp
 487              	$LCFI20:
 488 0400 1800C4AF 		sw	$4,24($fp)
  67:bgtree/bgCore.c ****   int i;
  68:bgtree/bgCore.c ****   n->parentNode = BAInvalid;
 489              		.loc 1 69 0
 490 0404 1800C28F 		lw	$2,24($fp)
 491 0408 FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 492 040c 000043AC 		sw	$3,0($2)
  69:bgtree/bgCore.c ****   n->depth = 0;
 493              		.loc 1 70 0
 494 0410 1800C28F 		lw	$2,24($fp)
 495 0414 00000000 		nop
 496 0418 040040A0 		sb	$0,4($2)
  70:bgtree/bgCore.c ****   n->length = 0;
 497              		.loc 1 71 0
 498 041c 1800C28F 		lw	$2,24($fp)
 499 0420 00000000 		nop
 500 0424 050040A0 		sb	$0,5($2)
  71:bgtree/bgCore.c ****   for (i=0; i<ItemsPerNode; ++i)
 501              		.loc 1 72 0
 502 0428 0800C0AF 		sw	$0,8($fp)
 503 042c 0C000010 		b	$L29
 504 0430 00000000 		nop
 505              	
 506              	$L30:
  72:bgtree/bgCore.c ****     n->items[i] = BAInvalid;
 507              		.loc 1 73 0
 508 0434 0800C28F 		lw	$2,8($fp)
 509 0438 1800C38F 		lw	$3,24($fp)
 510 043c 10004224 		addiu	$2,$2,16
 511 0440 80100200 		sll	$2,$2,2
 512 0444 21106200 		addu	$2,$3,$2
 513 0448 FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 514 044c 040043AC 		sw	$3,4($2)
  72:bgtree/bgCore.c ****     n->items[i] = BAInvalid;
 515              		.loc 1 72 0
 516 0450 0800C28F 		lw	$2,8($fp)
 517 0454 00000000 		nop
 518 0458 01004224 		addiu	$2,$2,1
 519 045c 0800C2AF 		sw	$2,8($fp)
 520              	$L29:
 521 0460 0800C28F 		lw	$2,8($fp)
 522 0464 00000000 		nop
 523 0468 0F00422C 		sltu	$2,$2,15
 524 046c F1FF4014 		bne	$2,$0,$L30
 525 0470 00000000 		nop
 526              	
  73:bgtree/bgCore.c ****   for (i=0; i<ItemsPerNode; ++i)
 527              		.loc 1 74 0
 528 0474 0800C0AF 		sw	$0,8($fp)
 529 0478 0C000010 		b	$L31
 530 047c 00000000 		nop
 531              	
 532              	$L32:
  74:bgtree/bgCore.c ****     n->keys[i] = BAInvalid;
 533              		.loc 1 75 0
 534 0480 0800C28F 		lw	$2,8($fp)
 535 0484 1800C38F 		lw	$3,24($fp)
 536 0488 02004224 		addiu	$2,$2,2
 537 048c 80100200 		sll	$2,$2,2
 538 0490 21106200 		addu	$2,$3,$2
 539 0494 FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 540 0498 000043AC 		sw	$3,0($2)
  74:bgtree/bgCore.c ****     n->keys[i] = BAInvalid;
 541              		.loc 1 74 0
 542 049c 0800C28F 		lw	$2,8($fp)
 543 04a0 00000000 		nop
 544 04a4 01004224 		addiu	$2,$2,1
 545 04a8 0800C2AF 		sw	$2,8($fp)
 546              	$L31:
 547 04ac 0800C28F 		lw	$2,8($fp)
 548 04b0 00000000 		nop
 549 04b4 0F00422C 		sltu	$2,$2,15
 550 04b8 F1FF4014 		bne	$2,$0,$L32
 551 04bc 00000000 		nop
 552              	
  75:bgtree/bgCore.c **** }
 553              		.loc 1 76 0
 554 04c0 21E8C003 		move	$sp,$fp
 555 04c4 1400BE8F 		lw	$fp,20($sp)
 556 04c8 1800BD27 		addiu	$sp,$sp,24
 557 04cc 0800E003 		j	$31
 558 04d0 00000000 		nop
 559              	
 560              		.set	macro
 561              		.set	reorder
 562              		.end	NodeInit
 563              	$LFE5:
 565              		.align	2
 566              		.globl	GetLastNodeOfDepth
 567              	$LFB6 = .
  76:bgtree/bgCore.c **** 
  77:bgtree/bgCore.c **** /** Returns the last leaf node under the spcified node.  depth = 0 = leaf node **/
  78:bgtree/bgCore.c **** // accesses on node: depth
  79:bgtree/bgCore.c **** BAT GetLastNodeOfDepth(BAT node, uint8_t depth) {
 568              		.loc 1 80 0
 569              		.set	nomips16
 570              		.ent	GetLastNodeOfDepth
 572              	GetLastNodeOfDepth:
 573              		.frame	$fp,48,$31		# vars= 16, regs= 2/0, args= 16, gp= 8
 574              		.mask	0xc0000000,-4
 575              		.fmask	0x00000000,0
 576              		.set	noreorder
 577              		.set	nomacro
 578              		
 579 04d4 D0FFBD27 		addiu	$sp,$sp,-48
 580              	$LCFI21:
 581 04d8 2C00BFAF 		sw	$31,44($sp)
 582              	$LCFI22:
 583 04dc 2800BEAF 		sw	$fp,40($sp)
 584              	$LCFI23:
 585 04e0 21F0A003 		move	$fp,$sp
 586              	$LCFI24:
 587 04e4 3000C4AF 		sw	$4,48($fp)
 588 04e8 2110A000 		move	$2,$5
 589 04ec 3400C2A3 		sb	$2,52($fp)
  80:bgtree/bgCore.c ****   if (node == BAInvalid)
 590              		.loc 1 81 0
 591 04f0 3000C38F 		lw	$3,48($fp)
 592 04f4 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 593 04f8 04006214 		bne	$3,$2,$L35
 594 04fc 00000000 		nop
 595              	
  81:bgtree/bgCore.c ****     return BAInvalid;
 596              		.loc 1 82 0
 597 0500 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 598 0504 14000010 		b	$L36
 599 0508 00000000 		nop
 600              	
 601              	$L35:
  82:bgtree/bgCore.c ****   NodeSummary ns = NodeSummaryLoad(node);
 602              		.loc 1 83 0
 603 050c 1800C227 		addiu	$2,$fp,24
 604 0510 21204000 		move	$4,$2
 605 0514 3000C58F 		lw	$5,48($fp)
 606              		.option	pic0
 607 0518 0000000C 		jal	NodeSummaryLoad
 608 051c 00000000 		nop
 609              	
 610              		.option	pic2
  83:bgtree/bgCore.c ****   if (ns.depth == depth)
 611              		.loc 1 84 0
 612 0520 1C00C293 		lbu	$2,28($fp)
 613 0524 3400C393 		lbu	$3,52($fp)
 614 0528 00000000 		nop
 615 052c 04006214 		bne	$3,$2,$L37
 616 0530 00000000 		nop
 617              	
  84:bgtree/bgCore.c ****     return node;
 618              		.loc 1 85 0
 619 0534 3000C28F 		lw	$2,48($fp)
 620 0538 07000010 		b	$L36
 621 053c 00000000 		nop
 622              	
 623              	$L37:
  85:bgtree/bgCore.c ****   else
  86:bgtree/bgCore.c ****     return GetLastNodeOfDepth(ns.lastItem, depth);
 624              		.loc 1 87 0
 625 0540 2400C38F 		lw	$3,36($fp)
 626 0544 3400C293 		lbu	$2,52($fp)
 627 0548 21206000 		move	$4,$3
 628 054c 21284000 		move	$5,$2
 629              		.option	pic0
 630 0550 0000000C 		jal	GetLastNodeOfDepth
 631 0554 00000000 		nop
 632              	
 633              		.option	pic2
 634              	$L36:
  87:bgtree/bgCore.c **** }
 635              		.loc 1 88 0
 636 0558 21E8C003 		move	$sp,$fp
 637 055c 2C00BF8F 		lw	$31,44($sp)
 638 0560 2800BE8F 		lw	$fp,40($sp)
 639 0564 3000BD27 		addiu	$sp,$sp,48
 640 0568 0800E003 		j	$31
 641 056c 00000000 		nop
 642              	
 643              		.set	macro
 644              		.set	reorder
 645              		.end	GetLastNodeOfDepth
 646              	$LFE6:
 648              		.align	2
 649              		.globl	NodeSummaryCreate
 650              	$LFB7 = .
  88:bgtree/bgCore.c **** 
  89:bgtree/bgCore.c **** /** Create a NodeSummary structure from a full Node structure **/
  90:bgtree/bgCore.c **** NodeSummary NodeSummaryCreate(Node *n) {
 651              		.loc 1 91 0
 652              		.set	nomips16
 653              		.ent	NodeSummaryCreate
 655              	NodeSummaryCreate:
 656              		.frame	$fp,32,$31		# vars= 16, regs= 1/0, args= 0, gp= 8
 657              		.mask	0x40000000,-4
 658              		.fmask	0x00000000,0
 659              		.set	noreorder
 660              		.set	nomacro
 661              		
 662 0570 E0FFBD27 		addiu	$sp,$sp,-32
 663              	$LCFI25:
 664 0574 1C00BEAF 		sw	$fp,28($sp)
 665              	$LCFI26:
 666 0578 21F0A003 		move	$fp,$sp
 667              	$LCFI27:
 668 057c 21108000 		move	$2,$4
 669 0580 2400C5AF 		sw	$5,36($fp)
  91:bgtree/bgCore.c ****   NodeSummary h;
  92:bgtree/bgCore.c ****   h.parentNode = n->parentNode;
 670              		.loc 1 93 0
 671 0584 2400C38F 		lw	$3,36($fp)
 672 0588 00000000 		nop
 673 058c 0000638C 		lw	$3,0($3)
 674 0590 00000000 		nop
 675 0594 0800C3AF 		sw	$3,8($fp)
  93:bgtree/bgCore.c ****   h.depth = n->depth;
 676              		.loc 1 94 0
 677 0598 2400C38F 		lw	$3,36($fp)
 678 059c 00000000 		nop
 679 05a0 04006390 		lbu	$3,4($3)
 680 05a4 00000000 		nop
 681 05a8 0C00C3A3 		sb	$3,12($fp)
  94:bgtree/bgCore.c ****   h.length = n->length;
 682              		.loc 1 95 0
 683 05ac 2400C38F 		lw	$3,36($fp)
 684 05b0 00000000 		nop
 685 05b4 05006390 		lbu	$3,5($3)
 686 05b8 00000000 		nop
 687 05bc 0D00C3A3 		sb	$3,13($fp)
  95:bgtree/bgCore.c ****   h.firstItem = n->length ? n->items[0] : BAInvalid;
 688              		.loc 1 96 0
 689 05c0 2400C38F 		lw	$3,36($fp)
 690 05c4 00000000 		nop
 691 05c8 05006390 		lbu	$3,5($3)
 692 05cc 00000000 		nop
 693 05d0 06006010 		beq	$3,$0,$L40
 694 05d4 00000000 		nop
 695              	
 696 05d8 2400C38F 		lw	$3,36($fp)
 697 05dc 00000000 		nop
 698 05e0 4400638C 		lw	$3,68($3)
 699 05e4 02000010 		b	$L41
 700 05e8 00000000 		nop
 701              	
 702              	$L40:
 703 05ec FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 704              	$L41:
 705 05f0 1000C3AF 		sw	$3,16($fp)
  96:bgtree/bgCore.c ****   h.lastItem = n->length ? n->items[n->length -1] : BAInvalid;
 706              		.loc 1 97 0
 707 05f4 2400C38F 		lw	$3,36($fp)
 708 05f8 00000000 		nop
 709 05fc 05006390 		lbu	$3,5($3)
 710 0600 00000000 		nop
 711 0604 0D006010 		beq	$3,$0,$L42
 712 0608 00000000 		nop
 713              	
 714 060c 2400C38F 		lw	$3,36($fp)
 715 0610 00000000 		nop
 716 0614 05006390 		lbu	$3,5($3)
 717 0618 00000000 		nop
 718 061c FFFF6324 		addiu	$3,$3,-1
 719 0620 2400C48F 		lw	$4,36($fp)
 720 0624 10006324 		addiu	$3,$3,16
 721 0628 80180300 		sll	$3,$3,2
 722 062c 21188300 		addu	$3,$4,$3
 723 0630 0400638C 		lw	$3,4($3)
 724 0634 02000010 		b	$L43
 725 0638 00000000 		nop
 726              	
 727              	$L42:
 728 063c FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 729              	$L43:
 730 0640 1400C3AF 		sw	$3,20($fp)
  97:bgtree/bgCore.c ****   return h;
 731              		.loc 1 98 0
 732 0644 0800C68F 		lw	$6,8($fp)
 733 0648 0C00C58F 		lw	$5,12($fp)
 734 064c 1000C48F 		lw	$4,16($fp)
 735 0650 1400C38F 		lw	$3,20($fp)
 736 0654 000046AC 		sw	$6,0($2)
 737 0658 040045AC 		sw	$5,4($2)
 738 065c 080044AC 		sw	$4,8($2)
 739 0660 0C0043AC 		sw	$3,12($2)
  98:bgtree/bgCore.c **** }
 740              		.loc 1 99 0
 741 0664 21E8C003 		move	$sp,$fp
 742 0668 1C00BE8F 		lw	$fp,28($sp)
 743 066c 2000BD27 		addiu	$sp,$sp,32
 744 0670 0800E003 		j	$31
 745 0674 00000000 		nop
 746              	
 747              		.set	macro
 748              		.set	reorder
 749              		.end	NodeSummaryCreate
 750              	$LFE7:
 752              		.align	2
 753              		.globl	NodeSummaryLoad
 754              	$LFB8 = .
  99:bgtree/bgCore.c **** 
 100:bgtree/bgCore.c **** /** Like NodeLoad(), but throws away everything and only keeps a NodeSummary
 101:bgtree/bgCore.c ****  * structure **/
 102:bgtree/bgCore.c **** NodeSummary NodeSummaryLoad(BAT node) {
 755              		.loc 1 103 0
 756              		.set	nomips16
 757              		.ent	NodeSummaryLoad
 759              	NodeSummaryLoad:
 760              		.frame	$fp,184,$31		# vars= 144, regs= 3/0, args= 16, gp= 8
 761              		.mask	0xc0010000,-4
 762              		.fmask	0x00000000,0
 763              		.set	noreorder
 764              		.set	nomacro
 765              		
 766 0678 48FFBD27 		addiu	$sp,$sp,-184
 767              	$LCFI28:
 768 067c B400BFAF 		sw	$31,180($sp)
 769              	$LCFI29:
 770 0680 B000BEAF 		sw	$fp,176($sp)
 771              	$LCFI30:
 772 0684 AC00B0AF 		sw	$16,172($sp)
 773              	$LCFI31:
 774 0688 21F0A003 		move	$fp,$sp
 775              	$LCFI32:
 776 068c 21808000 		move	$16,$4
 777 0690 BC00C5AF 		sw	$5,188($fp)
 103:bgtree/bgCore.c ****   NodeSummary ns;
 104:bgtree/bgCore.c ****   if (node == BAInvalid) // basically returns nonsense
 778              		.loc 1 105 0
 779 0694 BC00C38F 		lw	$3,188($fp)
 780 0698 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 781 069c 0B006214 		bne	$3,$2,$L46
 782 06a0 00000000 		nop
 783              	
 105:bgtree/bgCore.c ****     return ns;
 784              		.loc 1 106 0
 785 06a4 1800C58F 		lw	$5,24($fp)
 786 06a8 1C00C48F 		lw	$4,28($fp)
 787 06ac 2000C38F 		lw	$3,32($fp)
 788 06b0 2400C28F 		lw	$2,36($fp)
 789 06b4 000005AE 		sw	$5,0($16)
 790 06b8 040004AE 		sw	$4,4($16)
 791 06bc 080003AE 		sw	$3,8($16)
 792 06c0 0C0002AE 		sw	$2,12($16)
 793 06c4 0B000010 		b	$L45
 794 06c8 00000000 		nop
 795              	
 796              	$L46:
 106:bgtree/bgCore.c ****   Node n;
 107:bgtree/bgCore.c ****   NodeLoad(&n, node);
 797              		.loc 1 108 0
 798 06cc 2800C227 		addiu	$2,$fp,40
 799 06d0 21204000 		move	$4,$2
 800 06d4 BC00C58F 		lw	$5,188($fp)
 801              		.option	pic0
 802 06d8 0000000C 		jal	NodeLoad
 803 06dc 00000000 		nop
 804              	
 805              		.option	pic2
 108:bgtree/bgCore.c ****   return NodeSummaryCreate(&n);
 806              		.loc 1 109 0
 807 06e0 2800C227 		addiu	$2,$fp,40
 808 06e4 21200002 		move	$4,$16
 809 06e8 21284000 		move	$5,$2
 810              		.option	pic0
 811 06ec 0000000C 		jal	NodeSummaryCreate
 812 06f0 00000000 		nop
 813              	
 814              		.option	pic2
 815              	$L45:
 109:bgtree/bgCore.c **** }
 816              		.loc 1 110 0
 817 06f4 21100002 		move	$2,$16
 818 06f8 21E8C003 		move	$sp,$fp
 819 06fc B400BF8F 		lw	$31,180($sp)
 820 0700 B000BE8F 		lw	$fp,176($sp)
 821 0704 AC00B08F 		lw	$16,172($sp)
 822 0708 B800BD27 		addiu	$sp,$sp,184
 823 070c 0800E003 		j	$31
 824 0710 00000000 		nop
 825              	
 826              		.set	macro
 827              		.set	reorder
 828              		.end	NodeSummaryLoad
 829              	$LFE8:
 831              		.align	2
 832              		.globl	NodeItemLoad
 833              	$LFB9 = .
 110:bgtree/bgCore.c **** 
 111:bgtree/bgCore.c **** BAT NodeItemLoad(BAT node, int idx) {
 834              		.loc 1 112 0
 835              		.set	nomips16
 836              		.ent	NodeItemLoad
 838              	NodeItemLoad:
 839              		.frame	$fp,160,$31		# vars= 128, regs= 2/0, args= 16, gp= 8
 840              		.mask	0xc0000000,-4
 841              		.fmask	0x00000000,0
 842              		.set	noreorder
 843              		.set	nomacro
 844              		
 845 0714 60FFBD27 		addiu	$sp,$sp,-160
 846              	$LCFI33:
 847 0718 9C00BFAF 		sw	$31,156($sp)
 848              	$LCFI34:
 849 071c 9800BEAF 		sw	$fp,152($sp)
 850              	$LCFI35:
 851 0720 21F0A003 		move	$fp,$sp
 852              	$LCFI36:
 853 0724 A000C4AF 		sw	$4,160($fp)
 854 0728 A400C5AF 		sw	$5,164($fp)
 112:bgtree/bgCore.c ****   Node n;
 113:bgtree/bgCore.c ****   NodeLoad(&n, node);
 855              		.loc 1 114 0
 856 072c 1800C227 		addiu	$2,$fp,24
 857 0730 21204000 		move	$4,$2
 858 0734 A000C58F 		lw	$5,160($fp)
 859              		.option	pic0
 860 0738 0000000C 		jal	NodeLoad
 861 073c 00000000 		nop
 862              	
 863              		.option	pic2
 114:bgtree/bgCore.c ****   return n.items[idx];
 864              		.loc 1 115 0
 865 0740 A400C28F 		lw	$2,164($fp)
 866 0744 00000000 		nop
 867 0748 10004224 		addiu	$2,$2,16
 868 074c 80100200 		sll	$2,$2,2
 869 0750 1800C327 		addiu	$3,$fp,24
 870 0754 21106200 		addu	$2,$3,$2
 871 0758 0400428C 		lw	$2,4($2)
 115:bgtree/bgCore.c **** }
 872              		.loc 1 116 0
 873 075c 21E8C003 		move	$sp,$fp
 874 0760 9C00BF8F 		lw	$31,156($sp)
 875 0764 9800BE8F 		lw	$fp,152($sp)
 876 0768 A000BD27 		addiu	$sp,$sp,160
 877 076c 0800E003 		j	$31
 878 0770 00000000 		nop
 879              	
 880              		.set	macro
 881              		.set	reorder
 882              		.end	NodeItemLoad
 883              	$LFE9:
 885              		.align	2
 886              		.globl	NodeKeyLoad
 887              	$LFB10 = .
 116:bgtree/bgCore.c **** 
 117:bgtree/bgCore.c **** KeyT NodeKeyLoad(BAT node, int idx) {
 888              		.loc 1 118 0
 889              		.set	nomips16
 890              		.ent	NodeKeyLoad
 892              	NodeKeyLoad:
 893              		.frame	$fp,160,$31		# vars= 128, regs= 2/0, args= 16, gp= 8
 894              		.mask	0xc0000000,-4
 895              		.fmask	0x00000000,0
 896              		.set	noreorder
 897              		.set	nomacro
 898              		
 899 0774 60FFBD27 		addiu	$sp,$sp,-160
 900              	$LCFI37:
 901 0778 9C00BFAF 		sw	$31,156($sp)
 902              	$LCFI38:
 903 077c 9800BEAF 		sw	$fp,152($sp)
 904              	$LCFI39:
 905 0780 21F0A003 		move	$fp,$sp
 906              	$LCFI40:
 907 0784 A000C4AF 		sw	$4,160($fp)
 908 0788 A400C5AF 		sw	$5,164($fp)
 118:bgtree/bgCore.c ****   Node n;
 119:bgtree/bgCore.c ****   NodeLoad(&n, node);
 909              		.loc 1 120 0
 910 078c 1800C227 		addiu	$2,$fp,24
 911 0790 21204000 		move	$4,$2
 912 0794 A000C58F 		lw	$5,160($fp)
 913              		.option	pic0
 914 0798 0000000C 		jal	NodeLoad
 915 079c 00000000 		nop
 916              	
 917              		.option	pic2
 120:bgtree/bgCore.c ****   return n.keys[idx];
 918              		.loc 1 121 0
 919 07a0 A400C28F 		lw	$2,164($fp)
 920 07a4 00000000 		nop
 921 07a8 02004224 		addiu	$2,$2,2
 922 07ac 80100200 		sll	$2,$2,2
 923 07b0 1800C327 		addiu	$3,$fp,24
 924 07b4 21106200 		addu	$2,$3,$2
 925 07b8 0000428C 		lw	$2,0($2)
 121:bgtree/bgCore.c **** }
 926              		.loc 1 122 0
 927 07bc 21E8C003 		move	$sp,$fp
 928 07c0 9C00BF8F 		lw	$31,156($sp)
 929 07c4 9800BE8F 		lw	$fp,152($sp)
 930 07c8 A000BD27 		addiu	$sp,$sp,160
 931 07cc 0800E003 		j	$31
 932 07d0 00000000 		nop
 933              	
 934              		.set	macro
 935              		.set	reorder
 936              		.end	NodeKeyLoad
 937              	$LFE10:
 939              		.align	2
 940              		.globl	NodeParent
 941              	$LFB11 = .
 122:bgtree/bgCore.c **** 
 123:bgtree/bgCore.c **** BAT NodeParent(BAT node) {
 942              		.loc 1 124 0
 943              		.set	nomips16
 944              		.ent	NodeParent
 946              	NodeParent:
 947              		.frame	$fp,160,$31		# vars= 128, regs= 2/0, args= 16, gp= 8
 948              		.mask	0xc0000000,-4
 949              		.fmask	0x00000000,0
 950              		.set	noreorder
 951              		.set	nomacro
 952              		
 953 07d4 60FFBD27 		addiu	$sp,$sp,-160
 954              	$LCFI41:
 955 07d8 9C00BFAF 		sw	$31,156($sp)
 956              	$LCFI42:
 957 07dc 9800BEAF 		sw	$fp,152($sp)
 958              	$LCFI43:
 959 07e0 21F0A003 		move	$fp,$sp
 960              	$LCFI44:
 961 07e4 A000C4AF 		sw	$4,160($fp)
 124:bgtree/bgCore.c ****   Node ns;
 125:bgtree/bgCore.c ****   NodeLoad(&ns, node);
 962              		.loc 1 126 0
 963 07e8 1800C227 		addiu	$2,$fp,24
 964 07ec 21204000 		move	$4,$2
 965 07f0 A000C58F 		lw	$5,160($fp)
 966              		.option	pic0
 967 07f4 0000000C 		jal	NodeLoad
 968 07f8 00000000 		nop
 969              	
 970              		.option	pic2
 126:bgtree/bgCore.c ****   return ns.parentNode;
 971              		.loc 1 127 0
 972 07fc 1800C28F 		lw	$2,24($fp)
 127:bgtree/bgCore.c **** }
 973              		.loc 1 128 0
 974 0800 21E8C003 		move	$sp,$fp
 975 0804 9C00BF8F 		lw	$31,156($sp)
 976 0808 9800BE8F 		lw	$fp,152($sp)
 977 080c A000BD27 		addiu	$sp,$sp,160
 978 0810 0800E003 		j	$31
 979 0814 00000000 		nop
 980              	
 981              		.set	macro
 982              		.set	reorder
 983              		.end	NodeParent
 984              	$LFE11:
 986              		.align	2
 987              		.globl	NodeLen
 988              	$LFB12 = .
 128:bgtree/bgCore.c **** 
 129:bgtree/bgCore.c **** BAT NodeLen(BAT node) {
 989              		.loc 1 130 0
 990              		.set	nomips16
 991              		.ent	NodeLen
 993              	NodeLen:
 994              		.frame	$fp,160,$31		# vars= 128, regs= 2/0, args= 16, gp= 8
 995              		.mask	0xc0000000,-4
 996              		.fmask	0x00000000,0
 997              		.set	noreorder
 998              		.set	nomacro
 999              		
 1000 0818 60FFBD27 		addiu	$sp,$sp,-160
 1001              	$LCFI45:
 1002 081c 9C00BFAF 		sw	$31,156($sp)
 1003              	$LCFI46:
 1004 0820 9800BEAF 		sw	$fp,152($sp)
 1005              	$LCFI47:
 1006 0824 21F0A003 		move	$fp,$sp
 1007              	$LCFI48:
 1008 0828 A000C4AF 		sw	$4,160($fp)
 130:bgtree/bgCore.c ****   Node ns;
 131:bgtree/bgCore.c ****   NodeLoad(&ns, node);
 1009              		.loc 1 132 0
 1010 082c 1800C227 		addiu	$2,$fp,24
 1011 0830 21204000 		move	$4,$2
 1012 0834 A000C58F 		lw	$5,160($fp)
 1013              		.option	pic0
 1014 0838 0000000C 		jal	NodeLoad
 1015 083c 00000000 		nop
 1016              	
 1017              		.option	pic2
 132:bgtree/bgCore.c ****   return ns.length;
 1018              		.loc 1 133 0
 1019 0840 1D00C293 		lbu	$2,29($fp)
 133:bgtree/bgCore.c **** }
 1020              		.loc 1 134 0
 1021 0844 21E8C003 		move	$sp,$fp
 1022 0848 9C00BF8F 		lw	$31,156($sp)
 1023 084c 9800BE8F 		lw	$fp,152($sp)
 1024 0850 A000BD27 		addiu	$sp,$sp,160
 1025 0854 0800E003 		j	$31
 1026 0858 00000000 		nop
 1027              	
 1028              		.set	macro
 1029              		.set	reorder
 1030              		.end	NodeLen
 1031              	$LFE12:
 1033              		.align	2
 1034              		.globl	NodeDepth
 1035              	$LFB13 = .
 134:bgtree/bgCore.c **** 
 135:bgtree/bgCore.c **** int8_t NodeDepth(BAT node) {
 1036              		.loc 1 136 0
 1037              		.set	nomips16
 1038              		.ent	NodeDepth
 1040              	NodeDepth:
 1041              		.frame	$fp,160,$31		# vars= 128, regs= 2/0, args= 16, gp= 8
 1042              		.mask	0xc0000000,-4
 1043              		.fmask	0x00000000,0
 1044              		.set	noreorder
 1045              		.set	nomacro
 1046              		
 1047 085c 60FFBD27 		addiu	$sp,$sp,-160
 1048              	$LCFI49:
 1049 0860 9C00BFAF 		sw	$31,156($sp)
 1050              	$LCFI50:
 1051 0864 9800BEAF 		sw	$fp,152($sp)
 1052              	$LCFI51:
 1053 0868 21F0A003 		move	$fp,$sp
 1054              	$LCFI52:
 1055 086c A000C4AF 		sw	$4,160($fp)
 136:bgtree/bgCore.c ****   Node ns;
 137:bgtree/bgCore.c ****   NodeLoad(&ns, node);
 1056              		.loc 1 138 0
 1057 0870 1800C227 		addiu	$2,$fp,24
 1058 0874 21204000 		move	$4,$2
 1059 0878 A000C58F 		lw	$5,160($fp)
 1060              		.option	pic0
 1061 087c 0000000C 		jal	NodeLoad
 1062 0880 00000000 		nop
 1063              	
 1064              		.option	pic2
 138:bgtree/bgCore.c ****   return ns.depth;
 1065              		.loc 1 139 0
 1066 0884 1C00C293 		lbu	$2,28($fp)
 1067 0888 00000000 		nop
 1068 088c 00160200 		sll	$2,$2,24
 1069 0890 03160200 		sra	$2,$2,24
 139:bgtree/bgCore.c **** }
 1070              		.loc 1 140 0
 1071 0894 21E8C003 		move	$sp,$fp
 1072 0898 9C00BF8F 		lw	$31,156($sp)
 1073 089c 9800BE8F 		lw	$fp,152($sp)
 1074 08a0 A000BD27 		addiu	$sp,$sp,160
 1075 08a4 0800E003 		j	$31
 1076 08a8 00000000 		nop
 1077              	
 1078              		.set	macro
 1079              		.set	reorder
 1080              		.end	NodeDepth
 1081              	$LFE13:
 1083              		.align	2
 1084              		.globl	NodeLoad
 1085              	$LFB14 = .
 140:bgtree/bgCore.c **** 
 141:bgtree/bgCore.c **** void NodeLoad(Node *n, BAT addr) {
 1086              		.loc 1 142 0
 1087              		.set	nomips16
 1088              		.ent	NodeLoad
 1090              	NodeLoad:
 1091              		.frame	$fp,32,$31		# vars= 0, regs= 2/0, args= 16, gp= 8
 1092              		.mask	0xc0000000,-4
 1093              		.fmask	0x00000000,0
 1094              		.set	noreorder
 1095              		.set	nomacro
 1096              		
 1097 08ac E0FFBD27 		addiu	$sp,$sp,-32
 1098              	$LCFI53:
 1099 08b0 1C00BFAF 		sw	$31,28($sp)
 1100              	$LCFI54:
 1101 08b4 1800BEAF 		sw	$fp,24($sp)
 1102              	$LCFI55:
 1103 08b8 21F0A003 		move	$fp,$sp
 1104              	$LCFI56:
 1105 08bc 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1106 08c0 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1107 08c4 1000BCAF 		.cprestore	16
 1108 08c8 2000C4AF 		sw	$4,32($fp)
 1109 08cc 2400C5AF 		sw	$5,36($fp)
 142:bgtree/bgCore.c ****   LoadBlock(addr, n, bgUserData);
 1110              		.loc 1 143 0
 1111 08d0 0000828F 		lw	$2,%got(bgUserData)($28)
 1112 08d4 00000000 		nop
 1113 08d8 0000428C 		lw	$2,0($2)
 1114 08dc 2400C48F 		lw	$4,36($fp)
 1115 08e0 2000C58F 		lw	$5,32($fp)
 1116 08e4 21304000 		move	$6,$2
 1117 08e8 0000828F 		lw	$2,%call16(LoadBlock)($28)
 1118 08ec 00000000 		nop
 1119 08f0 21C84000 		move	$25,$2
 1120 08f4 09F82003 		jalr	$25
 1121 08f8 00000000 		nop
 1122              	
 1123 08fc 1000DC8F 		lw	$28,16($fp)
 143:bgtree/bgCore.c **** }
 1124              		.loc 1 144 0
 1125 0900 21E8C003 		move	$sp,$fp
 1126 0904 1C00BF8F 		lw	$31,28($sp)
 1127 0908 1800BE8F 		lw	$fp,24($sp)
 1128 090c 2000BD27 		addiu	$sp,$sp,32
 1129 0910 0800E003 		j	$31
 1130 0914 00000000 		nop
 1131              	
 1132              		.set	macro
 1133              		.set	reorder
 1134              		.end	NodeLoad
 1135              	$LFE14:
 1137              		.align	2
 1138              		.globl	NodeSave
 1139              	$LFB15 = .
 144:bgtree/bgCore.c **** 
 145:bgtree/bgCore.c **** void NodeSave(Node *n, BAT addr) {
 1140              		.loc 1 146 0
 1141              		.set	nomips16
 1142              		.ent	NodeSave
 1144              	NodeSave:
 1145              		.frame	$fp,32,$31		# vars= 0, regs= 2/0, args= 16, gp= 8
 1146              		.mask	0xc0000000,-4
 1147              		.fmask	0x00000000,0
 1148              		.set	noreorder
 1149              		.set	nomacro
 1150              		
 1151 0918 E0FFBD27 		addiu	$sp,$sp,-32
 1152              	$LCFI57:
 1153 091c 1C00BFAF 		sw	$31,28($sp)
 1154              	$LCFI58:
 1155 0920 1800BEAF 		sw	$fp,24($sp)
 1156              	$LCFI59:
 1157 0924 21F0A003 		move	$fp,$sp
 1158              	$LCFI60:
 1159 0928 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1160 092c 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1161 0930 1000BCAF 		.cprestore	16
 1162 0934 2000C4AF 		sw	$4,32($fp)
 1163 0938 2400C5AF 		sw	$5,36($fp)
 146:bgtree/bgCore.c ****   SaveBlock(addr, n, bgUserData);
 1164              		.loc 1 147 0
 1165 093c 0000828F 		lw	$2,%got(bgUserData)($28)
 1166 0940 00000000 		nop
 1167 0944 0000428C 		lw	$2,0($2)
 1168 0948 2400C48F 		lw	$4,36($fp)
 1169 094c 2000C58F 		lw	$5,32($fp)
 1170 0950 21304000 		move	$6,$2
 1171 0954 0000828F 		lw	$2,%call16(SaveBlock)($28)
 1172 0958 00000000 		nop
 1173 095c 21C84000 		move	$25,$2
 1174 0960 09F82003 		jalr	$25
 1175 0964 00000000 		nop
 1176              	
 1177 0968 1000DC8F 		lw	$28,16($fp)
 147:bgtree/bgCore.c **** }
 1178              		.loc 1 148 0
 1179 096c 21E8C003 		move	$sp,$fp
 1180 0970 1C00BF8F 		lw	$31,28($sp)
 1181 0974 1800BE8F 		lw	$fp,24($sp)
 1182 0978 2000BD27 		addiu	$sp,$sp,32
 1183 097c 0800E003 		j	$31
 1184 0980 00000000 		nop
 1185              	
 1186              		.set	macro
 1187              		.set	reorder
 1188              		.end	NodeSave
 1189              	$LFE15:
 1191              		.align	2
 1192              		.globl	GetLastNonFullDescendant
 1193              	$LFB16 = .
 148:bgtree/bgCore.c **** 
 149:bgtree/bgCore.c **** /** Returns last non-full non-leaf node, or invalid if there is none **/
 150:bgtree/bgCore.c **** // accesses on node: IsLeaf, len
 151:bgtree/bgCore.c **** BAT GetLastNonFullDescendant(BAT node) {
 1194              		.loc 1 152 0
 1195              		.set	nomips16
 1196              		.ent	GetLastNonFullDescendant
 1198              	GetLastNonFullDescendant:
 1199              		.frame	$fp,56,$31		# vars= 24, regs= 2/0, args= 16, gp= 8
 1200              		.mask	0xc0000000,-4
 1201              		.fmask	0x00000000,0
 1202              		.set	noreorder
 1203              		.set	nomacro
 1204              		
 1205 0984 C8FFBD27 		addiu	$sp,$sp,-56
 1206              	$LCFI61:
 1207 0988 3400BFAF 		sw	$31,52($sp)
 1208              	$LCFI62:
 1209 098c 3000BEAF 		sw	$fp,48($sp)
 1210              	$LCFI63:
 1211 0990 21F0A003 		move	$fp,$sp
 1212              	$LCFI64:
 1213 0994 3800C4AF 		sw	$4,56($fp)
 152:bgtree/bgCore.c ****   if (node == BAInvalid)
 1214              		.loc 1 153 0
 1215 0998 3800C38F 		lw	$3,56($fp)
 1216 099c FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1217 09a0 04006214 		bne	$3,$2,$L64
 1218 09a4 00000000 		nop
 1219              	
 153:bgtree/bgCore.c ****     return BAInvalid;
 1220              		.loc 1 154 0
 1221 09a8 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1222 09ac 20000010 		b	$L65
 1223 09b0 00000000 		nop
 1224              	
 1225              	$L64:
 154:bgtree/bgCore.c ****   NodeSummary nnode = NodeSummaryLoad(node);
 1226              		.loc 1 155 0
 1227 09b4 1C00C227 		addiu	$2,$fp,28
 1228 09b8 21204000 		move	$4,$2
 1229 09bc 3800C58F 		lw	$5,56($fp)
 1230              		.option	pic0
 1231 09c0 0000000C 		jal	NodeSummaryLoad
 1232 09c4 00000000 		nop
 1233              	
 1234              		.option	pic2
 155:bgtree/bgCore.c ****   if (nnode.depth == 0) // is leaf
 1235              		.loc 1 156 0
 1236 09c8 2000C293 		lbu	$2,32($fp)
 1237 09cc 00000000 		nop
 1238 09d0 04004014 		bne	$2,$0,$L66
 1239 09d4 00000000 		nop
 1240              	
 156:bgtree/bgCore.c ****     return BAInvalid;
 1241              		.loc 1 157 0
 1242 09d8 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1243 09dc 14000010 		b	$L65
 1244 09e0 00000000 		nop
 1245              	
 1246              	$L66:
 157:bgtree/bgCore.c ****   BAT nonFull = GetLastNonFullDescendant(nnode.lastItem);
 1247              		.loc 1 158 0
 1248 09e4 2800C28F 		lw	$2,40($fp)
 1249 09e8 00000000 		nop
 1250 09ec 21204000 		move	$4,$2
 1251              		.option	pic0
 1252 09f0 0000000C 		jal	GetLastNonFullDescendant
 1253 09f4 00000000 		nop
 1254              	
 1255              		.option	pic2
 1256 09f8 1800C2AF 		sw	$2,24($fp)
 158:bgtree/bgCore.c ****   if ((nonFull == BAInvalid) && (nnode.length < ItemsPerNode))
 1257              		.loc 1 159 0
 1258 09fc 1800C38F 		lw	$3,24($fp)
 1259 0a00 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1260 0a04 09006214 		bne	$3,$2,$L67
 1261 0a08 00000000 		nop
 1262              	
 1263 0a0c 2100C293 		lbu	$2,33($fp)
 1264 0a10 00000000 		nop
 1265 0a14 0F00422C 		sltu	$2,$2,15
 1266 0a18 04004010 		beq	$2,$0,$L67
 1267 0a1c 00000000 		nop
 1268              	
 159:bgtree/bgCore.c ****     return node;
 1269              		.loc 1 160 0
 1270 0a20 3800C28F 		lw	$2,56($fp)
 1271 0a24 02000010 		b	$L65
 1272 0a28 00000000 		nop
 1273              	
 1274              	$L67:
 160:bgtree/bgCore.c ****   return nonFull;
 1275              		.loc 1 161 0
 1276 0a2c 1800C28F 		lw	$2,24($fp)
 1277              	$L65:
 161:bgtree/bgCore.c **** }
 1278              		.loc 1 162 0
 1279 0a30 21E8C003 		move	$sp,$fp
 1280 0a34 3400BF8F 		lw	$31,52($sp)
 1281 0a38 3000BE8F 		lw	$fp,48($sp)
 1282 0a3c 3800BD27 		addiu	$sp,$sp,56
 1283 0a40 0800E003 		j	$31
 1284 0a44 00000000 		nop
 1285              	
 1286              		.set	macro
 1287              		.set	reorder
 1288              		.end	GetLastNonFullDescendant
 1289              	$LFE16:
 1291              		.align	2
 1292              		.globl	CreateDescendingNodes
 1293              	$LFB17 = .
 162:bgtree/bgCore.c **** 
 163:bgtree/bgCore.c **** // accesses depth, InitNode(), SaveBlock, keys, items, everythgin
 164:bgtree/bgCore.c **** BAT CreateDescendingNodes(int depth, KeyT lowest) {
 1294              		.loc 1 165 0
 1295              		.set	nomips16
 1296              		.ent	CreateDescendingNodes
 1298              	CreateDescendingNodes:
 1299              		.frame	$fp,168,$31		# vars= 136, regs= 2/0, args= 16, gp= 8
 1300              		.mask	0xc0000000,-4
 1301              		.fmask	0x00000000,0
 1302              		.set	noreorder
 1303              		.set	nomacro
 1304              		
 1305 0a48 58FFBD27 		addiu	$sp,$sp,-168
 1306              	$LCFI65:
 1307 0a4c A400BFAF 		sw	$31,164($sp)
 1308              	$LCFI66:
 1309 0a50 A000BEAF 		sw	$fp,160($sp)
 1310              	$LCFI67:
 1311 0a54 21F0A003 		move	$fp,$sp
 1312              	$LCFI68:
 1313 0a58 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1314 0a5c 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1315 0a60 1000BCAF 		.cprestore	16
 1316 0a64 A800C4AF 		sw	$4,168($fp)
 1317 0a68 AC00C5AF 		sw	$5,172($fp)
 165:bgtree/bgCore.c ****   BAT n = AllocBlock(bgUserData);
 1318              		.loc 1 166 0
 1319 0a6c 0000828F 		lw	$2,%got(bgUserData)($28)
 1320 0a70 00000000 		nop
 1321 0a74 0000428C 		lw	$2,0($2)
 1322 0a78 00000000 		nop
 1323 0a7c 21204000 		move	$4,$2
 1324 0a80 0000828F 		lw	$2,%call16(AllocBlock)($28)
 1325 0a84 00000000 		nop
 1326 0a88 21C84000 		move	$25,$2
 1327 0a8c 09F82003 		jalr	$25
 1328 0a90 00000000 		nop
 1329              	
 1330 0a94 1000DC8F 		lw	$28,16($fp)
 1331 0a98 1C00C2AF 		sw	$2,28($fp)
 1332              	$LBB4 = .
 166:bgtree/bgCore.c ****   {Node nn;
 167:bgtree/bgCore.c ****     NodeInit(&nn);
 1333              		.loc 1 168 0
 1334 0a9c 2000C227 		addiu	$2,$fp,32
 1335 0aa0 21204000 		move	$4,$2
 1336              		.option	pic0
 1337 0aa4 0000000C 		jal	NodeInit
 1338 0aa8 00000000 		nop
 1339              	
 1340              		.option	pic2
 1341 0aac 1000DC8F 		lw	$28,16($fp)
 168:bgtree/bgCore.c ****     nn.depth = depth;
 1342              		.loc 1 169 0
 1343 0ab0 A800C28F 		lw	$2,168($fp)
 1344 0ab4 00000000 		nop
 1345 0ab8 FF004230 		andi	$2,$2,0x00ff
 1346 0abc 2400C2A3 		sb	$2,36($fp)
 169:bgtree/bgCore.c ****     NodeSave(&nn, n);
 1347              		.loc 1 170 0
 1348 0ac0 2000C227 		addiu	$2,$fp,32
 1349 0ac4 21204000 		move	$4,$2
 1350 0ac8 1C00C58F 		lw	$5,28($fp)
 1351              		.option	pic0
 1352 0acc 0000000C 		jal	NodeSave
 1353 0ad0 00000000 		nop
 1354              	
 1355              		.option	pic2
 1356 0ad4 1000DC8F 		lw	$28,16($fp)
 1357              	$LBE4 = .
 170:bgtree/bgCore.c ****   }
 171:bgtree/bgCore.c ****   if (depth == 0)
 1358              		.loc 1 172 0
 1359 0ad8 A800C28F 		lw	$2,168($fp)
 1360 0adc 00000000 		nop
 1361 0ae0 04004014 		bne	$2,$0,$L70
 1362 0ae4 00000000 		nop
 1363              	
 172:bgtree/bgCore.c ****     return n;
 1364              		.loc 1 173 0
 1365 0ae8 1C00C28F 		lw	$2,28($fp)
 1366 0aec 2E000010 		b	$L71
 1367 0af0 00000000 		nop
 1368              	
 1369              	$L70:
 173:bgtree/bgCore.c ****   BAT child = CreateDescendingNodes(depth - 1, lowest);
 1370              		.loc 1 174 0
 1371 0af4 A800C28F 		lw	$2,168($fp)
 1372 0af8 00000000 		nop
 1373 0afc FFFF4224 		addiu	$2,$2,-1
 1374 0b00 21204000 		move	$4,$2
 1375 0b04 AC00C58F 		lw	$5,172($fp)
 1376              		.option	pic0
 1377 0b08 0000000C 		jal	CreateDescendingNodes
 1378 0b0c 00000000 		nop
 1379              	
 1380              		.option	pic2
 1381 0b10 1000DC8F 		lw	$28,16($fp)
 1382 0b14 1800C2AF 		sw	$2,24($fp)
 1383              	$LBB5 = .
 174:bgtree/bgCore.c ****   {Node nn; NodeLoad(&nn, n);
 1384              		.loc 1 175 0
 1385 0b18 2000C227 		addiu	$2,$fp,32
 1386 0b1c 21204000 		move	$4,$2
 1387 0b20 1C00C58F 		lw	$5,28($fp)
 1388              		.option	pic0
 1389 0b24 0000000C 		jal	NodeLoad
 1390 0b28 00000000 		nop
 1391              	
 1392              		.option	pic2
 1393 0b2c 1000DC8F 		lw	$28,16($fp)
 175:bgtree/bgCore.c ****     nn.keys[0] = lowest;
 1394              		.loc 1 176 0
 1395 0b30 AC00C28F 		lw	$2,172($fp)
 1396 0b34 00000000 		nop
 1397 0b38 2800C2AF 		sw	$2,40($fp)
 176:bgtree/bgCore.c ****     nn.items[0] = child;
 1398              		.loc 1 177 0
 1399 0b3c 1800C28F 		lw	$2,24($fp)
 1400 0b40 00000000 		nop
 1401 0b44 6400C2AF 		sw	$2,100($fp)
 177:bgtree/bgCore.c ****     nn.length=1;
 1402              		.loc 1 178 0
 1403 0b48 01000224 		li	$2,1			# 0x1
 1404 0b4c 2500C2A3 		sb	$2,37($fp)
 178:bgtree/bgCore.c ****     NodeSave(&nn, n);
 1405              		.loc 1 179 0
 1406 0b50 2000C227 		addiu	$2,$fp,32
 1407 0b54 21204000 		move	$4,$2
 1408 0b58 1C00C58F 		lw	$5,28($fp)
 1409              		.option	pic0
 1410 0b5c 0000000C 		jal	NodeSave
 1411 0b60 00000000 		nop
 1412              	
 1413              		.option	pic2
 1414 0b64 1000DC8F 		lw	$28,16($fp)
 1415              	$LBE5 = .
 1416              	$LBB6 = .
 179:bgtree/bgCore.c ****   }
 180:bgtree/bgCore.c ****   {Node nchild; NodeLoad(&nchild, child);
 1417              		.loc 1 181 0
 1418 0b68 2000C227 		addiu	$2,$fp,32
 1419 0b6c 21204000 		move	$4,$2
 1420 0b70 1800C58F 		lw	$5,24($fp)
 1421              		.option	pic0
 1422 0b74 0000000C 		jal	NodeLoad
 1423 0b78 00000000 		nop
 1424              	
 1425              		.option	pic2
 1426 0b7c 1000DC8F 		lw	$28,16($fp)
 181:bgtree/bgCore.c ****     nchild.parentNode = n;
 1427              		.loc 1 182 0
 1428 0b80 1C00C28F 		lw	$2,28($fp)
 1429 0b84 00000000 		nop
 1430 0b88 2000C2AF 		sw	$2,32($fp)
 182:bgtree/bgCore.c ****     NodeSave(&nchild, child);
 1431              		.loc 1 183 0
 1432 0b8c 2000C227 		addiu	$2,$fp,32
 1433 0b90 21204000 		move	$4,$2
 1434 0b94 1800C58F 		lw	$5,24($fp)
 1435              		.option	pic0
 1436 0b98 0000000C 		jal	NodeSave
 1437 0b9c 00000000 		nop
 1438              	
 1439              		.option	pic2
 1440 0ba0 1000DC8F 		lw	$28,16($fp)
 1441              	$LBE6 = .
 183:bgtree/bgCore.c ****   }
 184:bgtree/bgCore.c ****   return n;
 1442              		.loc 1 185 0
 1443 0ba4 1C00C28F 		lw	$2,28($fp)
 1444              	$L71:
 185:bgtree/bgCore.c **** }
 1445              		.loc 1 186 0
 1446 0ba8 21E8C003 		move	$sp,$fp
 1447 0bac A400BF8F 		lw	$31,164($sp)
 1448 0bb0 A000BE8F 		lw	$fp,160($sp)
 1449 0bb4 A800BD27 		addiu	$sp,$sp,168
 1450 0bb8 0800E003 		j	$31
 1451 0bbc 00000000 		nop
 1452              	
 1453              		.set	macro
 1454              		.set	reorder
 1455              		.end	CreateDescendingNodes
 1456              	$LFE17:
 1458              		.align	2
 1459              		.globl	AppendNewLeafNode
 1460              	$LFB18 = .
 186:bgtree/bgCore.c **** 
 187:bgtree/bgCore.c **** /** Adds a new node to a full tree **/
 188:bgtree/bgCore.c **** BAT AppendNewLeafNode(BAT topNode) {
 1461              		.loc 1 189 0
 1462              		.set	nomips16
 1463              		.ent	AppendNewLeafNode
 1465              	AppendNewLeafNode:
 1466              		.frame	$fp,192,$31		# vars= 160, regs= 2/0, args= 16, gp= 8
 1467              		.mask	0xc0000000,-4
 1468              		.fmask	0x00000000,0
 1469              		.set	noreorder
 1470              		.set	nomacro
 1471              		
 1472 0bc0 40FFBD27 		addiu	$sp,$sp,-192
 1473              	$LCFI69:
 1474 0bc4 BC00BFAF 		sw	$31,188($sp)
 1475              	$LCFI70:
 1476 0bc8 B800BEAF 		sw	$fp,184($sp)
 1477              	$LCFI71:
 1478 0bcc 21F0A003 		move	$fp,$sp
 1479              	$LCFI72:
 1480 0bd0 C000C4AF 		sw	$4,192($fp)
 189:bgtree/bgCore.c ****   BAT nonFull = GetLastNonFullDescendant(topNode);
 1481              		.loc 1 190 0
 1482 0bd4 C000C48F 		lw	$4,192($fp)
 1483              		.option	pic0
 1484 0bd8 0000000C 		jal	GetLastNonFullDescendant
 1485 0bdc 00000000 		nop
 1486              	
 1487              		.option	pic2
 1488 0be0 2400C2AF 		sw	$2,36($fp)
 190:bgtree/bgCore.c ****   if (nonFull == BAInvalid)
 1489              		.loc 1 191 0
 1490 0be4 2400C38F 		lw	$3,36($fp)
 1491 0be8 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1492 0bec 04006214 		bne	$3,$2,$L74
 1493 0bf0 00000000 		nop
 1494              	
 191:bgtree/bgCore.c ****     return BAInvalid; /** The tree is entirely full.  You'd need to add levels.  We dont support th
 1495              		.loc 1 192 0
 1496 0bf4 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1497 0bf8 54000010 		b	$L75
 1498 0bfc 00000000 		nop
 1499              	
 1500              	$L74:
 192:bgtree/bgCore.c ****   NodeSummary nfSummary = NodeSummaryLoad(nonFull);
 1501              		.loc 1 193 0
 1502 0c00 2800C227 		addiu	$2,$fp,40
 1503 0c04 21204000 		move	$4,$2
 1504 0c08 2400C58F 		lw	$5,36($fp)
 1505              		.option	pic0
 1506 0c0c 0000000C 		jal	NodeSummaryLoad
 1507 0c10 00000000 		nop
 1508              	
 1509              		.option	pic2
 193:bgtree/bgCore.c ****   /* Build out string of nodes to the leaf level */
 194:bgtree/bgCore.c ****   BAT newNodes = CreateDescendingNodes(nfSummary.depth - 1, 0);
 1510              		.loc 1 195 0
 1511 0c14 2C00C293 		lbu	$2,44($fp)
 1512 0c18 00000000 		nop
 1513 0c1c FFFF4224 		addiu	$2,$2,-1
 1514 0c20 21204000 		move	$4,$2
 1515 0c24 21280000 		move	$5,$0
 1516              		.option	pic0
 1517 0c28 0000000C 		jal	CreateDescendingNodes
 1518 0c2c 00000000 		nop
 1519              	
 1520              		.option	pic2
 1521 0c30 2000C2AF 		sw	$2,32($fp)
 1522              	$LBB7 = .
 195:bgtree/bgCore.c ****   {Node nfNode; NodeLoad(&nfNode, nonFull);
 1523              		.loc 1 196 0
 1524 0c34 3800C227 		addiu	$2,$fp,56
 1525 0c38 21204000 		move	$4,$2
 1526 0c3c 2400C58F 		lw	$5,36($fp)
 1527              		.option	pic0
 1528 0c40 0000000C 		jal	NodeLoad
 1529 0c44 00000000 		nop
 1530              	
 1531              		.option	pic2
 196:bgtree/bgCore.c ****     nfNode.keys[nfNode.length] = 0; // fixed later
 1532              		.loc 1 197 0
 1533 0c48 3D00C293 		lbu	$2,61($fp)
 1534 0c4c 00000000 		nop
 1535 0c50 02004224 		addiu	$2,$2,2
 1536 0c54 80100200 		sll	$2,$2,2
 1537 0c58 1800C327 		addiu	$3,$fp,24
 1538 0c5c 21106200 		addu	$2,$3,$2
 1539 0c60 200040AC 		sw	$0,32($2)
 197:bgtree/bgCore.c ****     nfNode.items[nfNode.length] = newNodes;
 1540              		.loc 1 198 0
 1541 0c64 3D00C293 		lbu	$2,61($fp)
 1542 0c68 00000000 		nop
 1543 0c6c 10004224 		addiu	$2,$2,16
 1544 0c70 80100200 		sll	$2,$2,2
 1545 0c74 1800C327 		addiu	$3,$fp,24
 1546 0c78 21106200 		addu	$2,$3,$2
 1547 0c7c 2000C38F 		lw	$3,32($fp)
 1548 0c80 00000000 		nop
 1549 0c84 240043AC 		sw	$3,36($2)
 198:bgtree/bgCore.c ****     nfNode.length++;
 1550              		.loc 1 199 0
 1551 0c88 3D00C293 		lbu	$2,61($fp)
 1552 0c8c 00000000 		nop
 1553 0c90 01004224 		addiu	$2,$2,1
 1554 0c94 FF004230 		andi	$2,$2,0x00ff
 1555 0c98 3D00C2A3 		sb	$2,61($fp)
 199:bgtree/bgCore.c ****     NodeSave(&nfNode, nonFull);
 1556              		.loc 1 200 0
 1557 0c9c 3800C227 		addiu	$2,$fp,56
 1558 0ca0 21204000 		move	$4,$2
 1559 0ca4 2400C58F 		lw	$5,36($fp)
 1560              		.option	pic0
 1561 0ca8 0000000C 		jal	NodeSave
 1562 0cac 00000000 		nop
 1563              	
 1564              		.option	pic2
 1565              	$LBE7 = .
 1566              	$LBB8 = .
 200:bgtree/bgCore.c ****   }
 201:bgtree/bgCore.c ****   {Node nNewNodes; NodeLoad(&nNewNodes, newNodes);
 1567              		.loc 1 202 0
 1568 0cb0 3800C227 		addiu	$2,$fp,56
 1569 0cb4 21204000 		move	$4,$2
 1570 0cb8 2000C58F 		lw	$5,32($fp)
 1571              		.option	pic0
 1572 0cbc 0000000C 		jal	NodeLoad
 1573 0cc0 00000000 		nop
 1574              	
 1575              		.option	pic2
 202:bgtree/bgCore.c ****     nNewNodes.parentNode = nonFull;
 1576              		.loc 1 203 0
 1577 0cc4 2400C28F 		lw	$2,36($fp)
 1578 0cc8 00000000 		nop
 1579 0ccc 3800C2AF 		sw	$2,56($fp)
 203:bgtree/bgCore.c ****     NodeSave(&nNewNodes, newNodes);
 1580              		.loc 1 204 0
 1581 0cd0 3800C227 		addiu	$2,$fp,56
 1582 0cd4 21204000 		move	$4,$2
 1583 0cd8 2000C58F 		lw	$5,32($fp)
 1584              		.option	pic0
 1585 0cdc 0000000C 		jal	NodeSave
 1586 0ce0 00000000 		nop
 1587              	
 1588              		.option	pic2
 1589              	$LBE8 = .
 204:bgtree/bgCore.c ****   }
 205:bgtree/bgCore.c ****   /* Return the leaf level node of the new nodes */
 206:bgtree/bgCore.c ****   BAT n = newNodes;
 1590              		.loc 1 207 0
 1591 0ce4 2000C28F 		lw	$2,32($fp)
 1592 0ce8 00000000 		nop
 1593 0cec 1C00C2AF 		sw	$2,28($fp)
 1594              	$LBB9 = .
 207:bgtree/bgCore.c ****   for (int i=nfSummary.depth - 2; i >= 0; i--) {
 1595              		.loc 1 208 0
 1596 0cf0 2C00C293 		lbu	$2,44($fp)
 1597 0cf4 00000000 		nop
 1598 0cf8 FEFF4224 		addiu	$2,$2,-2
 1599 0cfc 1800C2AF 		sw	$2,24($fp)
 1600 0d00 0D000010 		b	$L76
 1601 0d04 00000000 		nop
 1602              	
 1603              	$L77:
 1604              	$LBB10 = .
 208:bgtree/bgCore.c ****     Node nn; NodeLoad(&nn, n);
 1605              		.loc 1 209 0
 1606 0d08 3800C227 		addiu	$2,$fp,56
 1607 0d0c 21204000 		move	$4,$2
 1608 0d10 1C00C58F 		lw	$5,28($fp)
 1609              		.option	pic0
 1610 0d14 0000000C 		jal	NodeLoad
 1611 0d18 00000000 		nop
 1612              	
 1613              		.option	pic2
 209:bgtree/bgCore.c ****     n = nn.items[0];
 1614              		.loc 1 210 0
 1615 0d1c 7C00C28F 		lw	$2,124($fp)
 1616 0d20 00000000 		nop
 1617 0d24 1C00C2AF 		sw	$2,28($fp)
 1618              	$LBE10 = .
 208:bgtree/bgCore.c ****     Node nn; NodeLoad(&nn, n);
 1619              		.loc 1 208 0
 1620 0d28 1800C28F 		lw	$2,24($fp)
 1621 0d2c 00000000 		nop
 1622 0d30 FFFF4224 		addiu	$2,$2,-1
 1623 0d34 1800C2AF 		sw	$2,24($fp)
 1624              	$L76:
 1625 0d38 1800C28F 		lw	$2,24($fp)
 1626 0d3c 00000000 		nop
 1627 0d40 F1FF4104 		bgez	$2,$L77
 1628 0d44 00000000 		nop
 1629              	
 1630              	$LBE9 = .
 210:bgtree/bgCore.c ****   }
 211:bgtree/bgCore.c ****   return n;
 1631              		.loc 1 212 0
 1632 0d48 1C00C28F 		lw	$2,28($fp)
 1633              	$L75:
 212:bgtree/bgCore.c **** }
 1634              		.loc 1 213 0
 1635 0d4c 21E8C003 		move	$sp,$fp
 1636 0d50 BC00BF8F 		lw	$31,188($sp)
 1637 0d54 B800BE8F 		lw	$fp,184($sp)
 1638 0d58 C000BD27 		addiu	$sp,$sp,192
 1639 0d5c 0800E003 		j	$31
 1640 0d60 00000000 		nop
 1641              	
 1642              		.set	macro
 1643              		.set	reorder
 1644              		.end	AppendNewLeafNode
 1645              	$LFE18:
 1647              		.align	2
 1648              		.globl	NodeVisitDFS
 1649              	$LFB19 = .
 213:bgtree/bgCore.c **** 
 214:bgtree/bgCore.c **** /** A traversal which invokes NodeVisitor on each node.  If NodeVisitor returns
 215:bgtree/bgCore.c ****  * a non-zero value, then the traversal is terminated and the current node is
 216:bgtree/bgCore.c ****  * returned to the caller **/
 217:bgtree/bgCore.c **** BAT NodeVisitDFS(BgTree tree, NodeVisitor func, BAT node) {
 1650              		.loc 1 218 0
 1651              		.set	nomips16
 1652              		.ent	NodeVisitDFS
 1654              	NodeVisitDFS:
 1655              		.frame	$fp,184,$31		# vars= 152, regs= 2/0, args= 16, gp= 8
 1656              		.mask	0xc0000000,-4
 1657              		.fmask	0x00000000,0
 1658              		.set	noreorder
 1659              		.set	nomacro
 1660              		
 1661 0d64 48FFBD27 		addiu	$sp,$sp,-184
 1662              	$LCFI73:
 1663 0d68 B400BFAF 		sw	$31,180($sp)
 1664              	$LCFI74:
 1665 0d6c B000BEAF 		sw	$fp,176($sp)
 1666              	$LCFI75:
 1667 0d70 21F0A003 		move	$fp,$sp
 1668              	$LCFI76:
 1669 0d74 B800C4AF 		sw	$4,184($fp)
 1670 0d78 BC00C5AF 		sw	$5,188($fp)
 1671 0d7c C000C6AF 		sw	$6,192($fp)
 1672 0d80 C400C7AF 		sw	$7,196($fp)
 218:bgtree/bgCore.c ****   if (node == BAInvalid)
 1673              		.loc 1 219 0
 1674 0d84 C400C38F 		lw	$3,196($fp)
 1675 0d88 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1676 0d8c 04006214 		bne	$3,$2,$L80
 1677 0d90 00000000 		nop
 1678              	
 219:bgtree/bgCore.c ****     return BAInvalid;
 1679              		.loc 1 220 0
 1680 0d94 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1681 0d98 3D000010 		b	$L81
 1682 0d9c 00000000 		nop
 1683              	
 1684              	$L80:
 220:bgtree/bgCore.c ****   SetUserData(tree.userData);
 1685              		.loc 1 221 0
 1686 0da0 BC00C28F 		lw	$2,188($fp)
 1687 0da4 00000000 		nop
 1688 0da8 21204000 		move	$4,$2
 1689              		.option	pic0
 1690 0dac 0000000C 		jal	SetUserData
 1691 0db0 00000000 		nop
 1692              	
 1693              		.option	pic2
 221:bgtree/bgCore.c ****   NodeSummary snode = NodeSummaryLoad(node);
 1694              		.loc 1 222 0
 1695 0db4 2000C227 		addiu	$2,$fp,32
 1696 0db8 21204000 		move	$4,$2
 1697 0dbc C400C58F 		lw	$5,196($fp)
 1698              		.option	pic0
 1699 0dc0 0000000C 		jal	NodeSummaryLoad
 1700 0dc4 00000000 		nop
 1701              	
 1702              		.option	pic2
 222:bgtree/bgCore.c ****   /** Traverse children **/
 223:bgtree/bgCore.c ****   if (snode.depth != 0) {
 1703              		.loc 1 224 0
 1704 0dc8 2400C293 		lbu	$2,36($fp)
 1705 0dcc 00000000 		nop
 1706 0dd0 1A004010 		beq	$2,$0,$L82
 1707 0dd4 00000000 		nop
 1708              	
 1709              	$LBB11 = .
 224:bgtree/bgCore.c ****     for (int i=0; i<snode.length; i++)
 1710              		.loc 1 225 0
 1711 0dd8 1C00C0AF 		sw	$0,28($fp)
 1712 0ddc 0F000010 		b	$L83
 1713 0de0 00000000 		nop
 1714              	
 1715              	$L84:
 225:bgtree/bgCore.c ****       NodeVisitDFS(tree, func, NodeItemLoad(node, i));    
 1716              		.loc 1 226 0
 1717 0de4 C400C48F 		lw	$4,196($fp)
 1718 0de8 1C00C58F 		lw	$5,28($fp)
 1719              		.option	pic0
 1720 0dec 0000000C 		jal	NodeItemLoad
 1721 0df0 00000000 		nop
 1722              	
 1723              		.option	pic2
 1724 0df4 B800C48F 		lw	$4,184($fp)
 1725 0df8 BC00C58F 		lw	$5,188($fp)
 1726 0dfc C000C68F 		lw	$6,192($fp)
 1727 0e00 21384000 		move	$7,$2
 1728              		.option	pic0
 1729 0e04 0000000C 		jal	NodeVisitDFS
 1730 0e08 00000000 		nop
 1731              	
 1732              		.option	pic2
 225:bgtree/bgCore.c ****       NodeVisitDFS(tree, func, NodeItemLoad(node, i));    
 1733              		.loc 1 225 0
 1734 0e0c 1C00C28F 		lw	$2,28($fp)
 1735 0e10 00000000 		nop
 1736 0e14 01004224 		addiu	$2,$2,1
 1737 0e18 1C00C2AF 		sw	$2,28($fp)
 1738              	$L83:
 1739 0e1c 2500C293 		lbu	$2,37($fp)
 1740 0e20 00000000 		nop
 1741 0e24 21184000 		move	$3,$2
 1742 0e28 1C00C28F 		lw	$2,28($fp)
 1743 0e2c 00000000 		nop
 1744 0e30 2A104300 		slt	$2,$2,$3
 1745 0e34 EBFF4014 		bne	$2,$0,$L84
 1746 0e38 00000000 		nop
 1747              	
 1748              	$L82:
 1749              	$LBE11 = .
 1750              	$LBB12 = .
 226:bgtree/bgCore.c ****   }
 227:bgtree/bgCore.c ****   /** Call user visitor **/
 228:bgtree/bgCore.c ****   {Node nnode; NodeLoad(&nnode, node);
 1751              		.loc 1 229 0
 1752 0e3c 3000C227 		addiu	$2,$fp,48
 1753 0e40 21204000 		move	$4,$2
 1754 0e44 C400C58F 		lw	$5,196($fp)
 1755              		.option	pic0
 1756 0e48 0000000C 		jal	NodeLoad
 1757 0e4c 00000000 		nop
 1758              	
 1759              		.option	pic2
 229:bgtree/bgCore.c ****     int ret = (*func)(node, &nnode);
 1760              		.loc 1 230 0
 1761 0e50 3000C327 		addiu	$3,$fp,48
 1762 0e54 C000C28F 		lw	$2,192($fp)
 1763 0e58 C400C48F 		lw	$4,196($fp)
 1764 0e5c 21286000 		move	$5,$3
 1765 0e60 21C84000 		move	$25,$2
 1766 0e64 09F82003 		jalr	$25
 1767 0e68 00000000 		nop
 1768              	
 1769 0e6c 1800C2AF 		sw	$2,24($fp)
 230:bgtree/bgCore.c ****     if (ret) // Visitor is done, return node where he finished
 1770              		.loc 1 231 0
 1771 0e70 1800C28F 		lw	$2,24($fp)
 1772 0e74 00000000 		nop
 1773 0e78 04004010 		beq	$2,$0,$L85
 1774 0e7c 00000000 		nop
 1775              	
 231:bgtree/bgCore.c ****       return node;
 1776              		.loc 1 232 0
 1777 0e80 C400C28F 		lw	$2,196($fp)
 1778 0e84 02000010 		b	$L81
 1779 0e88 00000000 		nop
 1780              	
 1781              	$L85:
 1782              	$LBE12 = .
 232:bgtree/bgCore.c ****   }
 233:bgtree/bgCore.c ****   return BAInvalid;
 1783              		.loc 1 234 0
 1784 0e8c FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1785              	$L81:
 234:bgtree/bgCore.c **** }
 1786              		.loc 1 235 0
 1787 0e90 21E8C003 		move	$sp,$fp
 1788 0e94 B400BF8F 		lw	$31,180($sp)
 1789 0e98 B000BE8F 		lw	$fp,176($sp)
 1790 0e9c B800BD27 		addiu	$sp,$sp,184
 1791 0ea0 0800E003 		j	$31
 1792 0ea4 00000000 		nop
 1793              	
 1794              		.set	macro
 1795              		.set	reorder
 1796              		.end	NodeVisitDFS
 1797              	$LFE19:
 1799              		.rdata
 1800              		.align	2
 1801              	$LC0:
 1802 0000 4C256920 		.ascii	"L%i = %lu\012\000"
 1802      3D20256C 
 1802      750A00
 1803              		.text
 1804              		.align	2
 1805              		.globl	CalcTreeSize2
 1806              	$LFB20 = .
 235:bgtree/bgCore.c **** 
 236:bgtree/bgCore.c **** /** Calculates the number of bytes to hold a tree for a set number of elements
 237:bgtree/bgCore.c ****  *  May be slightly larger than actually required (by a few blocks) **/
 238:bgtree/bgCore.c **** int CalcTreeSize2(int numItems, int depth) {
 1807              		.loc 1 239 0
 1808              		.set	nomips16
 1809              		.ent	CalcTreeSize2
 1811              	CalcTreeSize2:
 1812              		.frame	$fp,48,$31		# vars= 16, regs= 2/0, args= 16, gp= 8
 1813              		.mask	0xc0000000,-4
 1814              		.fmask	0x00000000,0
 1815              		.set	noreorder
 1816              		.set	nomacro
 1817              		
 1818 0ea8 D0FFBD27 		addiu	$sp,$sp,-48
 1819              	$LCFI77:
 1820 0eac 2C00BFAF 		sw	$31,44($sp)
 1821              	$LCFI78:
 1822 0eb0 2800BEAF 		sw	$fp,40($sp)
 1823              	$LCFI79:
 1824 0eb4 21F0A003 		move	$fp,$sp
 1825              	$LCFI80:
 1826 0eb8 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1827 0ebc 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1828 0ec0 1000BCAF 		.cprestore	16
 1829 0ec4 3000C4AF 		sw	$4,48($fp)
 1830 0ec8 3400C5AF 		sw	$5,52($fp)
 239:bgtree/bgCore.c ****   int summ=0;
 1831              		.loc 1 240 0
 1832 0ecc 2000C0AF 		sw	$0,32($fp)
 240:bgtree/bgCore.c ****   int n = numItems;
 1833              		.loc 1 241 0
 1834 0ed0 3000C28F 		lw	$2,48($fp)
 1835 0ed4 00000000 		nop
 1836 0ed8 1C00C2AF 		sw	$2,28($fp)
 1837              	$LBB13 = .
 241:bgtree/bgCore.c ****   for (int i=0; i<depth; i++) {
 1838              		.loc 1 242 0
 1839 0edc 1800C0AF 		sw	$0,24($fp)
 1840 0ee0 26000010 		b	$L88
 1841 0ee4 00000000 		nop
 1842              	
 1843              	$L89:
 242:bgtree/bgCore.c ****     printf("L%i = %lu\n", i, (unsigned long int) n/ItemsPerNode + 1);
 1844              		.loc 1 243 0
 1845 0ee8 0000023C 		lui	$2,%hi($LC0)
 1846 0eec 00004324 		addiu	$3,$2,%lo($LC0)
 1847 0ef0 1C00C48F 		lw	$4,28($fp)
 1848 0ef4 0F000224 		li	$2,15			# 0xf
 1849 0ef8 02004014 		bne	$2,$0,1f
 1850 0efc 1B008200 		divu	$0,$4,$2
 1851 0f00 0D000700 		break	7
 1852              	1:
 1853 0f04 10200000 		mfhi	$4
 1854 0f08 12100000 		mflo	$2
 1855 0f0c 01004224 		addiu	$2,$2,1
 1856 0f10 21206000 		move	$4,$3
 1857 0f14 1800C58F 		lw	$5,24($fp)
 1858 0f18 21304000 		move	$6,$2
 1859 0f1c 0000828F 		lw	$2,%call16(printf)($28)
 1860 0f20 00000000 		nop
 1861 0f24 21C84000 		move	$25,$2
 1862 0f28 09F82003 		jalr	$25
 1863 0f2c 00000000 		nop
 1864              	
 1865 0f30 1000DC8F 		lw	$28,16($fp)
 243:bgtree/bgCore.c ****     n = n/ItemsPerNode + 1; /* 1 is a slop factor - could be more precise */
 1866              		.loc 1 244 0
 1867 0f34 1C00C38F 		lw	$3,28($fp)
 1868 0f38 0F000224 		li	$2,15			# 0xf
 1869 0f3c 02004014 		bne	$2,$0,1f
 1870 0f40 1B006200 		divu	$0,$3,$2
 1871 0f44 0D000700 		break	7
 1872              	1:
 1873 0f48 10180000 		mfhi	$3
 1874 0f4c 12100000 		mflo	$2
 1875 0f50 01004224 		addiu	$2,$2,1
 1876 0f54 1C00C2AF 		sw	$2,28($fp)
 244:bgtree/bgCore.c ****     summ += n;
 1877              		.loc 1 245 0
 1878 0f58 2000C38F 		lw	$3,32($fp)
 1879 0f5c 1C00C28F 		lw	$2,28($fp)
 1880 0f60 00000000 		nop
 1881 0f64 21106200 		addu	$2,$3,$2
 1882 0f68 2000C2AF 		sw	$2,32($fp)
 242:bgtree/bgCore.c ****     printf("L%i = %lu\n", i, (unsigned long int) n/ItemsPerNode + 1);
 1883              		.loc 1 242 0
 1884 0f6c 1800C28F 		lw	$2,24($fp)
 1885 0f70 00000000 		nop
 1886 0f74 01004224 		addiu	$2,$2,1
 1887 0f78 1800C2AF 		sw	$2,24($fp)
 1888              	$L88:
 1889 0f7c 1800C38F 		lw	$3,24($fp)
 1890 0f80 3400C28F 		lw	$2,52($fp)
 1891 0f84 00000000 		nop
 1892 0f88 2A106200 		slt	$2,$3,$2
 1893 0f8c D6FF4014 		bne	$2,$0,$L89
 1894 0f90 00000000 		nop
 1895              	
 1896              	$LBE13 = .
 245:bgtree/bgCore.c ****   }
 246:bgtree/bgCore.c ****   return summ * BlockSize;
 1897              		.loc 1 247 0
 1898 0f94 2000C28F 		lw	$2,32($fp)
 1899 0f98 00000000 		nop
 1900 0f9c C0110200 		sll	$2,$2,7
 247:bgtree/bgCore.c **** }
 1901              		.loc 1 248 0
 1902 0fa0 21E8C003 		move	$sp,$fp
 1903 0fa4 2C00BF8F 		lw	$31,44($sp)
 1904 0fa8 2800BE8F 		lw	$fp,40($sp)
 1905 0fac 3000BD27 		addiu	$sp,$sp,48
 1906 0fb0 0800E003 		j	$31
 1907 0fb4 00000000 		nop
 1908              	
 1909              		.set	macro
 1910              		.set	reorder
 1911              		.end	CalcTreeSize2
 1912              	$LFE20:
 1914              		.rdata
 1915 000b 00       		.align	2
 1916              	$LC1:
 1917 000c 3000     		.ascii	"0\000"
 1918 000e 0000     		.align	2
 1919              	$LC2:
 1920 0010 62677472 		.ascii	"bgtree/bgCore.c\000"
 1920      65652F62 
 1920      67436F72 
 1920      652E6300 
 1921              		.text
 1922              		.align	2
 1923              		.globl	CalcMinimumDepth
 1924              	$LFB21 = .
 248:bgtree/bgCore.c **** 
 249:bgtree/bgCore.c **** /** Calculate the Minimum tree depth given the number of items to store and the
 250:bgtree/bgCore.c ****  * tree parameters.  Might be a little conservative (aka, sloppy). **/
 251:bgtree/bgCore.c **** int CalcMinimumDepth(int numItems) {
 1925              		.loc 1 252 0
 1926              		.set	nomips16
 1927              		.ent	CalcMinimumDepth
 1929              	CalcMinimumDepth:
 1930              		.frame	$fp,48,$31		# vars= 16, regs= 2/0, args= 16, gp= 8
 1931              		.mask	0xc0000000,-4
 1932              		.fmask	0x00000000,0
 1933              		.set	noreorder
 1934              		.set	nomacro
 1935              		
 1936 0fb8 D0FFBD27 		addiu	$sp,$sp,-48
 1937              	$LCFI81:
 1938 0fbc 2C00BFAF 		sw	$31,44($sp)
 1939              	$LCFI82:
 1940 0fc0 2800BEAF 		sw	$fp,40($sp)
 1941              	$LCFI83:
 1942 0fc4 21F0A003 		move	$fp,$sp
 1943              	$LCFI84:
 1944 0fc8 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1945 0fcc 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1946 0fd0 1000BCAF 		.cprestore	16
 1947 0fd4 3000C4AF 		sw	$4,48($fp)
 252:bgtree/bgCore.c ****   int priorn = -999;
 1948              		.loc 1 253 0
 1949 0fd8 19FC0224 		li	$2,-999			# 0xfffffffffffffc19
 1950 0fdc 2000C2AF 		sw	$2,32($fp)
 253:bgtree/bgCore.c ****   int n = numItems;
 1951              		.loc 1 254 0
 1952 0fe0 3000C28F 		lw	$2,48($fp)
 1953 0fe4 00000000 		nop
 1954 0fe8 1C00C2AF 		sw	$2,28($fp)
 1955              	$LBB14 = .
 254:bgtree/bgCore.c ****   for (int i=0; i<99; i++) {
 1956              		.loc 1 255 0
 1957 0fec 1800C0AF 		sw	$0,24($fp)
 1958 0ff0 27000010 		b	$L92
 1959 0ff4 00000000 		nop
 1960              	
 1961              	$L94:
 255:bgtree/bgCore.c ****     n = n/ItemsPerNode + 1; /* 1 is a slop factor - could be more precise */
 1962              		.loc 1 256 0
 1963 0ff8 1C00C38F 		lw	$3,28($fp)
 1964 0ffc 0F000224 		li	$2,15			# 0xf
 1965 1000 02004014 		bne	$2,$0,1f
 1966 1004 1B006200 		divu	$0,$3,$2
 1967 1008 0D000700 		break	7
 1968              	1:
 1969 100c 10180000 		mfhi	$3
 1970 1010 12100000 		mflo	$2
 1971 1014 01004224 		addiu	$2,$2,1
 1972 1018 1C00C2AF 		sw	$2,28($fp)
 256:bgtree/bgCore.c ****     if ((n == priorn) && (n == 1))
 1973              		.loc 1 257 0
 1974 101c 1C00C38F 		lw	$3,28($fp)
 1975 1020 2000C28F 		lw	$2,32($fp)
 1976 1024 00000000 		nop
 1977 1028 12006214 		bne	$3,$2,$L93
 1978 102c 00000000 		nop
 1979              	
 1980 1030 1C00C38F 		lw	$3,28($fp)
 1981 1034 01000224 		li	$2,1			# 0x1
 1982 1038 0E006214 		bne	$3,$2,$L93
 1983 103c 00000000 		nop
 1984              	
 257:bgtree/bgCore.c ****       return i + 1 + (i == 0);
 1985              		.loc 1 258 0
 1986 1040 1800C28F 		lw	$2,24($fp)
 1987 1044 00000000 		nop
 1988 1048 01004324 		addiu	$3,$2,1
 1989 104c 1800C28F 		lw	$2,24($fp)
 1990 1050 00000000 		nop
 1991 1054 0100422C 		sltu	$2,$2,1
 1992 1058 21106200 		addu	$2,$3,$2
 1993              	$LBE14 = .
 258:bgtree/bgCore.c ****     priorn = n;
 259:bgtree/bgCore.c ****   }
 260:bgtree/bgCore.c ****   assert(0);
 261:bgtree/bgCore.c **** }
 1994              		.loc 1 262 0
 1995 105c 21E8C003 		move	$sp,$fp
 1996 1060 2C00BF8F 		lw	$31,44($sp)
 1997 1064 2800BE8F 		lw	$fp,40($sp)
 1998 1068 3000BD27 		addiu	$sp,$sp,48
 1999 106c 0800E003 		j	$31
 2000 1070 00000000 		nop
 2001              	
 2002              	$L93:
 2003              	$LBB15 = .
 259:bgtree/bgCore.c ****     priorn = n;
 2004              		.loc 1 259 0
 2005 1074 1C00C28F 		lw	$2,28($fp)
 2006 1078 00000000 		nop
 2007 107c 2000C2AF 		sw	$2,32($fp)
 255:bgtree/bgCore.c ****   for (int i=0; i<99; i++) {
 2008              		.loc 1 255 0
 2009 1080 1800C28F 		lw	$2,24($fp)
 2010 1084 00000000 		nop
 2011 1088 01004224 		addiu	$2,$2,1
 2012 108c 1800C2AF 		sw	$2,24($fp)
 2013              	$L92:
 2014 1090 1800C28F 		lw	$2,24($fp)
 2015 1094 00000000 		nop
 2016 1098 63004228 		slt	$2,$2,99
 2017 109c D6FF4014 		bne	$2,$0,$L94
 2018 10a0 00000000 		nop
 2019              	
 2020              	$LBE15 = .
 261:bgtree/bgCore.c ****   assert(0);
 2021              		.loc 1 261 0
 2022 10a4 0000023C 		lui	$2,%hi($LC1)
 2023 10a8 0C004424 		addiu	$4,$2,%lo($LC1)
 2024 10ac 0000023C 		lui	$2,%hi($LC2)
 2025 10b0 10004524 		addiu	$5,$2,%lo($LC2)
 2026 10b4 05010624 		li	$6,261			# 0x105
 2027 10b8 0000023C 		lui	$2,%hi(__PRETTY_FUNCTION__.2702)
 2028 10bc 68004724 		addiu	$7,$2,%lo(__PRETTY_FUNCTION__.2702)
 2029 10c0 0000828F 		lw	$2,%call16(__assert_fail)($28)
 2030 10c4 00000000 		nop
 2031 10c8 21C84000 		move	$25,$2
 2032 10cc 09F82003 		jalr	$25
 2033 10d0 00000000 		nop
 2034              	
 2035              		.set	macro
 2036              		.set	reorder
 2037              		.end	CalcMinimumDepth
 2038              	$LFE21:
 2040              		.rdata
 2041              		.align	2
 2042              	$LC3:
 2043 0020 696E6465 		.ascii	"index != (uint16_t) -1\000"
 2043      7820213D 
 2043      20287569 
 2043      6E743136 
 2043      5F742920 
 2044 0037 00       		.align	2
 2045              	$LC4:
 2046 0038 6E657874 		.ascii	"nextChild != ((BlockAddrT) -1)\000"
 2046      4368696C 
 2046      6420213D 
 2046      20282842 
 2046      6C6F636B 
 2047              		.text
 2048              		.align	2
 2049              		.globl	NodeNextLeaf
 2050              	$LFB22 = .
 262:bgtree/bgCore.c **** 
 263:bgtree/bgCore.c **** BAT NodeNextLeaf(BAT node, BAT child) {
 2051              		.loc 1 264 0
 2052              		.set	nomips16
 2053              		.ent	NodeNextLeaf
 2055              	NodeNextLeaf:
 2056              		.frame	$fp,48,$31		# vars= 8, regs= 3/0, args= 16, gp= 8
 2057              		.mask	0xc0010000,-4
 2058              		.fmask	0x00000000,0
 2059              		.set	noreorder
 2060              		.set	nomacro
 2061              		
 2062 10d4 D0FFBD27 		addiu	$sp,$sp,-48
 2063              	$LCFI85:
 2064 10d8 2C00BFAF 		sw	$31,44($sp)
 2065              	$LCFI86:
 2066 10dc 2800BEAF 		sw	$fp,40($sp)
 2067              	$LCFI87:
 2068 10e0 2400B0AF 		sw	$16,36($sp)
 2069              	$LCFI88:
 2070 10e4 21F0A003 		move	$fp,$sp
 2071              	$LCFI89:
 2072 10e8 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 2073 10ec 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 2074 10f0 1000BCAF 		.cprestore	16
 2075 10f4 3000C4AF 		sw	$4,48($fp)
 2076 10f8 3400C5AF 		sw	$5,52($fp)
 264:bgtree/bgCore.c ****   if (node == BAInvalid)
 2077              		.loc 1 265 0
 2078 10fc 3000C38F 		lw	$3,48($fp)
 2079 1100 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2080 1104 04006214 		bne	$3,$2,$L97
 2081 1108 00000000 		nop
 2082              	
 265:bgtree/bgCore.c ****     return BAInvalid;
 2083              		.loc 1 266 0
 2084 110c FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2085 1110 53000010 		b	$L98
 2086 1114 00000000 		nop
 2087              	
 2088              	$L97:
 266:bgtree/bgCore.c ****   int index = FindIndexOfChild(node, child);
 2089              		.loc 1 267 0
 2090 1118 3000C48F 		lw	$4,48($fp)
 2091 111c 3400C58F 		lw	$5,52($fp)
 2092              		.option	pic0
 2093 1120 0000000C 		jal	FindIndexOfChild
 2094 1124 00000000 		nop
 2095              	
 2096              		.option	pic2
 2097 1128 1000DC8F 		lw	$28,16($fp)
 2098 112c 1C00C2AF 		sw	$2,28($fp)
 267:bgtree/bgCore.c ****   assert(index != (uint16_t) -1);
 2099              		.loc 1 268 0
 2100 1130 1C00C38F 		lw	$3,28($fp)
 2101 1134 FFFF0234 		li	$2,65535			# 0xffff
 2102 1138 0D006214 		bne	$3,$2,$L99
 2103 113c 00000000 		nop
 2104              	
 2105 1140 0000023C 		lui	$2,%hi($LC3)
 2106 1144 20004424 		addiu	$4,$2,%lo($LC3)
 2107 1148 0000023C 		lui	$2,%hi($LC2)
 2108 114c 10004524 		addiu	$5,$2,%lo($LC2)
 2109 1150 0C010624 		li	$6,268			# 0x10c
 2110 1154 0000023C 		lui	$2,%hi(__PRETTY_FUNCTION__.2718)
 2111 1158 58004724 		addiu	$7,$2,%lo(__PRETTY_FUNCTION__.2718)
 2112 115c 0000828F 		lw	$2,%call16(__assert_fail)($28)
 2113 1160 00000000 		nop
 2114 1164 21C84000 		move	$25,$2
 2115 1168 09F82003 		jalr	$25
 2116 116c 00000000 		nop
 2117              	
 2118              	$L99:
 268:bgtree/bgCore.c ****   if (index < NodeLen(node)-1) {
 2119              		.loc 1 269 0
 2120 1170 1C00D08F 		lw	$16,28($fp)
 2121 1174 3000C48F 		lw	$4,48($fp)
 2122              		.option	pic0
 2123 1178 0000000C 		jal	NodeLen
 2124 117c 00000000 		nop
 2125              	
 2126              		.option	pic2
 2127 1180 1000DC8F 		lw	$28,16($fp)
 2128 1184 FFFF4224 		addiu	$2,$2,-1
 2129 1188 2B100202 		sltu	$2,$16,$2
 2130 118c 2B004010 		beq	$2,$0,$L100
 2131 1190 00000000 		nop
 2132              	
 2133              	$LBB16 = .
 269:bgtree/bgCore.c ****     // descend to the left
 270:bgtree/bgCore.c ****     BAT nextChild = NodeItemLoad(node, index + 1);
 2134              		.loc 1 271 0
 2135 1194 1C00C28F 		lw	$2,28($fp)
 2136 1198 00000000 		nop
 2137 119c 01004224 		addiu	$2,$2,1
 2138 11a0 3000C48F 		lw	$4,48($fp)
 2139 11a4 21284000 		move	$5,$2
 2140              		.option	pic0
 2141 11a8 0000000C 		jal	NodeItemLoad
 2142 11ac 00000000 		nop
 2143              	
 2144              		.option	pic2
 2145 11b0 1000DC8F 		lw	$28,16($fp)
 2146 11b4 1800C2AF 		sw	$2,24($fp)
 271:bgtree/bgCore.c ****     while (NodeDepth(nextChild) != 0) {
 2147              		.loc 1 272 0
 2148 11b8 17000010 		b	$L101
 2149 11bc 00000000 		nop
 2150              	
 2151              	$L102:
 272:bgtree/bgCore.c ****       nextChild = NodeItemLoad(nextChild, 0);
 2152              		.loc 1 273 0
 2153 11c0 1800C48F 		lw	$4,24($fp)
 2154 11c4 21280000 		move	$5,$0
 2155              		.option	pic0
 2156 11c8 0000000C 		jal	NodeItemLoad
 2157 11cc 00000000 		nop
 2158              	
 2159              		.option	pic2
 2160 11d0 1000DC8F 		lw	$28,16($fp)
 2161 11d4 1800C2AF 		sw	$2,24($fp)
 273:bgtree/bgCore.c ****       assert(nextChild != BAInvalid);
 2162              		.loc 1 274 0
 2163 11d8 1800C38F 		lw	$3,24($fp)
 2164 11dc FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2165 11e0 0D006214 		bne	$3,$2,$L101
 2166 11e4 00000000 		nop
 2167              	
 2168 11e8 0000023C 		lui	$2,%hi($LC4)
 2169 11ec 38004424 		addiu	$4,$2,%lo($LC4)
 2170 11f0 0000023C 		lui	$2,%hi($LC2)
 2171 11f4 10004524 		addiu	$5,$2,%lo($LC2)
 2172 11f8 12010624 		li	$6,274			# 0x112
 2173 11fc 0000023C 		lui	$2,%hi(__PRETTY_FUNCTION__.2718)
 2174 1200 58004724 		addiu	$7,$2,%lo(__PRETTY_FUNCTION__.2718)
 2175 1204 0000828F 		lw	$2,%call16(__assert_fail)($28)
 2176 1208 00000000 		nop
 2177 120c 21C84000 		move	$25,$2
 2178 1210 09F82003 		jalr	$25
 2179 1214 00000000 		nop
 2180              	
 2181              	$L101:
 272:bgtree/bgCore.c ****       nextChild = NodeItemLoad(nextChild, 0);
 2182              		.loc 1 272 0
 2183 1218 1800C48F 		lw	$4,24($fp)
 2184              		.option	pic0
 2185 121c 0000000C 		jal	NodeDepth
 2186 1220 00000000 		nop
 2187              	
 2188              		.option	pic2
 2189 1224 1000DC8F 		lw	$28,16($fp)
 2190 1228 E5FF4014 		bne	$2,$0,$L102
 2191 122c 00000000 		nop
 2192              	
 274:bgtree/bgCore.c ****     }
 275:bgtree/bgCore.c ****     return nextChild;
 2193              		.loc 1 276 0
 2194 1230 1800C28F 		lw	$2,24($fp)
 2195 1234 0A000010 		b	$L98
 2196 1238 00000000 		nop
 2197              	
 2198              	$L100:
 2199              	$LBE16 = .
 276:bgtree/bgCore.c ****   }
 277:bgtree/bgCore.c ****   return NodeNextLeaf(NodeParent(node), node);
 2200              		.loc 1 278 0
 2201 123c 3000C48F 		lw	$4,48($fp)
 2202              		.option	pic0
 2203 1240 0000000C 		jal	NodeParent
 2204 1244 00000000 		nop
 2205              	
 2206              		.option	pic2
 2207 1248 1000DC8F 		lw	$28,16($fp)
 2208 124c 21204000 		move	$4,$2
 2209 1250 3000C58F 		lw	$5,48($fp)
 2210              		.option	pic0
 2211 1254 0000000C 		jal	NodeNextLeaf
 2212 1258 00000000 		nop
 2213              	
 2214              		.option	pic2
 2215 125c 1000DC8F 		lw	$28,16($fp)
 2216              	$L98:
 278:bgtree/bgCore.c **** }
 2217              		.loc 1 279 0
 2218 1260 21E8C003 		move	$sp,$fp
 2219 1264 2C00BF8F 		lw	$31,44($sp)
 2220 1268 2800BE8F 		lw	$fp,40($sp)
 2221 126c 2400B08F 		lw	$16,36($sp)
 2222 1270 3000BD27 		addiu	$sp,$sp,48
 2223 1274 0800E003 		j	$31
 2224 1278 00000000 		nop
 2225              	
 2226              		.set	macro
 2227              		.set	reorder
 2228              		.end	NodeNextLeaf
 2229              	$LFE22:
 2231              		.align	2
 2232              		.globl	RowPtrInit
 2233              	$LFB23 = .
 279:bgtree/bgCore.c **** 
 280:bgtree/bgCore.c **** RowPtr RowPtrInit(BgTree table) {
 2234              		.loc 1 281 0
 2235              		.set	nomips16
 2236              		.ent	RowPtrInit
 2238              	RowPtrInit:
 2239              		.frame	$fp,32,$31		# vars= 16, regs= 1/0, args= 0, gp= 8
 2240              		.mask	0x40000000,-4
 2241              		.fmask	0x00000000,0
 2242              		.set	noreorder
 2243              		.set	nomacro
 2244              		
 2245 127c E0FFBD27 		addiu	$sp,$sp,-32
 2246              	$LCFI90:
 2247 1280 1C00BEAF 		sw	$fp,28($sp)
 2248              	$LCFI91:
 2249 1284 21F0A003 		move	$fp,$sp
 2250              	$LCFI92:
 2251 1288 21108000 		move	$2,$4
 2252 128c 2400C5AF 		sw	$5,36($fp)
 2253 1290 2800C6AF 		sw	$6,40($fp)
 281:bgtree/bgCore.c ****   RowPtr rp;
 282:bgtree/bgCore.c ****   rp.tree = table;
 2254              		.loc 1 283 0
 2255 1294 2400C48F 		lw	$4,36($fp)
 2256 1298 2800C38F 		lw	$3,40($fp)
 2257 129c 0800C4AF 		sw	$4,8($fp)
 2258 12a0 0C00C3AF 		sw	$3,12($fp)
 283:bgtree/bgCore.c ****   rp.node = BAInvalid;
 2259              		.loc 1 284 0
 2260 12a4 FFFF0324 		li	$3,-1			# 0xffffffffffffffff
 2261 12a8 1000C3AF 		sw	$3,16($fp)
 284:bgtree/bgCore.c ****   rp.index = (uint16_t) -1;
 2262              		.loc 1 285 0
 2263 12ac FFFF0334 		li	$3,65535			# 0xffff
 2264 12b0 1400C3AF 		sw	$3,20($fp)
 285:bgtree/bgCore.c ****   return rp;
 2265              		.loc 1 286 0
 2266 12b4 0800C68F 		lw	$6,8($fp)
 2267 12b8 0C00C58F 		lw	$5,12($fp)
 2268 12bc 1000C48F 		lw	$4,16($fp)
 2269 12c0 1400C38F 		lw	$3,20($fp)
 2270 12c4 000046AC 		sw	$6,0($2)
 2271 12c8 040045AC 		sw	$5,4($2)
 2272 12cc 080044AC 		sw	$4,8($2)
 2273 12d0 0C0043AC 		sw	$3,12($2)
 286:bgtree/bgCore.c **** }
 2274              		.loc 1 287 0
 2275 12d4 21E8C003 		move	$sp,$fp
 2276 12d8 1C00BE8F 		lw	$fp,28($sp)
 2277 12dc 2000BD27 		addiu	$sp,$sp,32
 2278 12e0 0800E003 		j	$31
 2279 12e4 00000000 		nop
 2280              	
 2281              		.set	macro
 2282              		.set	reorder
 2283              		.end	RowPtrInit
 2284              	$LFE23:
 2286              		.align	2
 2287              		.globl	RowPtrNext
 2288              	$LFB24 = .
 287:bgtree/bgCore.c **** 
 288:bgtree/bgCore.c **** RowPtr RowPtrNext(RowPtr row) {
 2289              		.loc 1 289 0
 2290              		.set	nomips16
 2291              		.ent	RowPtrNext
 2293              	RowPtrNext:
 2294              		.frame	$fp,48,$31		# vars= 8, regs= 4/0, args= 16, gp= 8
 2295              		.mask	0xc0030000,-4
 2296              		.fmask	0x00000000,0
 2297              		.set	noreorder
 2298              		.set	nomacro
 2299              		
 2300 12e8 D0FFBD27 		addiu	$sp,$sp,-48
 2301              	$LCFI93:
 2302 12ec 2C00BFAF 		sw	$31,44($sp)
 2303              	$LCFI94:
 2304 12f0 2800BEAF 		sw	$fp,40($sp)
 2305              	$LCFI95:
 2306 12f4 2400B1AF 		sw	$17,36($sp)
 2307              	$LCFI96:
 2308 12f8 2000B0AF 		sw	$16,32($sp)
 2309              	$LCFI97:
 2310 12fc 21F0A003 		move	$fp,$sp
 2311              	$LCFI98:
 2312 1300 21808000 		move	$16,$4
 2313 1304 3400C5AF 		sw	$5,52($fp)
 2314 1308 3800C6AF 		sw	$6,56($fp)
 2315 130c 3C00C7AF 		sw	$7,60($fp)
 289:bgtree/bgCore.c ****   if (row.node == BAInvalid) {
 2316              		.loc 1 290 0
 2317 1310 3C00C38F 		lw	$3,60($fp)
 2318 1314 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2319 1318 0B006214 		bne	$3,$2,$L107
 2320 131c 00000000 		nop
 2321              	
 290:bgtree/bgCore.c ****     return row;
 2322              		.loc 1 291 0
 2323 1320 3400C58F 		lw	$5,52($fp)
 2324 1324 3800C48F 		lw	$4,56($fp)
 2325 1328 3C00C38F 		lw	$3,60($fp)
 2326 132c 4000C28F 		lw	$2,64($fp)
 2327 1330 000005AE 		sw	$5,0($16)
 2328 1334 040004AE 		sw	$4,4($16)
 2329 1338 080003AE 		sw	$3,8($16)
 2330 133c 0C0002AE 		sw	$2,12($16)
 2331 1340 33000010 		b	$L106
 2332 1344 00000000 		nop
 2333              	
 2334              	$L107:
 291:bgtree/bgCore.c ****   } if (row.index < NodeLen(row.node) - 1) {
 2335              		.loc 1 292 0
 2336 1348 4000C28F 		lw	$2,64($fp)
 2337 134c 00000000 		nop
 2338 1350 21884000 		move	$17,$2
 2339 1354 3C00C28F 		lw	$2,60($fp)
 2340 1358 00000000 		nop
 2341 135c 21204000 		move	$4,$2
 2342              		.option	pic0
 2343 1360 0000000C 		jal	NodeLen
 2344 1364 00000000 		nop
 2345              	
 2346              		.option	pic2
 2347 1368 FFFF4224 		addiu	$2,$2,-1
 2348 136c 2B102202 		sltu	$2,$17,$2
 2349 1370 0F004010 		beq	$2,$0,$L109
 2350 1374 00000000 		nop
 2351              	
 292:bgtree/bgCore.c ****     row.index += 1;
 2352              		.loc 1 293 0
 2353 1378 4000C28F 		lw	$2,64($fp)
 2354 137c 00000000 		nop
 2355 1380 01004224 		addiu	$2,$2,1
 2356 1384 4000C2AF 		sw	$2,64($fp)
 293:bgtree/bgCore.c ****     return row;
 2357              		.loc 1 294 0
 2358 1388 3400C58F 		lw	$5,52($fp)
 2359 138c 3800C48F 		lw	$4,56($fp)
 2360 1390 3C00C38F 		lw	$3,60($fp)
 2361 1394 4000C28F 		lw	$2,64($fp)
 2362 1398 000005AE 		sw	$5,0($16)
 2363 139c 040004AE 		sw	$4,4($16)
 2364 13a0 080003AE 		sw	$3,8($16)
 2365 13a4 0C0002AE 		sw	$2,12($16)
 2366 13a8 19000010 		b	$L106
 2367 13ac 00000000 		nop
 2368              	
 2369              	$L109:
 294:bgtree/bgCore.c ****   }
 295:bgtree/bgCore.c ****   BAT nextLeaf = NodeNextLeaf(NodeParent(row.node), row.node);
 2370              		.loc 1 296 0
 2371 13b0 3C00C28F 		lw	$2,60($fp)
 2372 13b4 00000000 		nop
 2373 13b8 21204000 		move	$4,$2
 2374              		.option	pic0
 2375 13bc 0000000C 		jal	NodeParent
 2376 13c0 00000000 		nop
 2377              	
 2378              		.option	pic2
 2379 13c4 21184000 		move	$3,$2
 2380 13c8 3C00C28F 		lw	$2,60($fp)
 2381 13cc 21206000 		move	$4,$3
 2382 13d0 21284000 		move	$5,$2
 2383              		.option	pic0
 2384 13d4 0000000C 		jal	NodeNextLeaf
 2385 13d8 00000000 		nop
 2386              	
 2387              		.option	pic2
 2388 13dc 1800C2AF 		sw	$2,24($fp)
 296:bgtree/bgCore.c ****   row.node = nextLeaf;
 2389              		.loc 1 297 0
 2390 13e0 1800C28F 		lw	$2,24($fp)
 2391 13e4 00000000 		nop
 2392 13e8 3C00C2AF 		sw	$2,60($fp)
 297:bgtree/bgCore.c ****   row.index = 0;
 2393              		.loc 1 298 0
 2394 13ec 4000C0AF 		sw	$0,64($fp)
 298:bgtree/bgCore.c ****   return row;
 2395              		.loc 1 299 0
 2396 13f0 3400C58F 		lw	$5,52($fp)
 2397 13f4 3800C48F 		lw	$4,56($fp)
 2398 13f8 3C00C38F 		lw	$3,60($fp)
 2399 13fc 4000C28F 		lw	$2,64($fp)
 2400 1400 000005AE 		sw	$5,0($16)
 2401 1404 040004AE 		sw	$4,4($16)
 2402 1408 080003AE 		sw	$3,8($16)
 2403 140c 0C0002AE 		sw	$2,12($16)
 2404              	$L106:
 299:bgtree/bgCore.c **** }
 2405              		.loc 1 300 0
 2406 1410 21100002 		move	$2,$16
 2407 1414 21E8C003 		move	$sp,$fp
 2408 1418 2C00BF8F 		lw	$31,44($sp)
 2409 141c 2800BE8F 		lw	$fp,40($sp)
 2410 1420 2400B18F 		lw	$17,36($sp)
 2411 1424 2000B08F 		lw	$16,32($sp)
 2412 1428 3000BD27 		addiu	$sp,$sp,48
 2413 142c 0800E003 		j	$31
 2414 1430 00000000 		nop
 2415              	
 2416              		.set	macro
 2417              		.set	reorder
 2418              		.end	RowPtrNext
 2419              	$LFE24:
 2421              		.align	2
 2422              		.globl	NodeFindFirstChild
 2423              	$LFB25 = .
 300:bgtree/bgCore.c **** 
 301:bgtree/bgCore.c **** /** Finds the left-most leaf child node (assumes that there IS one) **/
 302:bgtree/bgCore.c **** BAT NodeFindFirstChild(BAT node) {
 2424              		.loc 1 303 0
 2425              		.set	nomips16
 2426              		.ent	NodeFindFirstChild
 2428              	NodeFindFirstChild:
 2429              		.frame	$fp,32,$31		# vars= 0, regs= 2/0, args= 16, gp= 8
 2430              		.mask	0xc0000000,-4
 2431              		.fmask	0x00000000,0
 2432              		.set	noreorder
 2433              		.set	nomacro
 2434              		
 2435 1434 E0FFBD27 		addiu	$sp,$sp,-32
 2436              	$LCFI99:
 2437 1438 1C00BFAF 		sw	$31,28($sp)
 2438              	$LCFI100:
 2439 143c 1800BEAF 		sw	$fp,24($sp)
 2440              	$LCFI101:
 2441 1440 21F0A003 		move	$fp,$sp
 2442              	$LCFI102:
 2443 1444 2000C4AF 		sw	$4,32($fp)
 303:bgtree/bgCore.c ****   if (node == BAInvalid)
 2444              		.loc 1 304 0
 2445 1448 2000C38F 		lw	$3,32($fp)
 2446 144c FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2447 1450 04006214 		bne	$3,$2,$L112
 2448 1454 00000000 		nop
 2449              	
 304:bgtree/bgCore.c ****     return BAInvalid;
 2450              		.loc 1 305 0
 2451 1458 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2452 145c 10000010 		b	$L113
 2453 1460 00000000 		nop
 2454              	
 2455              	$L112:
 305:bgtree/bgCore.c ****   if (NodeDepth(node) == 0)
 2456              		.loc 1 306 0
 2457 1464 2000C48F 		lw	$4,32($fp)
 2458              		.option	pic0
 2459 1468 0000000C 		jal	NodeDepth
 2460 146c 00000000 		nop
 2461              	
 2462              		.option	pic2
 2463 1470 04004014 		bne	$2,$0,$L114
 2464 1474 00000000 		nop
 2465              	
 306:bgtree/bgCore.c ****     return node;
 2466              		.loc 1 307 0
 2467 1478 2000C28F 		lw	$2,32($fp)
 2468 147c 08000010 		b	$L113
 2469 1480 00000000 		nop
 2470              	
 2471              	$L114:
 307:bgtree/bgCore.c ****   return NodeFindFirstChild(NodeItemLoad(node, 0));
 2472              		.loc 1 308 0
 2473 1484 2000C48F 		lw	$4,32($fp)
 2474 1488 21280000 		move	$5,$0
 2475              		.option	pic0
 2476 148c 0000000C 		jal	NodeItemLoad
 2477 1490 00000000 		nop
 2478              	
 2479              		.option	pic2
 2480 1494 21204000 		move	$4,$2
 2481              		.option	pic0
 2482 1498 0000000C 		jal	NodeFindFirstChild
 2483 149c 00000000 		nop
 2484              	
 2485              		.option	pic2
 2486              	$L113:
 308:bgtree/bgCore.c **** }
 2487              		.loc 1 309 0
 2488 14a0 21E8C003 		move	$sp,$fp
 2489 14a4 1C00BF8F 		lw	$31,28($sp)
 2490 14a8 1800BE8F 		lw	$fp,24($sp)
 2491 14ac 2000BD27 		addiu	$sp,$sp,32
 2492 14b0 0800E003 		j	$31
 2493 14b4 00000000 		nop
 2494              	
 2495              		.set	macro
 2496              		.set	reorder
 2497              		.end	NodeFindFirstChild
 2498              	$LFE25:
 2500              		.rdata
 2501 0057 00       		.align	2
 2504              	__PRETTY_FUNCTION__.2718:
 2505 0058 4E6F6465 		.ascii	"NodeNextLeaf\000"
 2505      4E657874 
 2505      4C656166 
 2505      00
 2506 0065 000000   		.align	2
 2509              	__PRETTY_FUNCTION__.2702:
 2510 0068 43616C63 		.ascii	"CalcMinimumDepth\000"
 2510      4D696E69 
 2510      6D756D44 
 2510      65707468 
 2510      00
 3148              	$Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bgtree/bgCore.c
                            *COM*:0000000000000004 bgUserData
     /tmp/ccFhf6UH.s:23     .text:0000000000000000 SetUserData
     /tmp/ccFhf6UH.s:63     .text:000000000000003c GetUserData
     /tmp/ccFhf6UH.s:101    .text:0000000000000070 FindIndexOfChild
     /tmp/ccFhf6UH.s:1090   .text:00000000000008ac NodeLoad
     /tmp/ccFhf6UH.s:194    .text:0000000000000134 FindInternalNode
     /tmp/ccFhf6UH.s:403    .text:0000000000000364 FindInternal
     /tmp/ccFhf6UH.s:475    .text:00000000000003f4 NodeInit
     /tmp/ccFhf6UH.s:572    .text:00000000000004d4 GetLastNodeOfDepth
     /tmp/ccFhf6UH.s:759    .text:0000000000000678 NodeSummaryLoad
     /tmp/ccFhf6UH.s:655    .text:0000000000000570 NodeSummaryCreate
     /tmp/ccFhf6UH.s:838    .text:0000000000000714 NodeItemLoad
     /tmp/ccFhf6UH.s:892    .text:0000000000000774 NodeKeyLoad
     /tmp/ccFhf6UH.s:946    .text:00000000000007d4 NodeParent
     /tmp/ccFhf6UH.s:993    .text:0000000000000818 NodeLen
     /tmp/ccFhf6UH.s:1040   .text:000000000000085c NodeDepth
     /tmp/ccFhf6UH.s:1144   .text:0000000000000918 NodeSave
     /tmp/ccFhf6UH.s:1198   .text:0000000000000984 GetLastNonFullDescendant
     /tmp/ccFhf6UH.s:1298   .text:0000000000000a48 CreateDescendingNodes
     /tmp/ccFhf6UH.s:1465   .text:0000000000000bc0 AppendNewLeafNode
     /tmp/ccFhf6UH.s:1654   .text:0000000000000d64 NodeVisitDFS
     /tmp/ccFhf6UH.s:1811   .text:0000000000000ea8 CalcTreeSize2
     /tmp/ccFhf6UH.s:1929   .text:0000000000000fb8 CalcMinimumDepth
     /tmp/ccFhf6UH.s:2509   .rodata:0000000000000068 __PRETTY_FUNCTION__.2702
     /tmp/ccFhf6UH.s:2055   .text:00000000000010d4 NodeNextLeaf
     /tmp/ccFhf6UH.s:2504   .rodata:0000000000000058 __PRETTY_FUNCTION__.2718
     /tmp/ccFhf6UH.s:2238   .text:000000000000127c RowPtrInit
     /tmp/ccFhf6UH.s:2293   .text:00000000000012e8 RowPtrNext
     /tmp/ccFhf6UH.s:2428   .text:0000000000001434 NodeFindFirstChild

UNDEFINED SYMBOLS
__gnu_local_gp
LoadBlock
SaveBlock
AllocBlock
printf
__assert_fail
