   1              		.section .mdebug.abi32
   2              		.previous
   3              		.gnu_attribute 4, 3
   4              		.abicalls
  12              	$Ltext0:
  13              		.align	2
  14              	$LFB0 = .
  15              		.file 1 "bgtree/bgApi.h"
   0:bgtree/bgApi.h **** #ifndef BGAPI_H
   1:bgtree/bgApi.h **** #define BGAPI_H 1
   2:bgtree/bgApi.h **** 
   3:bgtree/bgApi.h **** #include "bgCore.h"
   4:bgtree/bgApi.h **** 
   5:bgtree/bgApi.h **** typedef struct Cursor_ {
   6:bgtree/bgApi.h ****   BAT (*nextFunc)(struct Cursor_ *);
   7:bgtree/bgApi.h ****   union {
   8:bgtree/bgApi.h ****     struct {
   9:bgtree/bgApi.h ****       RowPtr row;
  10:bgtree/bgApi.h ****       KeyT key;
  11:bgtree/bgApi.h ****     } keyInfo;
  12:bgtree/bgApi.h ****     struct {
  13:bgtree/bgApi.h ****       struct Cursor_ *a;
  14:bgtree/bgApi.h ****       struct Cursor_ *b;
  15:bgtree/bgApi.h ****       BAT aLastValue, bLastValue;
  16:bgtree/bgApi.h ****     } binaryInfo;
  17:bgtree/bgApi.h ****     struct {
  18:bgtree/bgApi.h ****       struct Cursor_ *a;
  19:bgtree/bgApi.h ****       BAT lastValue;
  20:bgtree/bgApi.h ****     } uniqueInfo;
  21:bgtree/bgApi.h ****   } u;
  22:bgtree/bgApi.h **** } Cursor;
  23:bgtree/bgApi.h **** 
  24:bgtree/bgApi.h **** /** Allocate and initialize a new BgTree capable of holding
  25:bgtree/bgApi.h ****  * the specified number of items **/
  26:bgtree/bgApi.h **** BgTree TreeCreate(int numItems, void *userData);
  27:bgtree/bgApi.h **** 
  28:bgtree/bgApi.h **** void TreeInit(BgTree *t, void *userData);
  29:bgtree/bgApi.h **** 
  30:bgtree/bgApi.h **** /** Append a key/value pair to the tree **/
  31:bgtree/bgApi.h **** void TreeAppend(BgTree tree,  KeyT key, BAT value);
  32:bgtree/bgApi.h **** 
  33:bgtree/bgApi.h **** /** Calculate the size in bytes of storage space required to
  34:bgtree/bgApi.h ****  * hold a tree containing the specified number of items.  Use
  35:bgtree/bgApi.h ****  * this for pre-allocation of space if required **/
  36:bgtree/bgApi.h **** int CalcTreeSize(int numItems);
  37:bgtree/bgApi.h **** 
  38:bgtree/bgApi.h **** /** Returns a Cursor to all items in table with key **/
  39:bgtree/bgApi.h **** Cursor SelectKey(BgTree table, KeyT key);
  40:bgtree/bgApi.h **** 
  41:bgtree/bgApi.h **** /** Returns a Cursor to all items in table **/
  42:bgtree/bgApi.h **** Cursor SelectAll(BgTree table);
  43:bgtree/bgApi.h **** 
  44:bgtree/bgApi.h **** /** Returns a Cursor to item which matches with key, and all
  45:bgtree/bgApi.h ****  * items following with consecutive keys **/
  46:bgtree/bgApi.h **** Cursor SelectConsecutiveKeys(BgTree table, KeyT key);
  47:bgtree/bgApi.h **** 
  48:bgtree/bgApi.h **** /** Creates a new Cursor which iterates over all items in
  49:bgtree/bgApi.h ****  * either Cursor a or b.  Note: This does not preserve order. **/
  50:bgtree/bgApi.h **** Cursor Union(Cursor *a, Cursor *b);
  51:bgtree/bgApi.h **** /** Creates a new Cursor which iterates over all items which are BOTH in a and b. **/
  52:bgtree/bgApi.h **** Cursor Intersection(Cursor *a, Cursor *b);
  53:bgtree/bgApi.h **** /** TODO: Not Implemented **/
  54:bgtree/bgApi.h **** Cursor Unique(Cursor *a);
  55:bgtree/bgApi.h **** 
  56:bgtree/bgApi.h **** /** Get the current value from cursor and advance **/
  57:bgtree/bgApi.h **** BAT CursorNext(Cursor *c);
  58:bgtree/bgApi.h **** 
  59:bgtree/bgApi.h **** /** Duplicate a cursor.  Will call CursorDestroy(dest) first. **/
  60:bgtree/bgApi.h **** void CursorDup(Cursor *dest, Cursor *src);
  61:bgtree/bgApi.h **** 
  62:bgtree/bgApi.h **** /** Peek at the cursor's next value without incrementing the cursor.  Uses CursorDup() to make a co
  63:bgtree/bgApi.h **** BAT CursorPeek(Cursor *c);
  64:bgtree/bgApi.h **** 
  65:bgtree/bgApi.h **** 
  66:bgtree/bgApi.h **** /** Returns true if cursor is invalid **/ 
  67:bgtree/bgApi.h **** static inline int CursorIsInvalid(Cursor *c) {
  16              		.loc 1 68 0
  17              		.set	nomips16
  18              		.ent	CursorIsInvalid
  20              	CursorIsInvalid:
  21              		.frame	$fp,8,$31		# vars= 0, regs= 1/0, args= 0, gp= 0
  22              		.mask	0x40000000,-4
  23              		.fmask	0x00000000,0
  24              		.set	noreorder
  25              		.set	nomacro
  26              		
  27 0000 F8FFBD27 		addiu	$sp,$sp,-8
  28              	$LCFI0:
  29 0004 0400BEAF 		sw	$fp,4($sp)
  30              	$LCFI1:
  31 0008 21F0A003 		move	$fp,$sp
  32              	$LCFI2:
  33 000c 0800C4AF 		sw	$4,8($fp)
  68:bgtree/bgApi.h ****   return !c->nextFunc;
  34              		.loc 1 69 0
  35 0010 0800C28F 		lw	$2,8($fp)
  36 0014 00000000 		nop
  37 0018 0000428C 		lw	$2,0($2)
  38 001c 00000000 		nop
  39 0020 0100422C 		sltu	$2,$2,1
  69:bgtree/bgApi.h **** }
  40              		.loc 1 70 0
  41 0024 21E8C003 		move	$sp,$fp
  42 0028 0400BE8F 		lw	$fp,4($sp)
  43 002c 0800BD27 		addiu	$sp,$sp,8
  44 0030 0800E003 		j	$31
  45 0034 00000000 		nop
  46              	
  47              		.set	macro
  48              		.set	reorder
  49              		.end	CursorIsInvalid
  50              	$LFE0:
  52              		.align	2
  53              	$LFB1 = .
  70:bgtree/bgApi.h **** 
  71:bgtree/bgApi.h **** /** Returns an invalid cursor **/
  72:bgtree/bgApi.h **** static inline Cursor CursorCreateInvalid() {
  54              		.loc 1 73 0
  55              		.set	nomips16
  56              		.ent	CursorCreateInvalid
  58              	CursorCreateInvalid:
  59              		.frame	$fp,40,$31		# vars= 24, regs= 1/0, args= 0, gp= 8
  60              		.mask	0x40000000,-4
  61              		.fmask	0x00000000,0
  62              		.set	noreorder
  63              		.set	nomacro
  64              		
  65 0038 D8FFBD27 		addiu	$sp,$sp,-40
  66              	$LCFI3:
  67 003c 2400BEAF 		sw	$fp,36($sp)
  68              	$LCFI4:
  69 0040 21F0A003 		move	$fp,$sp
  70              	$LCFI5:
  71 0044 21108000 		move	$2,$4
  73:bgtree/bgApi.h ****   Cursor c;
  74:bgtree/bgApi.h ****   c.nextFunc = 0x0;
  72              		.loc 1 75 0
  73 0048 0800C0AF 		sw	$0,8($fp)
  75:bgtree/bgApi.h ****   return c;
  74              		.loc 1 76 0
  75 004c 0800C88F 		lw	$8,8($fp)
  76 0050 0C00C78F 		lw	$7,12($fp)
  77 0054 1000C68F 		lw	$6,16($fp)
  78 0058 1400C58F 		lw	$5,20($fp)
  79 005c 1800C48F 		lw	$4,24($fp)
  80 0060 1C00C38F 		lw	$3,28($fp)
  81 0064 000048AC 		sw	$8,0($2)
  82 0068 040047AC 		sw	$7,4($2)
  83 006c 080046AC 		sw	$6,8($2)
  84 0070 0C0045AC 		sw	$5,12($2)
  85 0074 100044AC 		sw	$4,16($2)
  86 0078 140043AC 		sw	$3,20($2)
  76:bgtree/bgApi.h **** }
  87              		.loc 1 77 0
  88 007c 21E8C003 		move	$sp,$fp
  89 0080 2400BE8F 		lw	$fp,36($sp)
  90 0084 2800BD27 		addiu	$sp,$sp,40
  91 0088 0800E003 		j	$31
  92 008c 00000000 		nop
  93              	
  94              		.set	macro
  95              		.set	reorder
  96              		.end	CursorCreateInvalid
  97              	$LFE1:
  99              		.align	2
 100              		.globl	CursorKeyNext
 101              	$LFB2 = .
 102              		.file 2 "bgtree/bgApi.c"
   0:bgtree/bgApi.c **** #include "bgApi.h"
   1:bgtree/bgApi.c **** #include <assert.h>
   2:bgtree/bgApi.c **** #include <stdlib.h>
   3:bgtree/bgApi.c **** 
   4:bgtree/bgApi.c **** BAT CursorKeyNext(Cursor *c) {
 103              		.loc 2 5 0
 104              		.set	nomips16
 105              		.ent	CursorKeyNext
 107              	CursorKeyNext:
 108              		.frame	$fp,72,$31		# vars= 24, regs= 3/0, args= 24, gp= 8
 109              		.mask	0xc0010000,-4
 110              		.fmask	0x00000000,0
 111              		.set	noreorder
 112              		.set	nomacro
 113              		
 114 0090 B8FFBD27 		addiu	$sp,$sp,-72
 115              	$LCFI6:
 116 0094 4400BFAF 		sw	$31,68($sp)
 117              	$LCFI7:
 118 0098 4000BEAF 		sw	$fp,64($sp)
 119              	$LCFI8:
 120 009c 3C00B0AF 		sw	$16,60($sp)
 121              	$LCFI9:
 122 00a0 21F0A003 		move	$fp,$sp
 123              	$LCFI10:
 124 00a4 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 125 00a8 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 126 00ac 1800BCAF 		.cprestore	24
 127 00b0 4800C4AF 		sw	$4,72($fp)
   5:bgtree/bgApi.c ****   if (c->u.keyInfo.row.node == BAInvalid)
 128              		.loc 2 6 0
 129 00b4 4800C28F 		lw	$2,72($fp)
 130 00b8 00000000 		nop
 131 00bc 0C00438C 		lw	$3,12($2)
 132 00c0 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 133 00c4 04006214 		bne	$3,$2,$L6
 134 00c8 00000000 		nop
 135              	
   6:bgtree/bgApi.c ****     return BAInvalid;
 136              		.loc 2 7 0
 137 00cc FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 138 00d0 5B000010 		b	$L7
 139 00d4 00000000 		nop
 140              	
 141              	$L6:
   7:bgtree/bgApi.c ****   SetUserData(c->u.keyInfo.row.tree.userData);
 142              		.loc 2 8 0
 143 00d8 4800C28F 		lw	$2,72($fp)
 144 00dc 00000000 		nop
 145 00e0 0800428C 		lw	$2,8($2)
 146 00e4 00000000 		nop
 147 00e8 21204000 		move	$4,$2
 148 00ec 0000828F 		lw	$2,%call16(SetUserData)($28)
 149 00f0 00000000 		nop
 150 00f4 21C84000 		move	$25,$2
 151 00f8 09F82003 		jalr	$25
 152 00fc 00000000 		nop
 153              	
 154 0100 1800DC8F 		lw	$28,24($fp)
   8:bgtree/bgApi.c ****   // key == BAInvalid indicates a SelectAll()
   9:bgtree/bgApi.c ****   if (c->u.keyInfo.key != BAInvalid) { 
 155              		.loc 2 10 0
 156 0104 4800C28F 		lw	$2,72($fp)
 157 0108 00000000 		nop
 158 010c 1400438C 		lw	$3,20($2)
 159 0110 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 160 0114 1A006210 		beq	$3,$2,$L8
 161 0118 00000000 		nop
 162              	
 163              	$LBB2 = .
  10:bgtree/bgApi.c ****     BAT key = NodeKeyLoad(c->u.keyInfo.row.node, c->u.keyInfo.row.index);
 164              		.loc 2 11 0
 165 011c 4800C28F 		lw	$2,72($fp)
 166 0120 00000000 		nop
 167 0124 0C00438C 		lw	$3,12($2)
 168 0128 4800C28F 		lw	$2,72($fp)
 169 012c 00000000 		nop
 170 0130 1000428C 		lw	$2,16($2)
 171 0134 21206000 		move	$4,$3
 172 0138 21284000 		move	$5,$2
 173 013c 0000828F 		lw	$2,%call16(NodeKeyLoad)($28)
 174 0140 00000000 		nop
 175 0144 21C84000 		move	$25,$2
 176 0148 09F82003 		jalr	$25
 177 014c 00000000 		nop
 178              	
 179 0150 1800DC8F 		lw	$28,24($fp)
 180 0154 2000C2AF 		sw	$2,32($fp)
  11:bgtree/bgApi.c ****     if (key != c->u.keyInfo.key)
 181              		.loc 2 12 0
 182 0158 4800C28F 		lw	$2,72($fp)
 183 015c 00000000 		nop
 184 0160 1400438C 		lw	$3,20($2)
 185 0164 2000C28F 		lw	$2,32($fp)
 186 0168 00000000 		nop
 187 016c 04006210 		beq	$3,$2,$L8
 188 0170 00000000 		nop
 189              	
  12:bgtree/bgApi.c ****       return BAInvalid;
 190              		.loc 2 13 0
 191 0174 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 192 0178 31000010 		b	$L7
 193 017c 00000000 		nop
 194              	
 195              	$L8:
 196              	$LBE2 = .
  13:bgtree/bgApi.c ****   }
  14:bgtree/bgApi.c ****   BAT value = NodeItemLoad(c->u.keyInfo.row.node, c->u.keyInfo.row.index);
 197              		.loc 2 15 0
 198 0180 4800C28F 		lw	$2,72($fp)
 199 0184 00000000 		nop
 200 0188 0C00438C 		lw	$3,12($2)
 201 018c 4800C28F 		lw	$2,72($fp)
 202 0190 00000000 		nop
 203 0194 1000428C 		lw	$2,16($2)
 204 0198 21206000 		move	$4,$3
 205 019c 21284000 		move	$5,$2
 206 01a0 0000828F 		lw	$2,%call16(NodeItemLoad)($28)
 207 01a4 00000000 		nop
 208 01a8 21C84000 		move	$25,$2
 209 01ac 09F82003 		jalr	$25
 210 01b0 00000000 		nop
 211              	
 212 01b4 1800DC8F 		lw	$28,24($fp)
 213 01b8 2400C2AF 		sw	$2,36($fp)
  15:bgtree/bgApi.c ****   c->u.keyInfo.row = RowPtrNext(c->u.keyInfo.row);
 214              		.loc 2 16 0
 215 01bc 4800D08F 		lw	$16,72($fp)
 216 01c0 2800C327 		addiu	$3,$fp,40
 217 01c4 4800C28F 		lw	$2,72($fp)
 218 01c8 00000000 		nop
 219 01cc 1000448C 		lw	$4,16($2)
 220 01d0 00000000 		nop
 221 01d4 1000A4AF 		sw	$4,16($sp)
 222 01d8 0400458C 		lw	$5,4($2)
 223 01dc 0800468C 		lw	$6,8($2)
 224 01e0 0C00478C 		lw	$7,12($2)
 225 01e4 21206000 		move	$4,$3
 226 01e8 0000828F 		lw	$2,%call16(RowPtrNext)($28)
 227 01ec 00000000 		nop
 228 01f0 21C84000 		move	$25,$2
 229 01f4 09F82003 		jalr	$25
 230 01f8 00000000 		nop
 231              	
 232 01fc 1800DC8F 		lw	$28,24($fp)
 233 0200 2800C58F 		lw	$5,40($fp)
 234 0204 2C00C48F 		lw	$4,44($fp)
 235 0208 3000C38F 		lw	$3,48($fp)
 236 020c 3400C28F 		lw	$2,52($fp)
 237 0210 040005AE 		sw	$5,4($16)
 238 0214 080004AE 		sw	$4,8($16)
 239 0218 0C0003AE 		sw	$3,12($16)
 240 021c 100002AE 		sw	$2,16($16)
  16:bgtree/bgApi.c ****   SetUserData(0x0); // catch errors quicker
 241              		.loc 2 17 0
 242 0220 21200000 		move	$4,$0
 243 0224 0000828F 		lw	$2,%call16(SetUserData)($28)
 244 0228 00000000 		nop
 245 022c 21C84000 		move	$25,$2
 246 0230 09F82003 		jalr	$25
 247 0234 00000000 		nop
 248              	
 249 0238 1800DC8F 		lw	$28,24($fp)
  17:bgtree/bgApi.c ****   return value;
 250              		.loc 2 18 0
 251 023c 2400C28F 		lw	$2,36($fp)
 252              	$L7:
  18:bgtree/bgApi.c **** }
 253              		.loc 2 19 0
 254 0240 21E8C003 		move	$sp,$fp
 255 0244 4400BF8F 		lw	$31,68($sp)
 256 0248 4000BE8F 		lw	$fp,64($sp)
 257 024c 3C00B08F 		lw	$16,60($sp)
 258 0250 4800BD27 		addiu	$sp,$sp,72
 259 0254 0800E003 		j	$31
 260 0258 00000000 		nop
 261              	
 262              		.set	macro
 263              		.set	reorder
 264              		.end	CursorKeyNext
 265              	$LFE2:
 267              		.align	2
 268              		.globl	CursorConsecutiveKeysNext
 269              	$LFB3 = .
  19:bgtree/bgApi.c **** 
  20:bgtree/bgApi.c **** BAT CursorConsecutiveKeysNext(Cursor *c) {
 270              		.loc 2 21 0
 271              		.set	nomips16
 272              		.ent	CursorConsecutiveKeysNext
 274              	CursorConsecutiveKeysNext:
 275              		.frame	$fp,72,$31		# vars= 24, regs= 3/0, args= 24, gp= 8
 276              		.mask	0xc0010000,-4
 277              		.fmask	0x00000000,0
 278              		.set	noreorder
 279              		.set	nomacro
 280              		
 281 025c B8FFBD27 		addiu	$sp,$sp,-72
 282              	$LCFI11:
 283 0260 4400BFAF 		sw	$31,68($sp)
 284              	$LCFI12:
 285 0264 4000BEAF 		sw	$fp,64($sp)
 286              	$LCFI13:
 287 0268 3C00B0AF 		sw	$16,60($sp)
 288              	$LCFI14:
 289 026c 21F0A003 		move	$fp,$sp
 290              	$LCFI15:
 291 0270 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 292 0274 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 293 0278 1800BCAF 		.cprestore	24
 294 027c 4800C4AF 		sw	$4,72($fp)
  21:bgtree/bgApi.c ****   if (c->u.keyInfo.row.node == BAInvalid)
 295              		.loc 2 22 0
 296 0280 4800C28F 		lw	$2,72($fp)
 297 0284 00000000 		nop
 298 0288 0C00438C 		lw	$3,12($2)
 299 028c FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 300 0290 04006214 		bne	$3,$2,$L11
 301 0294 00000000 		nop
 302              	
  22:bgtree/bgApi.c ****     return BAInvalid;
 303              		.loc 2 23 0
 304 0298 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 305 029c 68000010 		b	$L12
 306 02a0 00000000 		nop
 307              	
 308              	$L11:
  23:bgtree/bgApi.c ****   SetUserData(c->u.keyInfo.row.tree.userData);
 309              		.loc 2 24 0
 310 02a4 4800C28F 		lw	$2,72($fp)
 311 02a8 00000000 		nop
 312 02ac 0800428C 		lw	$2,8($2)
 313 02b0 00000000 		nop
 314 02b4 21204000 		move	$4,$2
 315 02b8 0000828F 		lw	$2,%call16(SetUserData)($28)
 316 02bc 00000000 		nop
 317 02c0 21C84000 		move	$25,$2
 318 02c4 09F82003 		jalr	$25
 319 02c8 00000000 		nop
 320              	
 321 02cc 1800DC8F 		lw	$28,24($fp)
  24:bgtree/bgApi.c ****   // key == BAInvalid indicates a SelectAll()
  25:bgtree/bgApi.c ****   if (c->u.keyInfo.key != BAInvalid) { 
 322              		.loc 2 26 0
 323 02d0 4800C28F 		lw	$2,72($fp)
 324 02d4 00000000 		nop
 325 02d8 1400438C 		lw	$3,20($2)
 326 02dc FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 327 02e0 27006210 		beq	$3,$2,$L13
 328 02e4 00000000 		nop
 329              	
 330              	$LBB3 = .
  26:bgtree/bgApi.c ****     BAT key = NodeKeyLoad(c->u.keyInfo.row.node, c->u.keyInfo.row.index);
 331              		.loc 2 27 0
 332 02e8 4800C28F 		lw	$2,72($fp)
 333 02ec 00000000 		nop
 334 02f0 0C00438C 		lw	$3,12($2)
 335 02f4 4800C28F 		lw	$2,72($fp)
 336 02f8 00000000 		nop
 337 02fc 1000428C 		lw	$2,16($2)
 338 0300 21206000 		move	$4,$3
 339 0304 21284000 		move	$5,$2
 340 0308 0000828F 		lw	$2,%call16(NodeKeyLoad)($28)
 341 030c 00000000 		nop
 342 0310 21C84000 		move	$25,$2
 343 0314 09F82003 		jalr	$25
 344 0318 00000000 		nop
 345              	
 346 031c 1800DC8F 		lw	$28,24($fp)
 347 0320 2000C2AF 		sw	$2,32($fp)
  27:bgtree/bgApi.c ****     if ((key != c->u.keyInfo.key) && (key != c->u.keyInfo.key + 1))
 348              		.loc 2 28 0
 349 0324 4800C28F 		lw	$2,72($fp)
 350 0328 00000000 		nop
 351 032c 1400438C 		lw	$3,20($2)
 352 0330 2000C28F 		lw	$2,32($fp)
 353 0334 00000000 		nop
 354 0338 0D006210 		beq	$3,$2,$L14
 355 033c 00000000 		nop
 356              	
 357 0340 4800C28F 		lw	$2,72($fp)
 358 0344 00000000 		nop
 359 0348 1400428C 		lw	$2,20($2)
 360 034c 00000000 		nop
 361 0350 01004324 		addiu	$3,$2,1
 362 0354 2000C28F 		lw	$2,32($fp)
 363 0358 00000000 		nop
 364 035c 04006210 		beq	$3,$2,$L14
 365 0360 00000000 		nop
 366              	
  28:bgtree/bgApi.c ****       return BAInvalid;
 367              		.loc 2 29 0
 368 0364 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 369 0368 35000010 		b	$L12
 370 036c 00000000 		nop
 371              	
 372              	$L14:
  29:bgtree/bgApi.c ****     c->u.keyInfo.key = key;
 373              		.loc 2 30 0
 374 0370 4800C28F 		lw	$2,72($fp)
 375 0374 2000C38F 		lw	$3,32($fp)
 376 0378 00000000 		nop
 377 037c 140043AC 		sw	$3,20($2)
 378              	$L13:
 379              	$LBE3 = .
  30:bgtree/bgApi.c ****   }
  31:bgtree/bgApi.c ****   BAT value = NodeItemLoad(c->u.keyInfo.row.node, c->u.keyInfo.row.index);
 380              		.loc 2 32 0
 381 0380 4800C28F 		lw	$2,72($fp)
 382 0384 00000000 		nop
 383 0388 0C00438C 		lw	$3,12($2)
 384 038c 4800C28F 		lw	$2,72($fp)
 385 0390 00000000 		nop
 386 0394 1000428C 		lw	$2,16($2)
 387 0398 21206000 		move	$4,$3
 388 039c 21284000 		move	$5,$2
 389 03a0 0000828F 		lw	$2,%call16(NodeItemLoad)($28)
 390 03a4 00000000 		nop
 391 03a8 21C84000 		move	$25,$2
 392 03ac 09F82003 		jalr	$25
 393 03b0 00000000 		nop
 394              	
 395 03b4 1800DC8F 		lw	$28,24($fp)
 396 03b8 2400C2AF 		sw	$2,36($fp)
  32:bgtree/bgApi.c ****   c->u.keyInfo.row = RowPtrNext(c->u.keyInfo.row);
 397              		.loc 2 33 0
 398 03bc 4800D08F 		lw	$16,72($fp)
 399 03c0 2800C327 		addiu	$3,$fp,40
 400 03c4 4800C28F 		lw	$2,72($fp)
 401 03c8 00000000 		nop
 402 03cc 1000448C 		lw	$4,16($2)
 403 03d0 00000000 		nop
 404 03d4 1000A4AF 		sw	$4,16($sp)
 405 03d8 0400458C 		lw	$5,4($2)
 406 03dc 0800468C 		lw	$6,8($2)
 407 03e0 0C00478C 		lw	$7,12($2)
 408 03e4 21206000 		move	$4,$3
 409 03e8 0000828F 		lw	$2,%call16(RowPtrNext)($28)
 410 03ec 00000000 		nop
 411 03f0 21C84000 		move	$25,$2
 412 03f4 09F82003 		jalr	$25
 413 03f8 00000000 		nop
 414              	
 415 03fc 1800DC8F 		lw	$28,24($fp)
 416 0400 2800C58F 		lw	$5,40($fp)
 417 0404 2C00C48F 		lw	$4,44($fp)
 418 0408 3000C38F 		lw	$3,48($fp)
 419 040c 3400C28F 		lw	$2,52($fp)
 420 0410 040005AE 		sw	$5,4($16)
 421 0414 080004AE 		sw	$4,8($16)
 422 0418 0C0003AE 		sw	$3,12($16)
 423 041c 100002AE 		sw	$2,16($16)
  33:bgtree/bgApi.c ****   SetUserData(0x0); // catch errors quicker
 424              		.loc 2 34 0
 425 0420 21200000 		move	$4,$0
 426 0424 0000828F 		lw	$2,%call16(SetUserData)($28)
 427 0428 00000000 		nop
 428 042c 21C84000 		move	$25,$2
 429 0430 09F82003 		jalr	$25
 430 0434 00000000 		nop
 431              	
 432 0438 1800DC8F 		lw	$28,24($fp)
  34:bgtree/bgApi.c ****   return value;
 433              		.loc 2 35 0
 434 043c 2400C28F 		lw	$2,36($fp)
 435              	$L12:
  35:bgtree/bgApi.c **** }
 436              		.loc 2 36 0
 437 0440 21E8C003 		move	$sp,$fp
 438 0444 4400BF8F 		lw	$31,68($sp)
 439 0448 4000BE8F 		lw	$fp,64($sp)
 440 044c 3C00B08F 		lw	$16,60($sp)
 441 0450 4800BD27 		addiu	$sp,$sp,72
 442 0454 0800E003 		j	$31
 443 0458 00000000 		nop
 444              	
 445              		.set	macro
 446              		.set	reorder
 447              		.end	CursorConsecutiveKeysNext
 448              	$LFE3:
 450              		.align	2
 451              		.globl	CursorUnionNext
 452              	$LFB4 = .
  36:bgtree/bgApi.c **** 
  37:bgtree/bgApi.c **** BAT CursorUnionNext(Cursor *c) {
 453              		.loc 2 38 0
 454              		.set	nomips16
 455              		.ent	CursorUnionNext
 457              	CursorUnionNext:
 458              		.frame	$fp,40,$31		# vars= 8, regs= 2/0, args= 16, gp= 8
 459              		.mask	0xc0000000,-4
 460              		.fmask	0x00000000,0
 461              		.set	noreorder
 462              		.set	nomacro
 463              		
 464 045c D8FFBD27 		addiu	$sp,$sp,-40
 465              	$LCFI16:
 466 0460 2400BFAF 		sw	$31,36($sp)
 467              	$LCFI17:
 468 0464 2000BEAF 		sw	$fp,32($sp)
 469              	$LCFI18:
 470 0468 21F0A003 		move	$fp,$sp
 471              	$LCFI19:
 472 046c 2800C4AF 		sw	$4,40($fp)
  38:bgtree/bgApi.c ****   BAT value = CursorNext(c->u.binaryInfo.a);
 473              		.loc 2 39 0
 474 0470 2800C28F 		lw	$2,40($fp)
 475 0474 00000000 		nop
 476 0478 0400428C 		lw	$2,4($2)
 477 047c 00000000 		nop
 478 0480 21204000 		move	$4,$2
 479              		.option	pic0
 480 0484 0000000C 		jal	CursorNext
 481 0488 00000000 		nop
 482              	
 483              		.option	pic2
 484 048c 1800C2AF 		sw	$2,24($fp)
  39:bgtree/bgApi.c ****   if (value != BAInvalid)
 485              		.loc 2 40 0
 486 0490 1800C38F 		lw	$3,24($fp)
 487 0494 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 488 0498 04006210 		beq	$3,$2,$L17
 489 049c 00000000 		nop
 490              	
  40:bgtree/bgApi.c ****     return value;
 491              		.loc 2 41 0
 492 04a0 1800C28F 		lw	$2,24($fp)
 493 04a4 0A000010 		b	$L18
 494 04a8 00000000 		nop
 495              	
 496              	$L17:
  41:bgtree/bgApi.c ****   value = CursorNext(c->u.binaryInfo.b);
 497              		.loc 2 42 0
 498 04ac 2800C28F 		lw	$2,40($fp)
 499 04b0 00000000 		nop
 500 04b4 0800428C 		lw	$2,8($2)
 501 04b8 00000000 		nop
 502 04bc 21204000 		move	$4,$2
 503              		.option	pic0
 504 04c0 0000000C 		jal	CursorNext
 505 04c4 00000000 		nop
 506              	
 507              		.option	pic2
 508 04c8 1800C2AF 		sw	$2,24($fp)
  42:bgtree/bgApi.c ****   return value;
 509              		.loc 2 43 0
 510 04cc 1800C28F 		lw	$2,24($fp)
 511              	$L18:
  43:bgtree/bgApi.c **** }
 512              		.loc 2 44 0
 513 04d0 21E8C003 		move	$sp,$fp
 514 04d4 2400BF8F 		lw	$31,36($sp)
 515 04d8 2000BE8F 		lw	$fp,32($sp)
 516 04dc 2800BD27 		addiu	$sp,$sp,40
 517 04e0 0800E003 		j	$31
 518 04e4 00000000 		nop
 519              	
 520              		.set	macro
 521              		.set	reorder
 522              		.end	CursorUnionNext
 523              	$LFE4:
 525              		.align	2
 526              		.globl	CursorIntersectionNext
 527              	$LFB5 = .
  44:bgtree/bgApi.c **** 
  45:bgtree/bgApi.c **** BAT CursorIntersectionNext(Cursor *c) {
 528              		.loc 2 46 0
 529              		.set	nomips16
 530              		.ent	CursorIntersectionNext
 532              	CursorIntersectionNext:
 533              		.frame	$fp,40,$31		# vars= 8, regs= 2/0, args= 16, gp= 8
 534              		.mask	0xc0000000,-4
 535              		.fmask	0x00000000,0
 536              		.set	noreorder
 537              		.set	nomacro
 538              		
 539 04e8 D8FFBD27 		addiu	$sp,$sp,-40
 540              	$LCFI20:
 541 04ec 2400BFAF 		sw	$31,36($sp)
 542              	$LCFI21:
 543 04f0 2000BEAF 		sw	$fp,32($sp)
 544              	$LCFI22:
 545 04f4 21F0A003 		move	$fp,$sp
 546              	$LCFI23:
 547 04f8 2800C4AF 		sw	$4,40($fp)
  46:bgtree/bgApi.c ****   while (1) {
  47:bgtree/bgApi.c ****     while (c->u.binaryInfo.aLastValue > c->u.binaryInfo.bLastValue) {
 548              		.loc 2 48 0
 549 04fc 0C000010 		b	$L21
 550 0500 00000000 		nop
 551              	
 552              	$L22:
  48:bgtree/bgApi.c ****       c->u.binaryInfo.bLastValue = CursorNext(c->u.binaryInfo.b);
 553              		.loc 2 49 0
 554 0504 2800C28F 		lw	$2,40($fp)
 555 0508 00000000 		nop
 556 050c 0800428C 		lw	$2,8($2)
 557 0510 00000000 		nop
 558 0514 21204000 		move	$4,$2
 559              		.option	pic0
 560 0518 0000000C 		jal	CursorNext
 561 051c 00000000 		nop
 562              	
 563              		.option	pic2
 564 0520 21184000 		move	$3,$2
 565 0524 2800C28F 		lw	$2,40($fp)
 566 0528 00000000 		nop
 567 052c 100043AC 		sw	$3,16($2)
 568              	$L21:
  48:bgtree/bgApi.c ****       c->u.binaryInfo.bLastValue = CursorNext(c->u.binaryInfo.b);
 569              		.loc 2 48 0
 570 0530 2800C28F 		lw	$2,40($fp)
 571 0534 00000000 		nop
 572 0538 0C00438C 		lw	$3,12($2)
 573 053c 2800C28F 		lw	$2,40($fp)
 574 0540 00000000 		nop
 575 0544 1000428C 		lw	$2,16($2)
 576 0548 00000000 		nop
 577 054c 2B104300 		sltu	$2,$2,$3
 578 0550 ECFF4014 		bne	$2,$0,$L22
 579 0554 00000000 		nop
 580              	
  49:bgtree/bgApi.c ****     }
  50:bgtree/bgApi.c ****     while (c->u.binaryInfo.bLastValue > c->u.binaryInfo.aLastValue) {
 581              		.loc 2 51 0
 582 0558 0C000010 		b	$L23
 583 055c 00000000 		nop
 584              	
 585              	$L24:
  51:bgtree/bgApi.c ****       c->u.binaryInfo.aLastValue = CursorNext(c->u.binaryInfo.a);
 586              		.loc 2 52 0
 587 0560 2800C28F 		lw	$2,40($fp)
 588 0564 00000000 		nop
 589 0568 0400428C 		lw	$2,4($2)
 590 056c 00000000 		nop
 591 0570 21204000 		move	$4,$2
 592              		.option	pic0
 593 0574 0000000C 		jal	CursorNext
 594 0578 00000000 		nop
 595              	
 596              		.option	pic2
 597 057c 21184000 		move	$3,$2
 598 0580 2800C28F 		lw	$2,40($fp)
 599 0584 00000000 		nop
 600 0588 0C0043AC 		sw	$3,12($2)
 601              	$L23:
  51:bgtree/bgApi.c ****       c->u.binaryInfo.aLastValue = CursorNext(c->u.binaryInfo.a);
 602              		.loc 2 51 0
 603 058c 2800C28F 		lw	$2,40($fp)
 604 0590 00000000 		nop
 605 0594 1000438C 		lw	$3,16($2)
 606 0598 2800C28F 		lw	$2,40($fp)
 607 059c 00000000 		nop
 608 05a0 0C00428C 		lw	$2,12($2)
 609 05a4 00000000 		nop
 610 05a8 2B104300 		sltu	$2,$2,$3
 611 05ac ECFF4014 		bne	$2,$0,$L24
 612 05b0 00000000 		nop
 613              	
  52:bgtree/bgApi.c ****     }
  53:bgtree/bgApi.c ****     if (c->u.binaryInfo.aLastValue == c->u.binaryInfo.bLastValue) {
 614              		.loc 2 54 0
 615 05b4 2800C28F 		lw	$2,40($fp)
 616 05b8 00000000 		nop
 617 05bc 0C00438C 		lw	$3,12($2)
 618 05c0 2800C28F 		lw	$2,40($fp)
 619 05c4 00000000 		nop
 620 05c8 1000428C 		lw	$2,16($2)
 621 05cc 00000000 		nop
 622 05d0 23006214 		bne	$3,$2,$L25
 623 05d4 00000000 		nop
 624              	
 625              	$LBB4 = .
  54:bgtree/bgApi.c ****       BAT value = c->u.binaryInfo.aLastValue; 
 626              		.loc 2 55 0
 627 05d8 2800C28F 		lw	$2,40($fp)
 628 05dc 00000000 		nop
 629 05e0 0C00428C 		lw	$2,12($2)
 630 05e4 00000000 		nop
 631 05e8 1800C2AF 		sw	$2,24($fp)
  55:bgtree/bgApi.c ****       c->u.binaryInfo.aLastValue = CursorNext(c->u.binaryInfo.a);
 632              		.loc 2 56 0
 633 05ec 2800C28F 		lw	$2,40($fp)
 634 05f0 00000000 		nop
 635 05f4 0400428C 		lw	$2,4($2)
 636 05f8 00000000 		nop
 637 05fc 21204000 		move	$4,$2
 638              		.option	pic0
 639 0600 0000000C 		jal	CursorNext
 640 0604 00000000 		nop
 641              	
 642              		.option	pic2
 643 0608 21184000 		move	$3,$2
 644 060c 2800C28F 		lw	$2,40($fp)
 645 0610 00000000 		nop
 646 0614 0C0043AC 		sw	$3,12($2)
  56:bgtree/bgApi.c ****       c->u.binaryInfo.bLastValue = CursorNext(c->u.binaryInfo.b);
 647              		.loc 2 57 0
 648 0618 2800C28F 		lw	$2,40($fp)
 649 061c 00000000 		nop
 650 0620 0800428C 		lw	$2,8($2)
 651 0624 00000000 		nop
 652 0628 21204000 		move	$4,$2
 653              		.option	pic0
 654 062c 0000000C 		jal	CursorNext
 655 0630 00000000 		nop
 656              	
 657              		.option	pic2
 658 0634 21184000 		move	$3,$2
 659 0638 2800C28F 		lw	$2,40($fp)
 660 063c 00000000 		nop
 661 0640 100043AC 		sw	$3,16($2)
  57:bgtree/bgApi.c ****       return value;
 662              		.loc 2 58 0
 663 0644 1800C28F 		lw	$2,24($fp)
 664              	$LBE4 = .
  58:bgtree/bgApi.c ****     }
  59:bgtree/bgApi.c ****   }
  60:bgtree/bgApi.c **** }
 665              		.loc 2 61 0
 666 0648 21E8C003 		move	$sp,$fp
 667 064c 2400BF8F 		lw	$31,36($sp)
 668 0650 2000BE8F 		lw	$fp,32($sp)
 669 0654 2800BD27 		addiu	$sp,$sp,40
 670 0658 0800E003 		j	$31
 671 065c 00000000 		nop
 672              	
 673              	$L25:
  60:bgtree/bgApi.c **** }
 674              		.loc 2 60 0
 675 0660 00000000 		nop
  48:bgtree/bgApi.c ****     while (c->u.binaryInfo.aLastValue > c->u.binaryInfo.bLastValue) {
 676              		.loc 2 48 0
 677 0664 B2FF0010 		b	$L21
 678 0668 00000000 		nop
 679              	
 680              		.set	macro
 681              		.set	reorder
 682              		.end	CursorIntersectionNext
 683              	$LFE5:
 685              		.align	2
 686              		.globl	CursorUniqueNext
 687              	$LFB6 = .
  61:bgtree/bgApi.c **** 
  62:bgtree/bgApi.c **** BAT CursorUniqueNext(Cursor *c) {
 688              		.loc 2 63 0
 689              		.set	nomips16
 690              		.ent	CursorUniqueNext
 692              	CursorUniqueNext:
 693              		.frame	$fp,8,$31		# vars= 0, regs= 1/0, args= 0, gp= 0
 694              		.mask	0x40000000,-4
 695              		.fmask	0x00000000,0
 696              		.set	noreorder
 697              		.set	nomacro
 698              		
 699 066c F8FFBD27 		addiu	$sp,$sp,-8
 700              	$LCFI24:
 701 0670 0400BEAF 		sw	$fp,4($sp)
 702              	$LCFI25:
 703 0674 21F0A003 		move	$fp,$sp
 704              	$LCFI26:
 705 0678 0800C4AF 		sw	$4,8($fp)
  63:bgtree/bgApi.c ****   return BAInvalid;
 706              		.loc 2 64 0
 707 067c FFFF0224 		li	$2,-1			# 0xffffffffffffffff
  64:bgtree/bgApi.c **** }
 708              		.loc 2 65 0
 709 0680 21E8C003 		move	$sp,$fp
 710 0684 0400BE8F 		lw	$fp,4($sp)
 711 0688 0800BD27 		addiu	$sp,$sp,8
 712 068c 0800E003 		j	$31
 713 0690 00000000 		nop
 714              	
 715              		.set	macro
 716              		.set	reorder
 717              		.end	CursorUniqueNext
 718              	$LFE6:
 720              		.align	2
 721              		.globl	CursorNext
 722              	$LFB7 = .
  65:bgtree/bgApi.c **** 
  66:bgtree/bgApi.c **** BAT CursorNext(Cursor *c) {
 723              		.loc 2 67 0
 724              		.set	nomips16
 725              		.ent	CursorNext
 727              	CursorNext:
 728              		.frame	$fp,32,$31		# vars= 0, regs= 2/0, args= 16, gp= 8
 729              		.mask	0xc0000000,-4
 730              		.fmask	0x00000000,0
 731              		.set	noreorder
 732              		.set	nomacro
 733              		
 734 0694 E0FFBD27 		addiu	$sp,$sp,-32
 735              	$LCFI27:
 736 0698 1C00BFAF 		sw	$31,28($sp)
 737              	$LCFI28:
 738 069c 1800BEAF 		sw	$fp,24($sp)
 739              	$LCFI29:
 740 06a0 21F0A003 		move	$fp,$sp
 741              	$LCFI30:
 742 06a4 2000C4AF 		sw	$4,32($fp)
  67:bgtree/bgApi.c ****   return (*c->nextFunc)(c);
 743              		.loc 2 68 0
 744 06a8 2000C28F 		lw	$2,32($fp)
 745 06ac 00000000 		nop
 746 06b0 0000428C 		lw	$2,0($2)
 747 06b4 2000C48F 		lw	$4,32($fp)
 748 06b8 21C84000 		move	$25,$2
 749 06bc 09F82003 		jalr	$25
 750 06c0 00000000 		nop
 751              	
  68:bgtree/bgApi.c **** }
 752              		.loc 2 69 0
 753 06c4 21E8C003 		move	$sp,$fp
 754 06c8 1C00BF8F 		lw	$31,28($sp)
 755 06cc 1800BE8F 		lw	$fp,24($sp)
 756 06d0 2000BD27 		addiu	$sp,$sp,32
 757 06d4 0800E003 		j	$31
 758 06d8 00000000 		nop
 759              	
 760              		.set	macro
 761              		.set	reorder
 762              		.end	CursorNext
 763              	$LFE7:
 765              		.align	2
 766              		.globl	CursorInit
 767              	$LFB8 = .
  69:bgtree/bgApi.c **** 
  70:bgtree/bgApi.c **** Cursor CursorInit(BgTree table, BAT (*nextFunc)(Cursor *c)) {
 768              		.loc 2 71 0
 769              		.set	nomips16
 770              		.ent	CursorInit
 772              	CursorInit:
 773              		.frame	$fp,80,$31		# vars= 40, regs= 3/0, args= 16, gp= 8
 774              		.mask	0xc0010000,-4
 775              		.fmask	0x00000000,0
 776              		.set	noreorder
 777              		.set	nomacro
 778              		
 779 06dc B0FFBD27 		addiu	$sp,$sp,-80
 780              	$LCFI31:
 781 06e0 4C00BFAF 		sw	$31,76($sp)
 782              	$LCFI32:
 783 06e4 4800BEAF 		sw	$fp,72($sp)
 784              	$LCFI33:
 785 06e8 4400B0AF 		sw	$16,68($sp)
 786              	$LCFI34:
 787 06ec 21F0A003 		move	$fp,$sp
 788              	$LCFI35:
 789 06f0 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 790 06f4 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 791 06f8 1000BCAF 		.cprestore	16
 792 06fc 21808000 		move	$16,$4
 793 0700 5400C5AF 		sw	$5,84($fp)
 794 0704 5800C6AF 		sw	$6,88($fp)
 795 0708 5C00C7AF 		sw	$7,92($fp)
  71:bgtree/bgApi.c ****   Cursor c;
  72:bgtree/bgApi.c ****   c.u.keyInfo.row = RowPtrInit(table);
 796              		.loc 2 73 0
 797 070c 3000C227 		addiu	$2,$fp,48
 798 0710 21204000 		move	$4,$2
 799 0714 5400C58F 		lw	$5,84($fp)
 800 0718 5800C68F 		lw	$6,88($fp)
 801 071c 0000828F 		lw	$2,%call16(RowPtrInit)($28)
 802 0720 00000000 		nop
 803 0724 21C84000 		move	$25,$2
 804 0728 09F82003 		jalr	$25
 805 072c 00000000 		nop
 806              	
 807 0730 1000DC8F 		lw	$28,16($fp)
 808 0734 3000C58F 		lw	$5,48($fp)
 809 0738 3400C48F 		lw	$4,52($fp)
 810 073c 3800C38F 		lw	$3,56($fp)
 811 0740 3C00C28F 		lw	$2,60($fp)
 812 0744 1C00C5AF 		sw	$5,28($fp)
 813 0748 2000C4AF 		sw	$4,32($fp)
 814 074c 2400C3AF 		sw	$3,36($fp)
 815 0750 2800C2AF 		sw	$2,40($fp)
  73:bgtree/bgApi.c ****   c.u.keyInfo.key = 0;
 816              		.loc 2 74 0
 817 0754 2C00C0AF 		sw	$0,44($fp)
  74:bgtree/bgApi.c ****   c.nextFunc = nextFunc;
 818              		.loc 2 75 0
 819 0758 5C00C28F 		lw	$2,92($fp)
 820 075c 00000000 		nop
 821 0760 1800C2AF 		sw	$2,24($fp)
  75:bgtree/bgApi.c ****   return c;
 822              		.loc 2 76 0
 823 0764 1800C78F 		lw	$7,24($fp)
 824 0768 1C00C68F 		lw	$6,28($fp)
 825 076c 2000C58F 		lw	$5,32($fp)
 826 0770 2400C48F 		lw	$4,36($fp)
 827 0774 2800C38F 		lw	$3,40($fp)
 828 0778 2C00C28F 		lw	$2,44($fp)
 829 077c 000007AE 		sw	$7,0($16)
 830 0780 040006AE 		sw	$6,4($16)
 831 0784 080005AE 		sw	$5,8($16)
 832 0788 0C0004AE 		sw	$4,12($16)
 833 078c 100003AE 		sw	$3,16($16)
 834 0790 140002AE 		sw	$2,20($16)
  76:bgtree/bgApi.c **** }
 835              		.loc 2 77 0
 836 0794 21100002 		move	$2,$16
 837 0798 21E8C003 		move	$sp,$fp
 838 079c 4C00BF8F 		lw	$31,76($sp)
 839 07a0 4800BE8F 		lw	$fp,72($sp)
 840 07a4 4400B08F 		lw	$16,68($sp)
 841 07a8 5000BD27 		addiu	$sp,$sp,80
 842 07ac 0800E003 		j	$31
 843 07b0 00000000 		nop
 844              	
 845              		.set	macro
 846              		.set	reorder
 847              		.end	CursorInit
 848              	$LFE8:
 850              		.align	2
 851              		.globl	SelectKey
 852              	$LFB9 = .
  77:bgtree/bgApi.c **** 
  78:bgtree/bgApi.c **** Cursor SelectKey(BgTree table, KeyT key) {
 853              		.loc 2 79 0
 854              		.set	nomips16
 855              		.ent	SelectKey
 857              	SelectKey:
 858              		.frame	$fp,80,$31		# vars= 40, regs= 3/0, args= 16, gp= 8
 859              		.mask	0xc0010000,-4
 860              		.fmask	0x00000000,0
 861              		.set	noreorder
 862              		.set	nomacro
 863              		
 864 07b4 B0FFBD27 		addiu	$sp,$sp,-80
 865              	$LCFI36:
 866 07b8 4C00BFAF 		sw	$31,76($sp)
 867              	$LCFI37:
 868 07bc 4800BEAF 		sw	$fp,72($sp)
 869              	$LCFI38:
 870 07c0 4400B0AF 		sw	$16,68($sp)
 871              	$LCFI39:
 872 07c4 21F0A003 		move	$fp,$sp
 873              	$LCFI40:
 874 07c8 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 875 07cc 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 876 07d0 1000BCAF 		.cprestore	16
 877 07d4 21808000 		move	$16,$4
 878 07d8 5400C5AF 		sw	$5,84($fp)
 879 07dc 5800C6AF 		sw	$6,88($fp)
 880 07e0 5C00C7AF 		sw	$7,92($fp)
  79:bgtree/bgApi.c ****   Cursor c;
  80:bgtree/bgApi.c ****   c.u.keyInfo.row = RowPtrInit(table);
 881              		.loc 2 81 0
 882 07e4 3000C227 		addiu	$2,$fp,48
 883 07e8 21204000 		move	$4,$2
 884 07ec 5400C58F 		lw	$5,84($fp)
 885 07f0 5800C68F 		lw	$6,88($fp)
 886 07f4 0000828F 		lw	$2,%call16(RowPtrInit)($28)
 887 07f8 00000000 		nop
 888 07fc 21C84000 		move	$25,$2
 889 0800 09F82003 		jalr	$25
 890 0804 00000000 		nop
 891              	
 892 0808 1000DC8F 		lw	$28,16($fp)
 893 080c 3000C58F 		lw	$5,48($fp)
 894 0810 3400C48F 		lw	$4,52($fp)
 895 0814 3800C38F 		lw	$3,56($fp)
 896 0818 3C00C28F 		lw	$2,60($fp)
 897 081c 1C00C5AF 		sw	$5,28($fp)
 898 0820 2000C4AF 		sw	$4,32($fp)
 899 0824 2400C3AF 		sw	$3,36($fp)
 900 0828 2800C2AF 		sw	$2,40($fp)
  81:bgtree/bgApi.c ****   c.u.keyInfo.key = key;
 901              		.loc 2 82 0
 902 082c 5C00C28F 		lw	$2,92($fp)
 903 0830 00000000 		nop
 904 0834 2C00C2AF 		sw	$2,44($fp)
  82:bgtree/bgApi.c ****   c.nextFunc = &CursorKeyNext;
 905              		.loc 2 83 0
 906 0838 0000023C 		lui	$2,%hi(CursorKeyNext)
 907 083c 00004224 		addiu	$2,$2,%lo(CursorKeyNext)
 908 0840 1800C2AF 		sw	$2,24($fp)
  83:bgtree/bgApi.c ****   SetUserData(table.userData);
 909              		.loc 2 84 0
 910 0844 5800C28F 		lw	$2,88($fp)
 911 0848 00000000 		nop
 912 084c 21204000 		move	$4,$2
 913 0850 0000828F 		lw	$2,%call16(SetUserData)($28)
 914 0854 00000000 		nop
 915 0858 21C84000 		move	$25,$2
 916 085c 09F82003 		jalr	$25
 917 0860 00000000 		nop
 918              	
 919 0864 1000DC8F 		lw	$28,16($fp)
  84:bgtree/bgApi.c ****   FindInternal(table.topNode, key, &c.u.keyInfo.row.node, &c.u.keyInfo.row.index);
 920              		.loc 2 85 0
 921 0868 5400C48F 		lw	$4,84($fp)
 922 086c 2400C327 		addiu	$3,$fp,36
 923 0870 2800C227 		addiu	$2,$fp,40
 924 0874 5C00C58F 		lw	$5,92($fp)
 925 0878 21306000 		move	$6,$3
 926 087c 21384000 		move	$7,$2
 927 0880 0000828F 		lw	$2,%call16(FindInternal)($28)
 928 0884 00000000 		nop
 929 0888 21C84000 		move	$25,$2
 930 088c 09F82003 		jalr	$25
 931 0890 00000000 		nop
 932              	
 933 0894 1000DC8F 		lw	$28,16($fp)
  85:bgtree/bgApi.c ****   SetUserData(0x0);
 934              		.loc 2 86 0
 935 0898 21200000 		move	$4,$0
 936 089c 0000828F 		lw	$2,%call16(SetUserData)($28)
 937 08a0 00000000 		nop
 938 08a4 21C84000 		move	$25,$2
 939 08a8 09F82003 		jalr	$25
 940 08ac 00000000 		nop
 941              	
 942 08b0 1000DC8F 		lw	$28,16($fp)
  86:bgtree/bgApi.c ****   return c;
 943              		.loc 2 87 0
 944 08b4 1800C78F 		lw	$7,24($fp)
 945 08b8 1C00C68F 		lw	$6,28($fp)
 946 08bc 2000C58F 		lw	$5,32($fp)
 947 08c0 2400C48F 		lw	$4,36($fp)
 948 08c4 2800C38F 		lw	$3,40($fp)
 949 08c8 2C00C28F 		lw	$2,44($fp)
 950 08cc 000007AE 		sw	$7,0($16)
 951 08d0 040006AE 		sw	$6,4($16)
 952 08d4 080005AE 		sw	$5,8($16)
 953 08d8 0C0004AE 		sw	$4,12($16)
 954 08dc 100003AE 		sw	$3,16($16)
 955 08e0 140002AE 		sw	$2,20($16)
  87:bgtree/bgApi.c **** }
 956              		.loc 2 88 0
 957 08e4 21100002 		move	$2,$16
 958 08e8 21E8C003 		move	$sp,$fp
 959 08ec 4C00BF8F 		lw	$31,76($sp)
 960 08f0 4800BE8F 		lw	$fp,72($sp)
 961 08f4 4400B08F 		lw	$16,68($sp)
 962 08f8 5000BD27 		addiu	$sp,$sp,80
 963 08fc 0800E003 		j	$31
 964 0900 00000000 		nop
 965              	
 966              		.set	macro
 967              		.set	reorder
 968              		.end	SelectKey
 969              	$LFE9:
 971              		.align	2
 972              		.globl	SelectConsecutiveKeys
 973              	$LFB10 = .
  88:bgtree/bgApi.c **** 
  89:bgtree/bgApi.c **** Cursor SelectConsecutiveKeys(BgTree table, KeyT key) {
 974              		.loc 2 90 0
 975              		.set	nomips16
 976              		.ent	SelectConsecutiveKeys
 978              	SelectConsecutiveKeys:
 979              		.frame	$fp,80,$31		# vars= 40, regs= 3/0, args= 16, gp= 8
 980              		.mask	0xc0010000,-4
 981              		.fmask	0x00000000,0
 982              		.set	noreorder
 983              		.set	nomacro
 984              		
 985 0904 B0FFBD27 		addiu	$sp,$sp,-80
 986              	$LCFI41:
 987 0908 4C00BFAF 		sw	$31,76($sp)
 988              	$LCFI42:
 989 090c 4800BEAF 		sw	$fp,72($sp)
 990              	$LCFI43:
 991 0910 4400B0AF 		sw	$16,68($sp)
 992              	$LCFI44:
 993 0914 21F0A003 		move	$fp,$sp
 994              	$LCFI45:
 995 0918 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 996 091c 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 997 0920 1000BCAF 		.cprestore	16
 998 0924 21808000 		move	$16,$4
 999 0928 5400C5AF 		sw	$5,84($fp)
 1000 092c 5800C6AF 		sw	$6,88($fp)
 1001 0930 5C00C7AF 		sw	$7,92($fp)
  90:bgtree/bgApi.c ****   Cursor c;
  91:bgtree/bgApi.c ****   c.u.keyInfo.row = RowPtrInit(table);
 1002              		.loc 2 92 0
 1003 0934 3000C227 		addiu	$2,$fp,48
 1004 0938 21204000 		move	$4,$2
 1005 093c 5400C58F 		lw	$5,84($fp)
 1006 0940 5800C68F 		lw	$6,88($fp)
 1007 0944 0000828F 		lw	$2,%call16(RowPtrInit)($28)
 1008 0948 00000000 		nop
 1009 094c 21C84000 		move	$25,$2
 1010 0950 09F82003 		jalr	$25
 1011 0954 00000000 		nop
 1012              	
 1013 0958 1000DC8F 		lw	$28,16($fp)
 1014 095c 3000C58F 		lw	$5,48($fp)
 1015 0960 3400C48F 		lw	$4,52($fp)
 1016 0964 3800C38F 		lw	$3,56($fp)
 1017 0968 3C00C28F 		lw	$2,60($fp)
 1018 096c 1C00C5AF 		sw	$5,28($fp)
 1019 0970 2000C4AF 		sw	$4,32($fp)
 1020 0974 2400C3AF 		sw	$3,36($fp)
 1021 0978 2800C2AF 		sw	$2,40($fp)
  92:bgtree/bgApi.c ****   c.u.keyInfo.key = key;
 1022              		.loc 2 93 0
 1023 097c 5C00C28F 		lw	$2,92($fp)
 1024 0980 00000000 		nop
 1025 0984 2C00C2AF 		sw	$2,44($fp)
  93:bgtree/bgApi.c ****   c.nextFunc = &CursorConsecutiveKeysNext;
 1026              		.loc 2 94 0
 1027 0988 0000023C 		lui	$2,%hi(CursorConsecutiveKeysNext)
 1028 098c 00004224 		addiu	$2,$2,%lo(CursorConsecutiveKeysNext)
 1029 0990 1800C2AF 		sw	$2,24($fp)
  94:bgtree/bgApi.c ****   SetUserData(table.userData);
 1030              		.loc 2 95 0
 1031 0994 5800C28F 		lw	$2,88($fp)
 1032 0998 00000000 		nop
 1033 099c 21204000 		move	$4,$2
 1034 09a0 0000828F 		lw	$2,%call16(SetUserData)($28)
 1035 09a4 00000000 		nop
 1036 09a8 21C84000 		move	$25,$2
 1037 09ac 09F82003 		jalr	$25
 1038 09b0 00000000 		nop
 1039              	
 1040 09b4 1000DC8F 		lw	$28,16($fp)
  95:bgtree/bgApi.c ****   FindInternal(table.topNode, key, &c.u.keyInfo.row.node, &c.u.keyInfo.row.index);
 1041              		.loc 2 96 0
 1042 09b8 5400C48F 		lw	$4,84($fp)
 1043 09bc 2400C327 		addiu	$3,$fp,36
 1044 09c0 2800C227 		addiu	$2,$fp,40
 1045 09c4 5C00C58F 		lw	$5,92($fp)
 1046 09c8 21306000 		move	$6,$3
 1047 09cc 21384000 		move	$7,$2
 1048 09d0 0000828F 		lw	$2,%call16(FindInternal)($28)
 1049 09d4 00000000 		nop
 1050 09d8 21C84000 		move	$25,$2
 1051 09dc 09F82003 		jalr	$25
 1052 09e0 00000000 		nop
 1053              	
 1054 09e4 1000DC8F 		lw	$28,16($fp)
  96:bgtree/bgApi.c ****   SetUserData(0x0);
 1055              		.loc 2 97 0
 1056 09e8 21200000 		move	$4,$0
 1057 09ec 0000828F 		lw	$2,%call16(SetUserData)($28)
 1058 09f0 00000000 		nop
 1059 09f4 21C84000 		move	$25,$2
 1060 09f8 09F82003 		jalr	$25
 1061 09fc 00000000 		nop
 1062              	
 1063 0a00 1000DC8F 		lw	$28,16($fp)
  97:bgtree/bgApi.c ****   return c;
 1064              		.loc 2 98 0
 1065 0a04 1800C78F 		lw	$7,24($fp)
 1066 0a08 1C00C68F 		lw	$6,28($fp)
 1067 0a0c 2000C58F 		lw	$5,32($fp)
 1068 0a10 2400C48F 		lw	$4,36($fp)
 1069 0a14 2800C38F 		lw	$3,40($fp)
 1070 0a18 2C00C28F 		lw	$2,44($fp)
 1071 0a1c 000007AE 		sw	$7,0($16)
 1072 0a20 040006AE 		sw	$6,4($16)
 1073 0a24 080005AE 		sw	$5,8($16)
 1074 0a28 0C0004AE 		sw	$4,12($16)
 1075 0a2c 100003AE 		sw	$3,16($16)
 1076 0a30 140002AE 		sw	$2,20($16)
  98:bgtree/bgApi.c **** }
 1077              		.loc 2 99 0
 1078 0a34 21100002 		move	$2,$16
 1079 0a38 21E8C003 		move	$sp,$fp
 1080 0a3c 4C00BF8F 		lw	$31,76($sp)
 1081 0a40 4800BE8F 		lw	$fp,72($sp)
 1082 0a44 4400B08F 		lw	$16,68($sp)
 1083 0a48 5000BD27 		addiu	$sp,$sp,80
 1084 0a4c 0800E003 		j	$31
 1085 0a50 00000000 		nop
 1086              	
 1087              		.set	macro
 1088              		.set	reorder
 1089              		.end	SelectConsecutiveKeys
 1090              	$LFE10:
 1092              		.align	2
 1093              		.globl	SelectAll
 1094              	$LFB11 = .
  99:bgtree/bgApi.c **** 
 100:bgtree/bgApi.c **** Cursor SelectAll(BgTree table) {
 1095              		.loc 2 101 0
 1096              		.set	nomips16
 1097              		.ent	SelectAll
 1099              	SelectAll:
 1100              		.frame	$fp,80,$31		# vars= 40, regs= 3/0, args= 16, gp= 8
 1101              		.mask	0xc0010000,-4
 1102              		.fmask	0x00000000,0
 1103              		.set	noreorder
 1104              		.set	nomacro
 1105              		
 1106 0a54 B0FFBD27 		addiu	$sp,$sp,-80
 1107              	$LCFI46:
 1108 0a58 4C00BFAF 		sw	$31,76($sp)
 1109              	$LCFI47:
 1110 0a5c 4800BEAF 		sw	$fp,72($sp)
 1111              	$LCFI48:
 1112 0a60 4400B0AF 		sw	$16,68($sp)
 1113              	$LCFI49:
 1114 0a64 21F0A003 		move	$fp,$sp
 1115              	$LCFI50:
 1116 0a68 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1117 0a6c 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1118 0a70 1000BCAF 		.cprestore	16
 1119 0a74 21808000 		move	$16,$4
 1120 0a78 5400C5AF 		sw	$5,84($fp)
 1121 0a7c 5800C6AF 		sw	$6,88($fp)
 101:bgtree/bgApi.c ****   Cursor c;
 102:bgtree/bgApi.c ****   SetUserData(table.userData);
 1122              		.loc 2 103 0
 1123 0a80 5800C28F 		lw	$2,88($fp)
 1124 0a84 00000000 		nop
 1125 0a88 21204000 		move	$4,$2
 1126 0a8c 0000828F 		lw	$2,%call16(SetUserData)($28)
 1127 0a90 00000000 		nop
 1128 0a94 21C84000 		move	$25,$2
 1129 0a98 09F82003 		jalr	$25
 1130 0a9c 00000000 		nop
 1131              	
 1132 0aa0 1000DC8F 		lw	$28,16($fp)
 103:bgtree/bgApi.c ****   c.u.keyInfo.row = RowPtrInit(table);
 1133              		.loc 2 104 0
 1134 0aa4 3000C227 		addiu	$2,$fp,48
 1135 0aa8 21204000 		move	$4,$2
 1136 0aac 5400C58F 		lw	$5,84($fp)
 1137 0ab0 5800C68F 		lw	$6,88($fp)
 1138 0ab4 0000828F 		lw	$2,%call16(RowPtrInit)($28)
 1139 0ab8 00000000 		nop
 1140 0abc 21C84000 		move	$25,$2
 1141 0ac0 09F82003 		jalr	$25
 1142 0ac4 00000000 		nop
 1143              	
 1144 0ac8 1000DC8F 		lw	$28,16($fp)
 1145 0acc 3000C58F 		lw	$5,48($fp)
 1146 0ad0 3400C48F 		lw	$4,52($fp)
 1147 0ad4 3800C38F 		lw	$3,56($fp)
 1148 0ad8 3C00C28F 		lw	$2,60($fp)
 1149 0adc 1C00C5AF 		sw	$5,28($fp)
 1150 0ae0 2000C4AF 		sw	$4,32($fp)
 1151 0ae4 2400C3AF 		sw	$3,36($fp)
 1152 0ae8 2800C2AF 		sw	$2,40($fp)
 104:bgtree/bgApi.c ****   c.u.keyInfo.row.node = NodeFindFirstChild(table.topNode);
 1153              		.loc 2 105 0
 1154 0aec 5400C28F 		lw	$2,84($fp)
 1155 0af0 00000000 		nop
 1156 0af4 21204000 		move	$4,$2
 1157 0af8 0000828F 		lw	$2,%call16(NodeFindFirstChild)($28)
 1158 0afc 00000000 		nop
 1159 0b00 21C84000 		move	$25,$2
 1160 0b04 09F82003 		jalr	$25
 1161 0b08 00000000 		nop
 1162              	
 1163 0b0c 1000DC8F 		lw	$28,16($fp)
 1164 0b10 2400C2AF 		sw	$2,36($fp)
 105:bgtree/bgApi.c ****   c.u.keyInfo.row.index = 0;
 1165              		.loc 2 106 0
 1166 0b14 2800C0AF 		sw	$0,40($fp)
 106:bgtree/bgApi.c ****   c.u.keyInfo.key = BAInvalid;
 1167              		.loc 2 107 0
 1168 0b18 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 1169 0b1c 2C00C2AF 		sw	$2,44($fp)
 107:bgtree/bgApi.c ****   c.nextFunc = &CursorKeyNext;
 1170              		.loc 2 108 0
 1171 0b20 0000023C 		lui	$2,%hi(CursorKeyNext)
 1172 0b24 00004224 		addiu	$2,$2,%lo(CursorKeyNext)
 1173 0b28 1800C2AF 		sw	$2,24($fp)
 108:bgtree/bgApi.c ****   SetUserData(0x0);
 1174              		.loc 2 109 0
 1175 0b2c 21200000 		move	$4,$0
 1176 0b30 0000828F 		lw	$2,%call16(SetUserData)($28)
 1177 0b34 00000000 		nop
 1178 0b38 21C84000 		move	$25,$2
 1179 0b3c 09F82003 		jalr	$25
 1180 0b40 00000000 		nop
 1181              	
 1182 0b44 1000DC8F 		lw	$28,16($fp)
 109:bgtree/bgApi.c ****   return c;
 1183              		.loc 2 110 0
 1184 0b48 1800C78F 		lw	$7,24($fp)
 1185 0b4c 1C00C68F 		lw	$6,28($fp)
 1186 0b50 2000C58F 		lw	$5,32($fp)
 1187 0b54 2400C48F 		lw	$4,36($fp)
 1188 0b58 2800C38F 		lw	$3,40($fp)
 1189 0b5c 2C00C28F 		lw	$2,44($fp)
 1190 0b60 000007AE 		sw	$7,0($16)
 1191 0b64 040006AE 		sw	$6,4($16)
 1192 0b68 080005AE 		sw	$5,8($16)
 1193 0b6c 0C0004AE 		sw	$4,12($16)
 1194 0b70 100003AE 		sw	$3,16($16)
 1195 0b74 140002AE 		sw	$2,20($16)
 110:bgtree/bgApi.c **** }
 1196              		.loc 2 111 0
 1197 0b78 21100002 		move	$2,$16
 1198 0b7c 21E8C003 		move	$sp,$fp
 1199 0b80 4C00BF8F 		lw	$31,76($sp)
 1200 0b84 4800BE8F 		lw	$fp,72($sp)
 1201 0b88 4400B08F 		lw	$16,68($sp)
 1202 0b8c 5000BD27 		addiu	$sp,$sp,80
 1203 0b90 0800E003 		j	$31
 1204 0b94 00000000 		nop
 1205              	
 1206              		.set	macro
 1207              		.set	reorder
 1208              		.end	SelectAll
 1209              	$LFE11:
 1211              		.align	2
 1212              		.globl	Union
 1213              	$LFB12 = .
 111:bgtree/bgApi.c **** 
 112:bgtree/bgApi.c **** Cursor Union(Cursor *a, Cursor *b) {
 1214              		.loc 2 113 0
 1215              		.set	nomips16
 1216              		.ent	Union
 1218              	Union:
 1219              		.frame	$fp,96,$31		# vars= 56, regs= 4/0, args= 16, gp= 8
 1220              		.mask	0xc0030000,-4
 1221              		.fmask	0x00000000,0
 1222              		.set	noreorder
 1223              		.set	nomacro
 1224              		
 1225 0b98 A0FFBD27 		addiu	$sp,$sp,-96
 1226              	$LCFI51:
 1227 0b9c 5C00BFAF 		sw	$31,92($sp)
 1228              	$LCFI52:
 1229 0ba0 5800BEAF 		sw	$fp,88($sp)
 1230              	$LCFI53:
 1231 0ba4 5400B1AF 		sw	$17,84($sp)
 1232              	$LCFI54:
 1233 0ba8 5000B0AF 		sw	$16,80($sp)
 1234              	$LCFI55:
 1235 0bac 21F0A003 		move	$fp,$sp
 1236              	$LCFI56:
 1237 0bb0 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1238 0bb4 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1239 0bb8 1000BCAF 		.cprestore	16
 1240 0bbc 21808000 		move	$16,$4
 1241 0bc0 6400C5AF 		sw	$5,100($fp)
 1242 0bc4 6800C6AF 		sw	$6,104($fp)
 113:bgtree/bgApi.c ****   Cursor c;
 114:bgtree/bgApi.c ****   Cursor *aa = (Cursor *) malloc(sizeof(Cursor));
 1243              		.loc 2 115 0
 1244 0bc8 18000424 		li	$4,24			# 0x18
 1245 0bcc 0000828F 		lw	$2,%call16(malloc)($28)
 1246 0bd0 00000000 		nop
 1247 0bd4 21C84000 		move	$25,$2
 1248 0bd8 09F82003 		jalr	$25
 1249 0bdc 00000000 		nop
 1250              	
 1251 0be0 1000DC8F 		lw	$28,16($fp)
 1252 0be4 1C00C2AF 		sw	$2,28($fp)
 115:bgtree/bgApi.c ****   *aa = CursorCreateInvalid();
 1253              		.loc 2 116 0
 1254 0be8 1C00D18F 		lw	$17,28($fp)
 1255 0bec 3800C227 		addiu	$2,$fp,56
 1256 0bf0 21204000 		move	$4,$2
 1257              		.option	pic0
 1258 0bf4 0E00000C 		jal	CursorCreateInvalid
 1259 0bf8 00000000 		nop
 1260              	
 1261              		.option	pic2
 1262 0bfc 1000DC8F 		lw	$28,16($fp)
 1263 0c00 3800C78F 		lw	$7,56($fp)
 1264 0c04 3C00C68F 		lw	$6,60($fp)
 1265 0c08 4000C58F 		lw	$5,64($fp)
 1266 0c0c 4400C48F 		lw	$4,68($fp)
 1267 0c10 4800C38F 		lw	$3,72($fp)
 1268 0c14 4C00C28F 		lw	$2,76($fp)
 1269 0c18 000027AE 		sw	$7,0($17)
 1270 0c1c 040026AE 		sw	$6,4($17)
 1271 0c20 080025AE 		sw	$5,8($17)
 1272 0c24 0C0024AE 		sw	$4,12($17)
 1273 0c28 100023AE 		sw	$3,16($17)
 1274 0c2c 140022AE 		sw	$2,20($17)
 116:bgtree/bgApi.c ****   Cursor *bb = (Cursor *) malloc(sizeof(Cursor));
 1275              		.loc 2 117 0
 1276 0c30 18000424 		li	$4,24			# 0x18
 1277 0c34 0000828F 		lw	$2,%call16(malloc)($28)
 1278 0c38 00000000 		nop
 1279 0c3c 21C84000 		move	$25,$2
 1280 0c40 09F82003 		jalr	$25
 1281 0c44 00000000 		nop
 1282              	
 1283 0c48 1000DC8F 		lw	$28,16($fp)
 1284 0c4c 1800C2AF 		sw	$2,24($fp)
 117:bgtree/bgApi.c ****   *bb = CursorCreateInvalid();
 1285              		.loc 2 118 0
 1286 0c50 1800D18F 		lw	$17,24($fp)
 1287 0c54 3800C227 		addiu	$2,$fp,56
 1288 0c58 21204000 		move	$4,$2
 1289              		.option	pic0
 1290 0c5c 0E00000C 		jal	CursorCreateInvalid
 1291 0c60 00000000 		nop
 1292              	
 1293              		.option	pic2
 1294 0c64 1000DC8F 		lw	$28,16($fp)
 1295 0c68 3800C78F 		lw	$7,56($fp)
 1296 0c6c 3C00C68F 		lw	$6,60($fp)
 1297 0c70 4000C58F 		lw	$5,64($fp)
 1298 0c74 4400C48F 		lw	$4,68($fp)
 1299 0c78 4800C38F 		lw	$3,72($fp)
 1300 0c7c 4C00C28F 		lw	$2,76($fp)
 1301 0c80 000027AE 		sw	$7,0($17)
 1302 0c84 040026AE 		sw	$6,4($17)
 1303 0c88 080025AE 		sw	$5,8($17)
 1304 0c8c 0C0024AE 		sw	$4,12($17)
 1305 0c90 100023AE 		sw	$3,16($17)
 1306 0c94 140022AE 		sw	$2,20($17)
 118:bgtree/bgApi.c ****   CursorDup(aa, a);
 1307              		.loc 2 119 0
 1308 0c98 1C00C48F 		lw	$4,28($fp)
 1309 0c9c 6400C58F 		lw	$5,100($fp)
 1310              		.option	pic0
 1311 0ca0 0000000C 		jal	CursorDup
 1312 0ca4 00000000 		nop
 1313              	
 1314              		.option	pic2
 1315 0ca8 1000DC8F 		lw	$28,16($fp)
 119:bgtree/bgApi.c ****   CursorDup(bb, b);
 1316              		.loc 2 120 0
 1317 0cac 1800C48F 		lw	$4,24($fp)
 1318 0cb0 6800C58F 		lw	$5,104($fp)
 1319              		.option	pic0
 1320 0cb4 0000000C 		jal	CursorDup
 1321 0cb8 00000000 		nop
 1322              	
 1323              		.option	pic2
 1324 0cbc 1000DC8F 		lw	$28,16($fp)
 120:bgtree/bgApi.c ****   c.u.binaryInfo.a = aa;
 1325              		.loc 2 121 0
 1326 0cc0 1C00C28F 		lw	$2,28($fp)
 1327 0cc4 00000000 		nop
 1328 0cc8 2400C2AF 		sw	$2,36($fp)
 121:bgtree/bgApi.c ****   c.u.binaryInfo.b = bb;
 1329              		.loc 2 122 0
 1330 0ccc 1800C28F 		lw	$2,24($fp)
 1331 0cd0 00000000 		nop
 1332 0cd4 2800C2AF 		sw	$2,40($fp)
 122:bgtree/bgApi.c ****   c.nextFunc = &CursorUnionNext;
 1333              		.loc 2 123 0
 1334 0cd8 0000023C 		lui	$2,%hi(CursorUnionNext)
 1335 0cdc 00004224 		addiu	$2,$2,%lo(CursorUnionNext)
 1336 0ce0 2000C2AF 		sw	$2,32($fp)
 123:bgtree/bgApi.c ****   return c;
 1337              		.loc 2 124 0
 1338 0ce4 2000C78F 		lw	$7,32($fp)
 1339 0ce8 2400C68F 		lw	$6,36($fp)
 1340 0cec 2800C58F 		lw	$5,40($fp)
 1341 0cf0 2C00C48F 		lw	$4,44($fp)
 1342 0cf4 3000C38F 		lw	$3,48($fp)
 1343 0cf8 3400C28F 		lw	$2,52($fp)
 1344 0cfc 000007AE 		sw	$7,0($16)
 1345 0d00 040006AE 		sw	$6,4($16)
 1346 0d04 080005AE 		sw	$5,8($16)
 1347 0d08 0C0004AE 		sw	$4,12($16)
 1348 0d0c 100003AE 		sw	$3,16($16)
 1349 0d10 140002AE 		sw	$2,20($16)
 124:bgtree/bgApi.c **** }
 1350              		.loc 2 125 0
 1351 0d14 21100002 		move	$2,$16
 1352 0d18 21E8C003 		move	$sp,$fp
 1353 0d1c 5C00BF8F 		lw	$31,92($sp)
 1354 0d20 5800BE8F 		lw	$fp,88($sp)
 1355 0d24 5400B18F 		lw	$17,84($sp)
 1356 0d28 5000B08F 		lw	$16,80($sp)
 1357 0d2c 6000BD27 		addiu	$sp,$sp,96
 1358 0d30 0800E003 		j	$31
 1359 0d34 00000000 		nop
 1360              	
 1361              		.set	macro
 1362              		.set	reorder
 1363              		.end	Union
 1364              	$LFE12:
 1366              		.align	2
 1367              		.globl	Intersection
 1368              	$LFB13 = .
 125:bgtree/bgApi.c **** 
 126:bgtree/bgApi.c **** Cursor Intersection(Cursor *a, Cursor *b) {
 1369              		.loc 2 127 0
 1370              		.set	nomips16
 1371              		.ent	Intersection
 1373              	Intersection:
 1374              		.frame	$fp,96,$31		# vars= 56, regs= 4/0, args= 16, gp= 8
 1375              		.mask	0xc0030000,-4
 1376              		.fmask	0x00000000,0
 1377              		.set	noreorder
 1378              		.set	nomacro
 1379              		
 1380 0d38 A0FFBD27 		addiu	$sp,$sp,-96
 1381              	$LCFI57:
 1382 0d3c 5C00BFAF 		sw	$31,92($sp)
 1383              	$LCFI58:
 1384 0d40 5800BEAF 		sw	$fp,88($sp)
 1385              	$LCFI59:
 1386 0d44 5400B1AF 		sw	$17,84($sp)
 1387              	$LCFI60:
 1388 0d48 5000B0AF 		sw	$16,80($sp)
 1389              	$LCFI61:
 1390 0d4c 21F0A003 		move	$fp,$sp
 1391              	$LCFI62:
 1392 0d50 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1393 0d54 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1394 0d58 1000BCAF 		.cprestore	16
 1395 0d5c 21808000 		move	$16,$4
 1396 0d60 6400C5AF 		sw	$5,100($fp)
 1397 0d64 6800C6AF 		sw	$6,104($fp)
 127:bgtree/bgApi.c ****   Cursor c;
 128:bgtree/bgApi.c ****   Cursor *aa = (Cursor *) malloc(sizeof(Cursor));
 1398              		.loc 2 129 0
 1399 0d68 18000424 		li	$4,24			# 0x18
 1400 0d6c 0000828F 		lw	$2,%call16(malloc)($28)
 1401 0d70 00000000 		nop
 1402 0d74 21C84000 		move	$25,$2
 1403 0d78 09F82003 		jalr	$25
 1404 0d7c 00000000 		nop
 1405              	
 1406 0d80 1000DC8F 		lw	$28,16($fp)
 1407 0d84 1C00C2AF 		sw	$2,28($fp)
 129:bgtree/bgApi.c ****   *aa = CursorCreateInvalid();
 1408              		.loc 2 130 0
 1409 0d88 1C00D18F 		lw	$17,28($fp)
 1410 0d8c 3800C227 		addiu	$2,$fp,56
 1411 0d90 21204000 		move	$4,$2
 1412              		.option	pic0
 1413 0d94 0E00000C 		jal	CursorCreateInvalid
 1414 0d98 00000000 		nop
 1415              	
 1416              		.option	pic2
 1417 0d9c 1000DC8F 		lw	$28,16($fp)
 1418 0da0 3800C78F 		lw	$7,56($fp)
 1419 0da4 3C00C68F 		lw	$6,60($fp)
 1420 0da8 4000C58F 		lw	$5,64($fp)
 1421 0dac 4400C48F 		lw	$4,68($fp)
 1422 0db0 4800C38F 		lw	$3,72($fp)
 1423 0db4 4C00C28F 		lw	$2,76($fp)
 1424 0db8 000027AE 		sw	$7,0($17)
 1425 0dbc 040026AE 		sw	$6,4($17)
 1426 0dc0 080025AE 		sw	$5,8($17)
 1427 0dc4 0C0024AE 		sw	$4,12($17)
 1428 0dc8 100023AE 		sw	$3,16($17)
 1429 0dcc 140022AE 		sw	$2,20($17)
 130:bgtree/bgApi.c ****   Cursor *bb = (Cursor *) malloc(sizeof(Cursor));
 1430              		.loc 2 131 0
 1431 0dd0 18000424 		li	$4,24			# 0x18
 1432 0dd4 0000828F 		lw	$2,%call16(malloc)($28)
 1433 0dd8 00000000 		nop
 1434 0ddc 21C84000 		move	$25,$2
 1435 0de0 09F82003 		jalr	$25
 1436 0de4 00000000 		nop
 1437              	
 1438 0de8 1000DC8F 		lw	$28,16($fp)
 1439 0dec 1800C2AF 		sw	$2,24($fp)
 131:bgtree/bgApi.c ****   *bb = CursorCreateInvalid();
 1440              		.loc 2 132 0
 1441 0df0 1800D18F 		lw	$17,24($fp)
 1442 0df4 3800C227 		addiu	$2,$fp,56
 1443 0df8 21204000 		move	$4,$2
 1444              		.option	pic0
 1445 0dfc 0E00000C 		jal	CursorCreateInvalid
 1446 0e00 00000000 		nop
 1447              	
 1448              		.option	pic2
 1449 0e04 1000DC8F 		lw	$28,16($fp)
 1450 0e08 3800C78F 		lw	$7,56($fp)
 1451 0e0c 3C00C68F 		lw	$6,60($fp)
 1452 0e10 4000C58F 		lw	$5,64($fp)
 1453 0e14 4400C48F 		lw	$4,68($fp)
 1454 0e18 4800C38F 		lw	$3,72($fp)
 1455 0e1c 4C00C28F 		lw	$2,76($fp)
 1456 0e20 000027AE 		sw	$7,0($17)
 1457 0e24 040026AE 		sw	$6,4($17)
 1458 0e28 080025AE 		sw	$5,8($17)
 1459 0e2c 0C0024AE 		sw	$4,12($17)
 1460 0e30 100023AE 		sw	$3,16($17)
 1461 0e34 140022AE 		sw	$2,20($17)
 132:bgtree/bgApi.c ****   CursorDup(aa, a);
 1462              		.loc 2 133 0
 1463 0e38 1C00C48F 		lw	$4,28($fp)
 1464 0e3c 6400C58F 		lw	$5,100($fp)
 1465              		.option	pic0
 1466 0e40 0000000C 		jal	CursorDup
 1467 0e44 00000000 		nop
 1468              	
 1469              		.option	pic2
 1470 0e48 1000DC8F 		lw	$28,16($fp)
 133:bgtree/bgApi.c ****   CursorDup(bb, b);
 1471              		.loc 2 134 0
 1472 0e4c 1800C48F 		lw	$4,24($fp)
 1473 0e50 6800C58F 		lw	$5,104($fp)
 1474              		.option	pic0
 1475 0e54 0000000C 		jal	CursorDup
 1476 0e58 00000000 		nop
 1477              	
 1478              		.option	pic2
 1479 0e5c 1000DC8F 		lw	$28,16($fp)
 134:bgtree/bgApi.c ****   c.u.binaryInfo.a = aa;
 1480              		.loc 2 135 0
 1481 0e60 1C00C28F 		lw	$2,28($fp)
 1482 0e64 00000000 		nop
 1483 0e68 2400C2AF 		sw	$2,36($fp)
 135:bgtree/bgApi.c ****   c.u.binaryInfo.b = bb;
 1484              		.loc 2 136 0
 1485 0e6c 1800C28F 		lw	$2,24($fp)
 1486 0e70 00000000 		nop
 1487 0e74 2800C2AF 		sw	$2,40($fp)
 136:bgtree/bgApi.c ****   c.u.binaryInfo.aLastValue = CursorNext(a);
 1488              		.loc 2 137 0
 1489 0e78 6400C48F 		lw	$4,100($fp)
 1490              		.option	pic0
 1491 0e7c 0000000C 		jal	CursorNext
 1492 0e80 00000000 		nop
 1493              	
 1494              		.option	pic2
 1495 0e84 1000DC8F 		lw	$28,16($fp)
 1496 0e88 2C00C2AF 		sw	$2,44($fp)
 137:bgtree/bgApi.c ****   c.u.binaryInfo.bLastValue = CursorNext(b);
 1497              		.loc 2 138 0
 1498 0e8c 6800C48F 		lw	$4,104($fp)
 1499              		.option	pic0
 1500 0e90 0000000C 		jal	CursorNext
 1501 0e94 00000000 		nop
 1502              	
 1503              		.option	pic2
 1504 0e98 1000DC8F 		lw	$28,16($fp)
 1505 0e9c 3000C2AF 		sw	$2,48($fp)
 138:bgtree/bgApi.c ****   c.nextFunc = &CursorIntersectionNext;
 1506              		.loc 2 139 0
 1507 0ea0 0000023C 		lui	$2,%hi(CursorIntersectionNext)
 1508 0ea4 00004224 		addiu	$2,$2,%lo(CursorIntersectionNext)
 1509 0ea8 2000C2AF 		sw	$2,32($fp)
 139:bgtree/bgApi.c ****   return c;
 1510              		.loc 2 140 0
 1511 0eac 2000C78F 		lw	$7,32($fp)
 1512 0eb0 2400C68F 		lw	$6,36($fp)
 1513 0eb4 2800C58F 		lw	$5,40($fp)
 1514 0eb8 2C00C48F 		lw	$4,44($fp)
 1515 0ebc 3000C38F 		lw	$3,48($fp)
 1516 0ec0 3400C28F 		lw	$2,52($fp)
 1517 0ec4 000007AE 		sw	$7,0($16)
 1518 0ec8 040006AE 		sw	$6,4($16)
 1519 0ecc 080005AE 		sw	$5,8($16)
 1520 0ed0 0C0004AE 		sw	$4,12($16)
 1521 0ed4 100003AE 		sw	$3,16($16)
 1522 0ed8 140002AE 		sw	$2,20($16)
 140:bgtree/bgApi.c **** }
 1523              		.loc 2 141 0
 1524 0edc 21100002 		move	$2,$16
 1525 0ee0 21E8C003 		move	$sp,$fp
 1526 0ee4 5C00BF8F 		lw	$31,92($sp)
 1527 0ee8 5800BE8F 		lw	$fp,88($sp)
 1528 0eec 5400B18F 		lw	$17,84($sp)
 1529 0ef0 5000B08F 		lw	$16,80($sp)
 1530 0ef4 6000BD27 		addiu	$sp,$sp,96
 1531 0ef8 0800E003 		j	$31
 1532 0efc 00000000 		nop
 1533              	
 1534              		.set	macro
 1535              		.set	reorder
 1536              		.end	Intersection
 1537              	$LFE13:
 1539              		.align	2
 1540              		.globl	CursorDup
 1541              	$LFB14 = .
 141:bgtree/bgApi.c **** 
 142:bgtree/bgApi.c **** void CursorDup(Cursor *dest, Cursor *src) {
 1542              		.loc 2 143 0
 1543              		.set	nomips16
 1544              		.ent	CursorDup
 1546              	CursorDup:
 1547              		.frame	$fp,72,$31		# vars= 32, regs= 3/0, args= 16, gp= 8
 1548              		.mask	0xc0010000,-4
 1549              		.fmask	0x00000000,0
 1550              		.set	noreorder
 1551              		.set	nomacro
 1552              		
 1553 0f00 B8FFBD27 		addiu	$sp,$sp,-72
 1554              	$LCFI63:
 1555 0f04 4400BFAF 		sw	$31,68($sp)
 1556              	$LCFI64:
 1557 0f08 4000BEAF 		sw	$fp,64($sp)
 1558              	$LCFI65:
 1559 0f0c 3C00B0AF 		sw	$16,60($sp)
 1560              	$LCFI66:
 1561 0f10 21F0A003 		move	$fp,$sp
 1562              	$LCFI67:
 1563 0f14 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1564 0f18 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1565 0f1c 1000BCAF 		.cprestore	16
 1566 0f20 4800C4AF 		sw	$4,72($fp)
 1567 0f24 4C00C5AF 		sw	$5,76($fp)
 143:bgtree/bgApi.c ****   CursorDestroy(dest);
 1568              		.loc 2 144 0
 1569 0f28 4800C48F 		lw	$4,72($fp)
 1570              		.option	pic0
 1571 0f2c 0000000C 		jal	CursorDestroy
 1572 0f30 00000000 		nop
 1573              	
 1574              		.option	pic2
 1575 0f34 1000DC8F 		lw	$28,16($fp)
 144:bgtree/bgApi.c ****   *dest = *src;
 1576              		.loc 2 145 0
 1577 0f38 4800C28F 		lw	$2,72($fp)
 1578 0f3c 4C00C38F 		lw	$3,76($fp)
 1579 0f40 00000000 		nop
 1580 0f44 0000688C 		lw	$8,0($3)
 1581 0f48 0400678C 		lw	$7,4($3)
 1582 0f4c 0800668C 		lw	$6,8($3)
 1583 0f50 0C00658C 		lw	$5,12($3)
 1584 0f54 1000648C 		lw	$4,16($3)
 1585 0f58 1400638C 		lw	$3,20($3)
 1586 0f5c 000048AC 		sw	$8,0($2)
 1587 0f60 040047AC 		sw	$7,4($2)
 1588 0f64 080046AC 		sw	$6,8($2)
 1589 0f68 0C0045AC 		sw	$5,12($2)
 1590 0f6c 100044AC 		sw	$4,16($2)
 1591 0f70 140043AC 		sw	$3,20($2)
 145:bgtree/bgApi.c ****   if (src->nextFunc == &CursorIntersectionNext
 146:bgtree/bgApi.c ****       || src->nextFunc == &CursorUnionNext) 
 1592              		.loc 2 147 0
 1593 0f74 4C00C28F 		lw	$2,76($fp)
 1594 0f78 00000000 		nop
 1595 0f7c 0000438C 		lw	$3,0($2)
 146:bgtree/bgApi.c ****       || src->nextFunc == &CursorUnionNext) 
 1596              		.loc 2 146 0
 1597 0f80 0000023C 		lui	$2,%hi(CursorIntersectionNext)
 1598 0f84 00004224 		addiu	$2,$2,%lo(CursorIntersectionNext)
 1599 0f88 08006210 		beq	$3,$2,$L45
 1600 0f8c 00000000 		nop
 1601              	
 1602              		.loc 2 147 0
 1603 0f90 4C00C28F 		lw	$2,76($fp)
 1604 0f94 00000000 		nop
 1605 0f98 0000438C 		lw	$3,0($2)
 1606 0f9c 0000023C 		lui	$2,%hi(CursorUnionNext)
 1607 0fa0 00004224 		addiu	$2,$2,%lo(CursorUnionNext)
 1608 0fa4 4D006214 		bne	$3,$2,$L47
 1609 0fa8 00000000 		nop
 1610              	
 1611              	$L45:
 1612              	$LBB5 = .
 147:bgtree/bgApi.c ****   {
 148:bgtree/bgApi.c ****     Cursor *aa = (Cursor *) malloc(sizeof(Cursor));
 1613              		.loc 2 149 0
 1614 0fac 18000424 		li	$4,24			# 0x18
 1615 0fb0 0000828F 		lw	$2,%call16(malloc)($28)
 1616 0fb4 00000000 		nop
 1617 0fb8 21C84000 		move	$25,$2
 1618 0fbc 09F82003 		jalr	$25
 1619 0fc0 00000000 		nop
 1620              	
 1621 0fc4 1000DC8F 		lw	$28,16($fp)
 1622 0fc8 1C00C2AF 		sw	$2,28($fp)
 149:bgtree/bgApi.c ****     *aa = CursorCreateInvalid();
 1623              		.loc 2 150 0
 1624 0fcc 1C00D08F 		lw	$16,28($fp)
 1625 0fd0 2000C227 		addiu	$2,$fp,32
 1626 0fd4 21204000 		move	$4,$2
 1627              		.option	pic0
 1628 0fd8 0E00000C 		jal	CursorCreateInvalid
 1629 0fdc 00000000 		nop
 1630              	
 1631              		.option	pic2
 1632 0fe0 1000DC8F 		lw	$28,16($fp)
 1633 0fe4 2000C78F 		lw	$7,32($fp)
 1634 0fe8 2400C68F 		lw	$6,36($fp)
 1635 0fec 2800C58F 		lw	$5,40($fp)
 1636 0ff0 2C00C48F 		lw	$4,44($fp)
 1637 0ff4 3000C38F 		lw	$3,48($fp)
 1638 0ff8 3400C28F 		lw	$2,52($fp)
 1639 0ffc 000007AE 		sw	$7,0($16)
 1640 1000 040006AE 		sw	$6,4($16)
 1641 1004 080005AE 		sw	$5,8($16)
 1642 1008 0C0004AE 		sw	$4,12($16)
 1643 100c 100003AE 		sw	$3,16($16)
 1644 1010 140002AE 		sw	$2,20($16)
 150:bgtree/bgApi.c ****     Cursor *bb = (Cursor *) malloc(sizeof(Cursor));
 1645              		.loc 2 151 0
 1646 1014 18000424 		li	$4,24			# 0x18
 1647 1018 0000828F 		lw	$2,%call16(malloc)($28)
 1648 101c 00000000 		nop
 1649 1020 21C84000 		move	$25,$2
 1650 1024 09F82003 		jalr	$25
 1651 1028 00000000 		nop
 1652              	
 1653 102c 1000DC8F 		lw	$28,16($fp)
 1654 1030 1800C2AF 		sw	$2,24($fp)
 151:bgtree/bgApi.c ****     *bb = CursorCreateInvalid();
 1655              		.loc 2 152 0
 1656 1034 1800D08F 		lw	$16,24($fp)
 1657 1038 2000C227 		addiu	$2,$fp,32
 1658 103c 21204000 		move	$4,$2
 1659              		.option	pic0
 1660 1040 0E00000C 		jal	CursorCreateInvalid
 1661 1044 00000000 		nop
 1662              	
 1663              		.option	pic2
 1664 1048 1000DC8F 		lw	$28,16($fp)
 1665 104c 2000C78F 		lw	$7,32($fp)
 1666 1050 2400C68F 		lw	$6,36($fp)
 1667 1054 2800C58F 		lw	$5,40($fp)
 1668 1058 2C00C48F 		lw	$4,44($fp)
 1669 105c 3000C38F 		lw	$3,48($fp)
 1670 1060 3400C28F 		lw	$2,52($fp)
 1671 1064 000007AE 		sw	$7,0($16)
 1672 1068 040006AE 		sw	$6,4($16)
 1673 106c 080005AE 		sw	$5,8($16)
 1674 1070 0C0004AE 		sw	$4,12($16)
 1675 1074 100003AE 		sw	$3,16($16)
 1676 1078 140002AE 		sw	$2,20($16)
 152:bgtree/bgApi.c ****     CursorDup(aa, src->u.binaryInfo.a);
 1677              		.loc 2 153 0
 1678 107c 4C00C28F 		lw	$2,76($fp)
 1679 1080 00000000 		nop
 1680 1084 0400428C 		lw	$2,4($2)
 1681 1088 1C00C48F 		lw	$4,28($fp)
 1682 108c 21284000 		move	$5,$2
 1683              		.option	pic0
 1684 1090 0000000C 		jal	CursorDup
 1685 1094 00000000 		nop
 1686              	
 1687              		.option	pic2
 1688 1098 1000DC8F 		lw	$28,16($fp)
 153:bgtree/bgApi.c ****     CursorDup(bb, src->u.binaryInfo.b);
 1689              		.loc 2 154 0
 1690 109c 4C00C28F 		lw	$2,76($fp)
 1691 10a0 00000000 		nop
 1692 10a4 0800428C 		lw	$2,8($2)
 1693 10a8 1800C48F 		lw	$4,24($fp)
 1694 10ac 21284000 		move	$5,$2
 1695              		.option	pic0
 1696 10b0 0000000C 		jal	CursorDup
 1697 10b4 00000000 		nop
 1698              	
 1699              		.option	pic2
 1700 10b8 1000DC8F 		lw	$28,16($fp)
 154:bgtree/bgApi.c ****     dest->u.binaryInfo.a = aa;
 1701              		.loc 2 155 0
 1702 10bc 4800C28F 		lw	$2,72($fp)
 1703 10c0 1C00C38F 		lw	$3,28($fp)
 1704 10c4 00000000 		nop
 1705 10c8 040043AC 		sw	$3,4($2)
 155:bgtree/bgApi.c ****     dest->u.binaryInfo.b = bb;
 1706              		.loc 2 156 0
 1707 10cc 4800C28F 		lw	$2,72($fp)
 1708 10d0 1800C38F 		lw	$3,24($fp)
 1709 10d4 00000000 		nop
 1710 10d8 080043AC 		sw	$3,8($2)
 1711              	$L47:
 1712              	$LBE5 = .
 156:bgtree/bgApi.c ****   }
 157:bgtree/bgApi.c **** }
 1713              		.loc 2 158 0
 1714 10dc 21E8C003 		move	$sp,$fp
 1715 10e0 4400BF8F 		lw	$31,68($sp)
 1716 10e4 4000BE8F 		lw	$fp,64($sp)
 1717 10e8 3C00B08F 		lw	$16,60($sp)
 1718 10ec 4800BD27 		addiu	$sp,$sp,72
 1719 10f0 0800E003 		j	$31
 1720 10f4 00000000 		nop
 1721              	
 1722              		.set	macro
 1723              		.set	reorder
 1724              		.end	CursorDup
 1725              	$LFE14:
 1727              		.align	2
 1728              		.globl	CursorDestroy
 1729              	$LFB15 = .
 158:bgtree/bgApi.c **** 
 159:bgtree/bgApi.c **** void CursorDestroy(Cursor *c) {
 1730              		.loc 2 160 0
 1731              		.set	nomips16
 1732              		.ent	CursorDestroy
 1734              	CursorDestroy:
 1735              		.frame	$fp,32,$31		# vars= 0, regs= 2/0, args= 16, gp= 8
 1736              		.mask	0xc0000000,-4
 1737              		.fmask	0x00000000,0
 1738              		.set	noreorder
 1739              		.set	nomacro
 1740              		
 1741 10f8 E0FFBD27 		addiu	$sp,$sp,-32
 1742              	$LCFI68:
 1743 10fc 1C00BFAF 		sw	$31,28($sp)
 1744              	$LCFI69:
 1745 1100 1800BEAF 		sw	$fp,24($sp)
 1746              	$LCFI70:
 1747 1104 21F0A003 		move	$fp,$sp
 1748              	$LCFI71:
 1749 1108 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1750 110c 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1751 1110 1000BCAF 		.cprestore	16
 1752 1114 2000C4AF 		sw	$4,32($fp)
 160:bgtree/bgApi.c ****   if (CursorIsInvalid(c))
 1753              		.loc 2 161 0
 1754 1118 2000C48F 		lw	$4,32($fp)
 1755              		.option	pic0
 1756 111c 0000000C 		jal	CursorIsInvalid
 1757 1120 00000000 		nop
 1758              	
 1759              		.option	pic2
 1760 1124 1000DC8F 		lw	$28,16($fp)
 1761 1128 43004014 		bne	$2,$0,$L54
 1762 112c 00000000 		nop
 1763              	
 1764              	$L49:
 161:bgtree/bgApi.c ****     return;
 162:bgtree/bgApi.c ****   if (c->nextFunc == &CursorIntersectionNext
 163:bgtree/bgApi.c ****       || c->nextFunc == &CursorUnionNext) 
 1765              		.loc 2 164 0
 1766 1130 2000C28F 		lw	$2,32($fp)
 1767 1134 00000000 		nop
 1768 1138 0000438C 		lw	$3,0($2)
 163:bgtree/bgApi.c ****       || c->nextFunc == &CursorUnionNext) 
 1769              		.loc 2 163 0
 1770 113c 0000023C 		lui	$2,%hi(CursorIntersectionNext)
 1771 1140 00004224 		addiu	$2,$2,%lo(CursorIntersectionNext)
 1772 1144 08006210 		beq	$3,$2,$L51
 1773 1148 00000000 		nop
 1774              	
 1775              		.loc 2 164 0
 1776 114c 2000C28F 		lw	$2,32($fp)
 1777 1150 00000000 		nop
 1778 1154 0000438C 		lw	$3,0($2)
 1779 1158 0000023C 		lui	$2,%hi(CursorUnionNext)
 1780 115c 00004224 		addiu	$2,$2,%lo(CursorUnionNext)
 1781 1160 36006214 		bne	$3,$2,$L53
 1782 1164 00000000 		nop
 1783              	
 1784              	$L51:
 164:bgtree/bgApi.c ****   {
 165:bgtree/bgApi.c ****     if (c->u.binaryInfo.a) {
 1785              		.loc 2 166 0
 1786 1168 2000C28F 		lw	$2,32($fp)
 1787 116c 00000000 		nop
 1788 1170 0400428C 		lw	$2,4($2)
 1789 1174 00000000 		nop
 1790 1178 14004010 		beq	$2,$0,$L52
 1791 117c 00000000 		nop
 1792              	
 166:bgtree/bgApi.c ****       CursorDestroy(c->u.binaryInfo.a);
 1793              		.loc 2 167 0
 1794 1180 2000C28F 		lw	$2,32($fp)
 1795 1184 00000000 		nop
 1796 1188 0400428C 		lw	$2,4($2)
 1797 118c 00000000 		nop
 1798 1190 21204000 		move	$4,$2
 1799              		.option	pic0
 1800 1194 0000000C 		jal	CursorDestroy
 1801 1198 00000000 		nop
 1802              	
 1803              		.option	pic2
 1804 119c 1000DC8F 		lw	$28,16($fp)
 167:bgtree/bgApi.c ****       free(c->u.binaryInfo.a);
 1805              		.loc 2 168 0
 1806 11a0 2000C28F 		lw	$2,32($fp)
 1807 11a4 00000000 		nop
 1808 11a8 0400428C 		lw	$2,4($2)
 1809 11ac 00000000 		nop
 1810 11b0 21204000 		move	$4,$2
 1811 11b4 0000828F 		lw	$2,%call16(free)($28)
 1812 11b8 00000000 		nop
 1813 11bc 21C84000 		move	$25,$2
 1814 11c0 09F82003 		jalr	$25
 1815 11c4 00000000 		nop
 1816              	
 1817 11c8 1000DC8F 		lw	$28,16($fp)
 1818              	$L52:
 168:bgtree/bgApi.c ****     }
 169:bgtree/bgApi.c ****     if (c->u.binaryInfo.b) {
 1819              		.loc 2 170 0
 1820 11cc 2000C28F 		lw	$2,32($fp)
 1821 11d0 00000000 		nop
 1822 11d4 0800428C 		lw	$2,8($2)
 1823 11d8 00000000 		nop
 1824 11dc 17004010 		beq	$2,$0,$L53
 1825 11e0 00000000 		nop
 1826              	
 170:bgtree/bgApi.c ****       CursorDestroy(c->u.binaryInfo.b);
 1827              		.loc 2 171 0
 1828 11e4 2000C28F 		lw	$2,32($fp)
 1829 11e8 00000000 		nop
 1830 11ec 0800428C 		lw	$2,8($2)
 1831 11f0 00000000 		nop
 1832 11f4 21204000 		move	$4,$2
 1833              		.option	pic0
 1834 11f8 0000000C 		jal	CursorDestroy
 1835 11fc 00000000 		nop
 1836              	
 1837              		.option	pic2
 1838 1200 1000DC8F 		lw	$28,16($fp)
 171:bgtree/bgApi.c ****       free(c->u.binaryInfo.b);
 1839              		.loc 2 172 0
 1840 1204 2000C28F 		lw	$2,32($fp)
 1841 1208 00000000 		nop
 1842 120c 0800428C 		lw	$2,8($2)
 1843 1210 00000000 		nop
 1844 1214 21204000 		move	$4,$2
 1845 1218 0000828F 		lw	$2,%call16(free)($28)
 1846 121c 00000000 		nop
 1847 1220 21C84000 		move	$25,$2
 1848 1224 09F82003 		jalr	$25
 1849 1228 00000000 		nop
 1850              	
 1851 122c 1000DC8F 		lw	$28,16($fp)
 1852 1230 02000010 		b	$L53
 1853 1234 00000000 		nop
 1854              	
 1855              	$L54:
 162:bgtree/bgApi.c ****     return;
 1856              		.loc 2 162 0
 1857 1238 00000000 		nop
 1858              	$L53:
 172:bgtree/bgApi.c ****     }
 173:bgtree/bgApi.c ****   }
 174:bgtree/bgApi.c **** }
 1859              		.loc 2 175 0
 1860 123c 21E8C003 		move	$sp,$fp
 1861 1240 1C00BF8F 		lw	$31,28($sp)
 1862 1244 1800BE8F 		lw	$fp,24($sp)
 1863 1248 2000BD27 		addiu	$sp,$sp,32
 1864 124c 0800E003 		j	$31
 1865 1250 00000000 		nop
 1866              	
 1867              		.set	macro
 1868              		.set	reorder
 1869              		.end	CursorDestroy
 1870              	$LFE15:
 1872              		.align	2
 1873              		.globl	CursorPeek
 1874              	$LFB16 = .
 175:bgtree/bgApi.c **** 
 176:bgtree/bgApi.c **** BAT CursorPeek(Cursor *c) {
 1875              		.loc 2 177 0
 1876              		.set	nomips16
 1877              		.ent	CursorPeek
 1879              	CursorPeek:
 1880              		.frame	$fp,64,$31		# vars= 32, regs= 2/0, args= 16, gp= 8
 1881              		.mask	0xc0000000,-4
 1882              		.fmask	0x00000000,0
 1883              		.set	noreorder
 1884              		.set	nomacro
 1885              		
 1886 1254 C0FFBD27 		addiu	$sp,$sp,-64
 1887              	$LCFI72:
 1888 1258 3C00BFAF 		sw	$31,60($sp)
 1889              	$LCFI73:
 1890 125c 3800BEAF 		sw	$fp,56($sp)
 1891              	$LCFI74:
 1892 1260 21F0A003 		move	$fp,$sp
 1893              	$LCFI75:
 1894 1264 4000C4AF 		sw	$4,64($fp)
 177:bgtree/bgApi.c ****   Cursor d = CursorCreateInvalid();
 1895              		.loc 2 178 0
 1896 1268 1C00C227 		addiu	$2,$fp,28
 1897 126c 21204000 		move	$4,$2
 1898              		.option	pic0
 1899 1270 0E00000C 		jal	CursorCreateInvalid
 1900 1274 00000000 		nop
 1901              	
 1902              		.option	pic2
 178:bgtree/bgApi.c ****   CursorDup(&d, c);
 1903              		.loc 2 179 0
 1904 1278 1C00C227 		addiu	$2,$fp,28
 1905 127c 21204000 		move	$4,$2
 1906 1280 4000C58F 		lw	$5,64($fp)
 1907              		.option	pic0
 1908 1284 0000000C 		jal	CursorDup
 1909 1288 00000000 		nop
 1910              	
 1911              		.option	pic2
 179:bgtree/bgApi.c ****   BAT b = CursorNext(&d);
 1912              		.loc 2 180 0
 1913 128c 1C00C227 		addiu	$2,$fp,28
 1914 1290 21204000 		move	$4,$2
 1915              		.option	pic0
 1916 1294 0000000C 		jal	CursorNext
 1917 1298 00000000 		nop
 1918              	
 1919              		.option	pic2
 1920 129c 1800C2AF 		sw	$2,24($fp)
 180:bgtree/bgApi.c ****   CursorDestroy(&d);
 1921              		.loc 2 181 0
 1922 12a0 1C00C227 		addiu	$2,$fp,28
 1923 12a4 21204000 		move	$4,$2
 1924              		.option	pic0
 1925 12a8 0000000C 		jal	CursorDestroy
 1926 12ac 00000000 		nop
 1927              	
 1928              		.option	pic2
 181:bgtree/bgApi.c ****   return b;
 1929              		.loc 2 182 0
 1930 12b0 1800C28F 		lw	$2,24($fp)
 182:bgtree/bgApi.c **** }
 1931              		.loc 2 183 0
 1932 12b4 21E8C003 		move	$sp,$fp
 1933 12b8 3C00BF8F 		lw	$31,60($sp)
 1934 12bc 3800BE8F 		lw	$fp,56($sp)
 1935 12c0 4000BD27 		addiu	$sp,$sp,64
 1936 12c4 0800E003 		j	$31
 1937 12c8 00000000 		nop
 1938              	
 1939              		.set	macro
 1940              		.set	reorder
 1941              		.end	CursorPeek
 1942              	$LFE16:
 1944              		.align	2
 1945              		.globl	CalcTreeSize
 1946              	$LFB17 = .
 183:bgtree/bgApi.c **** 
 184:bgtree/bgApi.c **** int CalcTreeSize(int numItems) {
 1947              		.loc 2 185 0
 1948              		.set	nomips16
 1949              		.ent	CalcTreeSize
 1951              	CalcTreeSize:
 1952              		.frame	$fp,32,$31		# vars= 0, regs= 2/0, args= 16, gp= 8
 1953              		.mask	0xc0000000,-4
 1954              		.fmask	0x00000000,0
 1955              		.set	noreorder
 1956              		.set	nomacro
 1957              		
 1958 12cc E0FFBD27 		addiu	$sp,$sp,-32
 1959              	$LCFI76:
 1960 12d0 1C00BFAF 		sw	$31,28($sp)
 1961              	$LCFI77:
 1962 12d4 1800BEAF 		sw	$fp,24($sp)
 1963              	$LCFI78:
 1964 12d8 21F0A003 		move	$fp,$sp
 1965              	$LCFI79:
 1966 12dc 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 1967 12e0 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 1968 12e4 1000BCAF 		.cprestore	16
 1969 12e8 2000C4AF 		sw	$4,32($fp)
 185:bgtree/bgApi.c ****   return CalcTreeSize2(numItems, CalcMinimumDepth(numItems));
 1970              		.loc 2 186 0
 1971 12ec 2000C48F 		lw	$4,32($fp)
 1972 12f0 0000828F 		lw	$2,%call16(CalcMinimumDepth)($28)
 1973 12f4 00000000 		nop
 1974 12f8 21C84000 		move	$25,$2
 1975 12fc 09F82003 		jalr	$25
 1976 1300 00000000 		nop
 1977              	
 1978 1304 1000DC8F 		lw	$28,16($fp)
 1979 1308 2000C48F 		lw	$4,32($fp)
 1980 130c 21284000 		move	$5,$2
 1981 1310 0000828F 		lw	$2,%call16(CalcTreeSize2)($28)
 1982 1314 00000000 		nop
 1983 1318 21C84000 		move	$25,$2
 1984 131c 09F82003 		jalr	$25
 1985 1320 00000000 		nop
 1986              	
 1987 1324 1000DC8F 		lw	$28,16($fp)
 186:bgtree/bgApi.c **** }
 1988              		.loc 2 187 0
 1989 1328 21E8C003 		move	$sp,$fp
 1990 132c 1C00BF8F 		lw	$31,28($sp)
 1991 1330 1800BE8F 		lw	$fp,24($sp)
 1992 1334 2000BD27 		addiu	$sp,$sp,32
 1993 1338 0800E003 		j	$31
 1994 133c 00000000 		nop
 1995              	
 1996              		.set	macro
 1997              		.set	reorder
 1998              		.end	CalcTreeSize
 1999              	$LFE17:
 2001              		.align	2
 2002              		.globl	TreeCreate
 2003              	$LFB18 = .
 187:bgtree/bgApi.c **** 
 188:bgtree/bgApi.c **** BgTree TreeCreate(int numItems, void *userData) {
 2004              		.loc 2 189 0
 2005              		.set	nomips16
 2006              		.ent	TreeCreate
 2008              	TreeCreate:
 2009              		.frame	$fp,184,$31		# vars= 144, regs= 3/0, args= 16, gp= 8
 2010              		.mask	0xc0010000,-4
 2011              		.fmask	0x00000000,0
 2012              		.set	noreorder
 2013              		.set	nomacro
 2014              		
 2015 1340 48FFBD27 		addiu	$sp,$sp,-184
 2016              	$LCFI80:
 2017 1344 B400BFAF 		sw	$31,180($sp)
 2018              	$LCFI81:
 2019 1348 B000BEAF 		sw	$fp,176($sp)
 2020              	$LCFI82:
 2021 134c AC00B0AF 		sw	$16,172($sp)
 2022              	$LCFI83:
 2023 1350 21F0A003 		move	$fp,$sp
 2024              	$LCFI84:
 2025 1354 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 2026 1358 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 2027 135c 1000BCAF 		.cprestore	16
 2028 1360 21808000 		move	$16,$4
 2029 1364 BC00C5AF 		sw	$5,188($fp)
 2030 1368 C000C6AF 		sw	$6,192($fp)
 189:bgtree/bgApi.c ****   int depth = CalcMinimumDepth(numItems);
 2031              		.loc 2 190 0
 2032 136c BC00C48F 		lw	$4,188($fp)
 2033 1370 0000828F 		lw	$2,%call16(CalcMinimumDepth)($28)
 2034 1374 00000000 		nop
 2035 1378 21C84000 		move	$25,$2
 2036 137c 09F82003 		jalr	$25
 2037 1380 00000000 		nop
 2038              	
 2039 1384 1000DC8F 		lw	$28,16($fp)
 2040 1388 1C00C2AF 		sw	$2,28($fp)
 190:bgtree/bgApi.c ****   BlockAddrT top = AllocBlock(GetUserData());
 2041              		.loc 2 191 0
 2042 138c 0000828F 		lw	$2,%call16(GetUserData)($28)
 2043 1390 00000000 		nop
 2044 1394 21C84000 		move	$25,$2
 2045 1398 09F82003 		jalr	$25
 2046 139c 00000000 		nop
 2047              	
 2048 13a0 1000DC8F 		lw	$28,16($fp)
 2049 13a4 21204000 		move	$4,$2
 2050 13a8 0000828F 		lw	$2,%call16(AllocBlock)($28)
 2051 13ac 00000000 		nop
 2052 13b0 21C84000 		move	$25,$2
 2053 13b4 09F82003 		jalr	$25
 2054 13b8 00000000 		nop
 2055              	
 2056 13bc 1000DC8F 		lw	$28,16($fp)
 2057 13c0 1800C2AF 		sw	$2,24($fp)
 191:bgtree/bgApi.c ****   Node topNode;
 192:bgtree/bgApi.c ****   NodeInit(&topNode);
 2058              		.loc 2 193 0
 2059 13c4 2000C227 		addiu	$2,$fp,32
 2060 13c8 21204000 		move	$4,$2
 2061 13cc 0000828F 		lw	$2,%call16(NodeInit)($28)
 2062 13d0 00000000 		nop
 2063 13d4 21C84000 		move	$25,$2
 2064 13d8 09F82003 		jalr	$25
 2065 13dc 00000000 		nop
 2066              	
 2067 13e0 1000DC8F 		lw	$28,16($fp)
 193:bgtree/bgApi.c ****   topNode.depth = depth;
 2068              		.loc 2 194 0
 2069 13e4 1C00C28F 		lw	$2,28($fp)
 2070 13e8 00000000 		nop
 2071 13ec FF004230 		andi	$2,$2,0x00ff
 2072 13f0 2400C2A3 		sb	$2,36($fp)
 194:bgtree/bgApi.c ****   NodeSave(&topNode, top);
 2073              		.loc 2 195 0
 2074 13f4 2000C227 		addiu	$2,$fp,32
 2075 13f8 21204000 		move	$4,$2
 2076 13fc 1800C58F 		lw	$5,24($fp)
 2077 1400 0000828F 		lw	$2,%call16(NodeSave)($28)
 2078 1404 00000000 		nop
 2079 1408 21C84000 		move	$25,$2
 2080 140c 09F82003 		jalr	$25
 2081 1410 00000000 		nop
 2082              	
 2083 1414 1000DC8F 		lw	$28,16($fp)
 195:bgtree/bgApi.c ****   BgTree tree;
 196:bgtree/bgApi.c ****   tree.topNode = top;
 2084              		.loc 2 197 0
 2085 1418 1800C28F 		lw	$2,24($fp)
 2086 141c 00000000 		nop
 2087 1420 A000C2AF 		sw	$2,160($fp)
 197:bgtree/bgApi.c ****   tree.userData = userData;
 2088              		.loc 2 198 0
 2089 1424 C000C28F 		lw	$2,192($fp)
 2090 1428 00000000 		nop
 2091 142c A400C2AF 		sw	$2,164($fp)
 198:bgtree/bgApi.c ****   return tree;
 2092              		.loc 2 199 0
 2093 1430 A000C38F 		lw	$3,160($fp)
 2094 1434 A400C28F 		lw	$2,164($fp)
 2095 1438 000003AE 		sw	$3,0($16)
 2096 143c 040002AE 		sw	$2,4($16)
 199:bgtree/bgApi.c **** }
 2097              		.loc 2 200 0
 2098 1440 21100002 		move	$2,$16
 2099 1444 21E8C003 		move	$sp,$fp
 2100 1448 B400BF8F 		lw	$31,180($sp)
 2101 144c B000BE8F 		lw	$fp,176($sp)
 2102 1450 AC00B08F 		lw	$16,172($sp)
 2103 1454 B800BD27 		addiu	$sp,$sp,184
 2104 1458 0800E003 		j	$31
 2105 145c 00000000 		nop
 2106              	
 2107              		.set	macro
 2108              		.set	reorder
 2109              		.end	TreeCreate
 2110              	$LFE18:
 2112              		.align	2
 2113              		.globl	TreeInit
 2114              	$LFB19 = .
 200:bgtree/bgApi.c **** 
 201:bgtree/bgApi.c **** void TreeInit(BgTree *t, void *userData) {
 2115              		.loc 2 202 0
 2116              		.set	nomips16
 2117              		.ent	TreeInit
 2119              	TreeInit:
 2120              		.frame	$fp,8,$31		# vars= 0, regs= 1/0, args= 0, gp= 0
 2121              		.mask	0x40000000,-4
 2122              		.fmask	0x00000000,0
 2123              		.set	noreorder
 2124              		.set	nomacro
 2125              		
 2126 1460 F8FFBD27 		addiu	$sp,$sp,-8
 2127              	$LCFI85:
 2128 1464 0400BEAF 		sw	$fp,4($sp)
 2129              	$LCFI86:
 2130 1468 21F0A003 		move	$fp,$sp
 2131              	$LCFI87:
 2132 146c 0800C4AF 		sw	$4,8($fp)
 2133 1470 0C00C5AF 		sw	$5,12($fp)
 202:bgtree/bgApi.c ****   t->topNode = 0x0;
 2134              		.loc 2 203 0
 2135 1474 0800C28F 		lw	$2,8($fp)
 2136 1478 00000000 		nop
 2137 147c 000040AC 		sw	$0,0($2)
 203:bgtree/bgApi.c ****   t->userData = userData;
 2138              		.loc 2 204 0
 2139 1480 0800C28F 		lw	$2,8($fp)
 2140 1484 0C00C38F 		lw	$3,12($fp)
 2141 1488 00000000 		nop
 2142 148c 040043AC 		sw	$3,4($2)
 204:bgtree/bgApi.c **** }
 2143              		.loc 2 205 0
 2144 1490 21E8C003 		move	$sp,$fp
 2145 1494 0400BE8F 		lw	$fp,4($sp)
 2146 1498 0800BD27 		addiu	$sp,$sp,8
 2147 149c 0800E003 		j	$31
 2148 14a0 00000000 		nop
 2149              	
 2150              		.set	macro
 2151              		.set	reorder
 2152              		.end	TreeInit
 2153              	$LFE19:
 2155              		.rdata
 2156              		.align	2
 2157              	$LC0:
 2158 0000 6C617374 		.ascii	"last != ((BlockAddrT) -1)\000"
 2158      20213D20 
 2158      2828426C 
 2158      6F636B41 
 2158      64647254 
 2159 001a 0000     		.align	2
 2160              	$LC1:
 2161 001c 62677472 		.ascii	"bgtree/bgApi.c\000"
 2161      65652F62 
 2161      67417069 
 2161      2E6300
 2162              		.text
 2163              		.align	2
 2164              		.globl	TreeAppend
 2165              	$LFB20 = .
 205:bgtree/bgApi.c **** 
 206:bgtree/bgApi.c **** void TreeAppend(BgTree tree,  KeyT key, BAT value) {
 2166              		.loc 2 207 0
 2167              		.set	nomips16
 2168              		.ent	TreeAppend
 2170              	TreeAppend:
 2171              		.frame	$fp,176,$31		# vars= 144, regs= 2/0, args= 16, gp= 8
 2172              		.mask	0xc0000000,-4
 2173              		.fmask	0x00000000,0
 2174              		.set	noreorder
 2175              		.set	nomacro
 2176              		
 2177 14a4 50FFBD27 		addiu	$sp,$sp,-176
 2178              	$LCFI88:
 2179 14a8 AC00BFAF 		sw	$31,172($sp)
 2180              	$LCFI89:
 2181 14ac A800BEAF 		sw	$fp,168($sp)
 2182              	$LCFI90:
 2183 14b0 21F0A003 		move	$fp,$sp
 2184              	$LCFI91:
 2185 14b4 00001C3C 		lui	$28,%hi(__gnu_local_gp)
 2186 14b8 00009C27 		addiu	$28,$28,%lo(__gnu_local_gp)
 2187 14bc 1000BCAF 		.cprestore	16
 2188 14c0 B000C4AF 		sw	$4,176($fp)
 2189 14c4 B400C5AF 		sw	$5,180($fp)
 2190 14c8 B800C6AF 		sw	$6,184($fp)
 2191 14cc BC00C7AF 		sw	$7,188($fp)
 207:bgtree/bgApi.c ****   int n;
 208:bgtree/bgApi.c ****   SetUserData(tree.userData);
 2192              		.loc 2 209 0
 2193 14d0 B400C28F 		lw	$2,180($fp)
 2194 14d4 00000000 		nop
 2195 14d8 21204000 		move	$4,$2
 2196 14dc 0000828F 		lw	$2,%call16(SetUserData)($28)
 2197 14e0 00000000 		nop
 2198 14e4 21C84000 		move	$25,$2
 2199 14e8 09F82003 		jalr	$25
 2200 14ec 00000000 		nop
 2201              	
 2202 14f0 1000DC8F 		lw	$28,16($fp)
 209:bgtree/bgApi.c ****   BAT topNode = tree.topNode;
 2203              		.loc 2 210 0
 2204 14f4 B000C28F 		lw	$2,176($fp)
 2205 14f8 00000000 		nop
 2206 14fc 2000C2AF 		sw	$2,32($fp)
 210:bgtree/bgApi.c ****   BAT last = GetLastNodeOfDepth(topNode, 0);
 2207              		.loc 2 211 0
 2208 1500 2000C48F 		lw	$4,32($fp)
 2209 1504 21280000 		move	$5,$0
 2210 1508 0000828F 		lw	$2,%call16(GetLastNodeOfDepth)($28)
 2211 150c 00000000 		nop
 2212 1510 21C84000 		move	$25,$2
 2213 1514 09F82003 		jalr	$25
 2214 1518 00000000 		nop
 2215              	
 2216 151c 1000DC8F 		lw	$28,16($fp)
 2217 1520 1C00C2AF 		sw	$2,28($fp)
 211:bgtree/bgApi.c ****   if ((last == BAInvalid) || (NodeLen(last) == ItemsPerNode)) { // filled, create one or more new n
 2218              		.loc 2 212 0
 2219 1524 1C00C38F 		lw	$3,28($fp)
 2220 1528 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2221 152c 0C006210 		beq	$3,$2,$L64
 2222 1530 00000000 		nop
 2223              	
 2224 1534 1C00C48F 		lw	$4,28($fp)
 2225 1538 0000828F 		lw	$2,%call16(NodeLen)($28)
 2226 153c 00000000 		nop
 2227 1540 21C84000 		move	$25,$2
 2228 1544 09F82003 		jalr	$25
 2229 1548 00000000 		nop
 2230              	
 2231 154c 1000DC8F 		lw	$28,16($fp)
 2232 1550 21184000 		move	$3,$2
 2233 1554 0F000224 		li	$2,15			# 0xf
 2234 1558 1C006214 		bne	$3,$2,$L65
 2235 155c 00000000 		nop
 2236              	
 2237              	$L64:
 212:bgtree/bgApi.c ****     last = AppendNewLeafNode(topNode);
 2238              		.loc 2 213 0
 2239 1560 2000C48F 		lw	$4,32($fp)
 2240 1564 0000828F 		lw	$2,%call16(AppendNewLeafNode)($28)
 2241 1568 00000000 		nop
 2242 156c 21C84000 		move	$25,$2
 2243 1570 09F82003 		jalr	$25
 2244 1574 00000000 		nop
 2245              	
 2246 1578 1000DC8F 		lw	$28,16($fp)
 2247 157c 1C00C2AF 		sw	$2,28($fp)
 213:bgtree/bgApi.c ****     assert(last != BAInvalid);
 2248              		.loc 2 214 0
 2249 1580 1C00C38F 		lw	$3,28($fp)
 2250 1584 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2251 1588 0D006214 		bne	$3,$2,$L66
 2252 158c 00000000 		nop
 2253              	
 2254 1590 0000023C 		lui	$2,%hi($LC0)
 2255 1594 00004424 		addiu	$4,$2,%lo($LC0)
 2256 1598 0000023C 		lui	$2,%hi($LC1)
 2257 159c 1C004524 		addiu	$5,$2,%lo($LC1)
 2258 15a0 D6000624 		li	$6,214			# 0xd6
 2259 15a4 0000023C 		lui	$2,%hi(__PRETTY_FUNCTION__.2174)
 2260 15a8 2C004724 		addiu	$7,$2,%lo(__PRETTY_FUNCTION__.2174)
 2261 15ac 0000828F 		lw	$2,%call16(__assert_fail)($28)
 2262 15b0 00000000 		nop
 2263 15b4 21C84000 		move	$25,$2
 2264 15b8 09F82003 		jalr	$25
 2265 15bc 00000000 		nop
 2266              	
 2267              	$L66:
 214:bgtree/bgApi.c ****     n = 0;
 2268              		.loc 2 215 0
 2269 15c0 2400C0AF 		sw	$0,36($fp)
 212:bgtree/bgApi.c ****     last = AppendNewLeafNode(topNode);
 2270              		.loc 2 212 0
 2271 15c4 09000010 		b	$L67
 2272 15c8 00000000 		nop
 2273              	
 2274              	$L65:
 215:bgtree/bgApi.c ****   } else {
 216:bgtree/bgApi.c ****     n = NodeLen(last);
 2275              		.loc 2 217 0
 2276 15cc 1C00C48F 		lw	$4,28($fp)
 2277 15d0 0000828F 		lw	$2,%call16(NodeLen)($28)
 2278 15d4 00000000 		nop
 2279 15d8 21C84000 		move	$25,$2
 2280 15dc 09F82003 		jalr	$25
 2281 15e0 00000000 		nop
 2282              	
 2283 15e4 1000DC8F 		lw	$28,16($fp)
 2284 15e8 2400C2AF 		sw	$2,36($fp)
 2285              	$L67:
 2286              	$LBB6 = .
 217:bgtree/bgApi.c ****   }
 218:bgtree/bgApi.c ****   {Node nLast; NodeLoad(&nLast, last);
 2287              		.loc 2 219 0
 2288 15ec 2800C227 		addiu	$2,$fp,40
 2289 15f0 21204000 		move	$4,$2
 2290 15f4 1C00C58F 		lw	$5,28($fp)
 2291 15f8 0000828F 		lw	$2,%call16(NodeLoad)($28)
 2292 15fc 00000000 		nop
 2293 1600 21C84000 		move	$25,$2
 2294 1604 09F82003 		jalr	$25
 2295 1608 00000000 		nop
 2296              	
 2297 160c 1000DC8F 		lw	$28,16($fp)
 219:bgtree/bgApi.c ****     nLast.keys[n] = key;
 2298              		.loc 2 220 0
 2299 1610 2400C28F 		lw	$2,36($fp)
 2300 1614 00000000 		nop
 2301 1618 02004224 		addiu	$2,$2,2
 2302 161c 80100200 		sll	$2,$2,2
 2303 1620 1800C327 		addiu	$3,$fp,24
 2304 1624 21106200 		addu	$2,$3,$2
 2305 1628 B800C38F 		lw	$3,184($fp)
 2306 162c 00000000 		nop
 2307 1630 100043AC 		sw	$3,16($2)
 220:bgtree/bgApi.c ****     nLast.items[n] = value;
 2308              		.loc 2 221 0
 2309 1634 2400C28F 		lw	$2,36($fp)
 2310 1638 00000000 		nop
 2311 163c 10004224 		addiu	$2,$2,16
 2312 1640 80100200 		sll	$2,$2,2
 2313 1644 1800C327 		addiu	$3,$fp,24
 2314 1648 21106200 		addu	$2,$3,$2
 2315 164c BC00C38F 		lw	$3,188($fp)
 2316 1650 00000000 		nop
 2317 1654 140043AC 		sw	$3,20($2)
 221:bgtree/bgApi.c ****     nLast.length = n+1;
 2318              		.loc 2 222 0
 2319 1658 2400C28F 		lw	$2,36($fp)
 2320 165c 00000000 		nop
 2321 1660 FF004230 		andi	$2,$2,0x00ff
 2322 1664 01004224 		addiu	$2,$2,1
 2323 1668 FF004230 		andi	$2,$2,0x00ff
 2324 166c 2D00C2A3 		sb	$2,45($fp)
 222:bgtree/bgApi.c ****     NodeSave(&nLast, last);
 2325              		.loc 2 223 0
 2326 1670 2800C227 		addiu	$2,$fp,40
 2327 1674 21204000 		move	$4,$2
 2328 1678 1C00C58F 		lw	$5,28($fp)
 2329 167c 0000828F 		lw	$2,%call16(NodeSave)($28)
 2330 1680 00000000 		nop
 2331 1684 21C84000 		move	$25,$2
 2332 1688 09F82003 		jalr	$25
 2333 168c 00000000 		nop
 2334              	
 2335 1690 1000DC8F 		lw	$28,16($fp)
 2336              	$LBE6 = .
 2337              	$LBB7 = .
 223:bgtree/bgApi.c ****   }
 224:bgtree/bgApi.c ****   // key is by definition the highest in the tree so far
 225:bgtree/bgApi.c ****   for (BAT upNode = NodeParent(last); upNode != BAInvalid; upNode = NodeParent(upNode)) {
 2338              		.loc 2 226 0
 2339 1694 1C00C48F 		lw	$4,28($fp)
 2340 1698 0000828F 		lw	$2,%call16(NodeParent)($28)
 2341 169c 00000000 		nop
 2342 16a0 21C84000 		move	$25,$2
 2343 16a4 09F82003 		jalr	$25
 2344 16a8 00000000 		nop
 2345              	
 2346 16ac 1000DC8F 		lw	$28,16($fp)
 2347 16b0 1800C2AF 		sw	$2,24($fp)
 2348 16b4 25000010 		b	$L68
 2349 16b8 00000000 		nop
 2350              	
 2351              	$L69:
 2352              	$LBB8 = .
 226:bgtree/bgApi.c ****     Node up; NodeLoad(&up, upNode);
 2353              		.loc 2 227 0
 2354 16bc 2800C227 		addiu	$2,$fp,40
 2355 16c0 21204000 		move	$4,$2
 2356 16c4 1800C58F 		lw	$5,24($fp)
 2357 16c8 0000828F 		lw	$2,%call16(NodeLoad)($28)
 2358 16cc 00000000 		nop
 2359 16d0 21C84000 		move	$25,$2
 2360 16d4 09F82003 		jalr	$25
 2361 16d8 00000000 		nop
 2362              	
 2363 16dc 1000DC8F 		lw	$28,16($fp)
 227:bgtree/bgApi.c ****     up.keys[up.length - 1] = key;
 2364              		.loc 2 228 0
 2365 16e0 2D00C293 		lbu	$2,45($fp)
 2366 16e4 00000000 		nop
 2367 16e8 FFFF4224 		addiu	$2,$2,-1
 2368 16ec 02004224 		addiu	$2,$2,2
 2369 16f0 80100200 		sll	$2,$2,2
 2370 16f4 1800C327 		addiu	$3,$fp,24
 2371 16f8 21106200 		addu	$2,$3,$2
 2372 16fc B800C38F 		lw	$3,184($fp)
 2373 1700 00000000 		nop
 2374 1704 100043AC 		sw	$3,16($2)
 228:bgtree/bgApi.c ****     NodeSave(&up, upNode);
 2375              		.loc 2 229 0
 2376 1708 2800C227 		addiu	$2,$fp,40
 2377 170c 21204000 		move	$4,$2
 2378 1710 1800C58F 		lw	$5,24($fp)
 2379 1714 0000828F 		lw	$2,%call16(NodeSave)($28)
 2380 1718 00000000 		nop
 2381 171c 21C84000 		move	$25,$2
 2382 1720 09F82003 		jalr	$25
 2383 1724 00000000 		nop
 2384              	
 2385 1728 1000DC8F 		lw	$28,16($fp)
 2386              	$LBE8 = .
 226:bgtree/bgApi.c ****     Node up; NodeLoad(&up, upNode);
 2387              		.loc 2 226 0
 2388 172c 1800C48F 		lw	$4,24($fp)
 2389 1730 0000828F 		lw	$2,%call16(NodeParent)($28)
 2390 1734 00000000 		nop
 2391 1738 21C84000 		move	$25,$2
 2392 173c 09F82003 		jalr	$25
 2393 1740 00000000 		nop
 2394              	
 2395 1744 1000DC8F 		lw	$28,16($fp)
 2396 1748 1800C2AF 		sw	$2,24($fp)
 2397              	$L68:
 2398 174c 1800C38F 		lw	$3,24($fp)
 2399 1750 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 2400 1754 D9FF6214 		bne	$3,$2,$L69
 2401 1758 00000000 		nop
 2402              	
 2403              	$LBE7 = .
 229:bgtree/bgApi.c ****   }
 230:bgtree/bgApi.c ****   SetUserData(0x0);
 2404              		.loc 2 231 0
 2405 175c 21200000 		move	$4,$0
 2406 1760 0000828F 		lw	$2,%call16(SetUserData)($28)
 2407 1764 00000000 		nop
 2408 1768 21C84000 		move	$25,$2
 2409 176c 09F82003 		jalr	$25
 2410 1770 00000000 		nop
 2411              	
 2412 1774 1000DC8F 		lw	$28,16($fp)
 231:bgtree/bgApi.c **** }
 2413              		.loc 2 232 0
 2414 1778 21E8C003 		move	$sp,$fp
 2415 177c AC00BF8F 		lw	$31,172($sp)
 2416 1780 A800BE8F 		lw	$fp,168($sp)
 2417 1784 B000BD27 		addiu	$sp,$sp,176
 2418 1788 0800E003 		j	$31
 2419 178c 00000000 		nop
 2420              	
 2421              		.set	macro
 2422              		.set	reorder
 2423              		.end	TreeAppend
 2424              	$LFE20:
 2426              		.rdata
 2427 002b 00       		.align	2
 2430              	__PRETTY_FUNCTION__.2174:
 2431 002c 54726565 		.ascii	"TreeAppend\000"
 2431      41707065 
 2431      6E6400
 2976              	$Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bgtree/bgApi.h
     /tmp/ccxhGmeZ.s:20     .text:0000000000000000 CursorIsInvalid
     /tmp/ccxhGmeZ.s:58     .text:0000000000000038 CursorCreateInvalid
     /tmp/ccxhGmeZ.s:107    .text:0000000000000090 CursorKeyNext
     /tmp/ccxhGmeZ.s:274    .text:000000000000025c CursorConsecutiveKeysNext
     /tmp/ccxhGmeZ.s:457    .text:000000000000045c CursorUnionNext
     /tmp/ccxhGmeZ.s:727    .text:0000000000000694 CursorNext
     /tmp/ccxhGmeZ.s:532    .text:00000000000004e8 CursorIntersectionNext
     /tmp/ccxhGmeZ.s:692    .text:000000000000066c CursorUniqueNext
     /tmp/ccxhGmeZ.s:772    .text:00000000000006dc CursorInit
     /tmp/ccxhGmeZ.s:857    .text:00000000000007b4 SelectKey
     /tmp/ccxhGmeZ.s:978    .text:0000000000000904 SelectConsecutiveKeys
     /tmp/ccxhGmeZ.s:1099   .text:0000000000000a54 SelectAll
     /tmp/ccxhGmeZ.s:1218   .text:0000000000000b98 Union
     /tmp/ccxhGmeZ.s:1546   .text:0000000000000f00 CursorDup
     /tmp/ccxhGmeZ.s:1373   .text:0000000000000d38 Intersection
     /tmp/ccxhGmeZ.s:1734   .text:00000000000010f8 CursorDestroy
     /tmp/ccxhGmeZ.s:1879   .text:0000000000001254 CursorPeek
     /tmp/ccxhGmeZ.s:1951   .text:00000000000012cc CalcTreeSize
     /tmp/ccxhGmeZ.s:2008   .text:0000000000001340 TreeCreate
     /tmp/ccxhGmeZ.s:2119   .text:0000000000001460 TreeInit
     /tmp/ccxhGmeZ.s:2170   .text:00000000000014a4 TreeAppend
     /tmp/ccxhGmeZ.s:2430   .rodata:000000000000002c __PRETTY_FUNCTION__.2174

UNDEFINED SYMBOLS
__gnu_local_gp
SetUserData
NodeKeyLoad
NodeItemLoad
RowPtrNext
RowPtrInit
FindInternal
NodeFindFirstChild
malloc
free
CalcMinimumDepth
CalcTreeSize2
GetUserData
AllocBlock
NodeInit
NodeSave
GetLastNodeOfDepth
NodeLen
AppendNewLeafNode
__assert_fail
NodeLoad
NodeParent
